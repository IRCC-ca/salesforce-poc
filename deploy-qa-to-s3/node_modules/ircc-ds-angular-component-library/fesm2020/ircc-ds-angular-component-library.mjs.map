{"version":3,"file":"ircc-ds-angular-component-library.mjs","sources":["../../../component-lib/src/shared/functions/stand-alone.functions.ts","../../../component-lib/src/shared/constants/jl-components.constants.ts","../../../component-lib/src/shared/pipes/autocomplete.pipe.ts","../../../component-lib/src/lib/banner-component/banner/banner.service.ts","../../../component-lib/src/lib/shared/icon/icon.component.ts","../../../component-lib/src/lib/shared/icon/icon.component.html","../../../component-lib/src/lib/shared/button/button.component.ts","../../../component-lib/src/lib/shared/button/button.component.html","../../../component-lib/src/lib/shared/icon-button/icon-button.component.ts","../../../component-lib/src/lib/shared/icon-button/icon-button.component.html","../../../component-lib/src/lib/banner-component/banner/banner.component.ts","../../../component-lib/src/lib/banner-component/banner/banner.component.html","../../../component-lib/src/lib/shared/tabs/tabs.component.ts","../../../component-lib/src/lib/shared/tabs/tabs.component.html","../../../component-lib/src/lib/shared/progress-tags/progress-tags.component.ts","../../../component-lib/src/lib/shared/progress-tags/progress-tags.component.html","../../../component-lib/src/lib/shared/flyout-option/flyout-option.component.ts","../../../component-lib/src/lib/shared/flyout-option/flyout-option.component.html","../../../component-lib/src/lib/shared/flyout/flyout.component.ts","../../../component-lib/src/lib/shared/flyout/flyout.component.html","../../../component-lib/src/lib/shared/dropdown/drop-down.component.ts","../../../component-lib/src/lib/shared/dropdown/drop-down.component.html","../../../component-lib/src/lib/shared/label/label-button.service.ts","../../../component-lib/src/lib/shared/label/label.component.ts","../../../component-lib/src/lib/shared/label/label.component.html","../../../component-lib/src/lib/shared/progress-indicator/progress-indicator.component.ts","../../../component-lib/src/lib/shared/progress-indicator/progress-indicator.component.html","../../../component-lib/src/lib/shared/breadcrumb/link/link.component.ts","../../../component-lib/src/lib/shared/breadcrumb/link/link.component.html","../../../component-lib/src/shared/directives/dom-change.directive.ts","../../../component-lib/src/lib/shared/breadcrumb/breadcrumb.component.ts","../../../component-lib/src/lib/shared/breadcrumb/breadcrumb.component.html","../../../component-lib/src/lib/shared/indicator/indicator.component.ts","../../../component-lib/src/lib/shared/indicator/indicator.component.html","../../../component-lib/src/lib/shared/spinner/spinner.component.ts","../../../component-lib/src/lib/shared/spinner/spinner.component.html","../../../component-lib/src/lib/shared/dynamic-image/dynamic-image.component.ts","../../../component-lib/src/lib/shared/dynamic-image/dynamic-image.component.html","../../../component-lib/src/shared/pipes/pipes.module.ts","../../../component-lib/src/lib/shared/ircc-ds-angular-component-shared.module.ts","../../../component-lib/src/lib/banner-component/ircc-ds-angular-banner.module.ts","../../../component-lib/src/lib/form-components/error/error.component.ts","../../../component-lib/src/lib/form-components/error/error.component.html","../../../component-lib/src/lib/form-components/input/input.component.ts","../../../component-lib/src/lib/form-components/input/input.component.html","../../../component-lib/src/lib/form-components/radio-input/radio-input.component.ts","../../../component-lib/src/lib/form-components/radio-input/radio-input.component.html","../../../component-lib/src/lib/form-components/multi-checkbox/multi-checkbox.service.ts","../../../component-lib/src/lib/form-components/checkbox/checkbox.component.ts","../../../component-lib/src/lib/form-components/checkbox/checkbox.component.html","../../../component-lib/src/lib/form-components/select/select.component.ts","../../../component-lib/src/lib/form-components/select/select.component.html","../../../component-lib/src/lib/form-components/date-picker/date-picker.component.ts","../../../component-lib/src/lib/form-components/date-picker/date-picker.component.html","../../../component-lib/src/lib/form-components/textarea/textarea.component.ts","../../../component-lib/src/lib/form-components/textarea/textarea.component.html","../../../component-lib/src/lib/form-components/multi-checkbox/multi-checkbox.component.ts","../../../component-lib/src/lib/form-components/multi-checkbox/multi-checkbox.component.html","../../../component-lib/src/lib/form-components/autocomplete/autocomplete.component.ts","../../../component-lib/src/lib/form-components/autocomplete/autocomplete.component.html","../../../component-lib/src/lib/form-components/ircc-ds-angular-form-components.module.ts","../../../component-lib/src/lib/header-footer/header-footer-const.component.ts","../../../component-lib/src/lib/header-footer/language-switch/language-header-footer-switch.service.ts","../../../component-lib/src/lib/header-footer/language-switch/language-switch.component.ts","../../../component-lib/src/lib/header-footer/language-switch/language-switch.component.html","../../../component-lib/src/lib/header-footer/theme-switch/theme-switch.component.ts","../../../component-lib/src/lib/header-footer/theme-switch/theme-switch.component.html","../../../component-lib/src/lib/header-footer/header/header.component.ts","../../../component-lib/src/lib/header-footer/header/header.component.html","../../../component-lib/src/lib/header-footer/footer/footer.component.ts","../../../component-lib/src/lib/header-footer/footer/footer.component.html","../../../component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.ts","../../../component-lib/src/lib/header-footer/hidden-nav/hidden-nav.component.html","../../../component-lib/src/lib/header-footer/ircc-ds-angular-header-footer.module.ts","../../../component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.ts","../../../component-lib/src/lib/legacy-old/chips/chip-item/chip-item.component.html","../../../component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.ts","../../../component-lib/src/lib/legacy-old/autocomplete/autocomplete.component.html","../../../component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.ts","../../../component-lib/src/lib/legacy-old/chips/chip-list/chip-list.component.html","../../../component-lib/src/lib/legacy-old/chips/secondary-chips/secondary-chips.component.ts","../../../component-lib/src/lib/legacy-old/chips/secondary-chips/secondary-chips.component.html","../../../component-lib/src/lib/legacy-old/search-input/search-input.component.ts","../../../component-lib/src/lib/legacy-old/search-input/search-input.component.html","../../../component-lib/src/lib/legacy-old/ircc-ds-angular-legacy-old.module.ts","../../../component-lib/src/lib/shared/navigation/navigation.service.ts","../../../component-lib/src/lib/shared/navigation/nav-item-heading/nav-item-heading.component.ts","../../../component-lib/src/lib/shared/navigation/nav-item-heading/nav-item-heading.component.html","../../../component-lib/src/lib/shared/navigation/nav-item-nav/nav-item-nav.component.ts","../../../component-lib/src/lib/shared/navigation/nav-item-nav/nav-item-nav.component.html","../../../component-lib/src/lib/shared/navigation/nav-item-accordion/nav-item-accordion.component.ts","../../../component-lib/src/lib/shared/navigation/nav-item-accordion/nav-item-accordion.component.html","../../../component-lib/src/lib/shared/navigation/nav-item-divider/nav-item-divider.component.ts","../../../component-lib/src/lib/shared/navigation/nav-item-divider/nav-item-divider.component.html","../../../component-lib/src/lib/shared/navigation/navigation.component.ts","../../../component-lib/src/lib/shared/navigation/navigation.component.html","../../../component-lib/src/lib/shared/navigation/nav-item-status/nav-item-status.component.ts","../../../component-lib/src/lib/shared/navigation/nav-item-status/nav-item-status.component.html","../../../component-lib/src/lib/shared/navigation/ircc-ds-angular-navigation.module.ts","../../../component-lib/src/lib/shared/navigation/navigation.types.ts","../../../component-lib/src/public-api.ts","../../../component-lib/src/ircc-ds-angular-component-library.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../lib/shared/label/label.component';\nimport { IErrorPairs } from '../interfaces/component-configs';\n\nexport interface IErrorIDs {\n  id?: string;\n  key: string;\n  errorLOV: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StandAloneFunctions {\n  constructor(private translate: TranslateService) {}\n\n  getErrorAria(formGroup: FormGroup, id: string, errorMessages: IErrorPairs[]) {\n    let returnError = '';\n    if (formGroup.get(id)?.dirty && formGroup.get(id)?.invalid) {\n      errorMessages?.forEach((error) => {\n        if (formGroup.get(id)?.errors?.[error.key]) {\n          returnError === ''\n            ? (returnError += this.translate.instant(error.errorLOV))\n            : (returnError += ', ' + this.translate.instant(error.errorLOV));\n        }\n      });\n      returnError += '.';\n    }\n    return returnError;\n  }\n\n  /**\n   * When run, returns an IErrorIds object. It generates IDs based on the errorMessages object\n   * and which errors are currently in effect, thereby ensuring that the first element is given\n   * an id ending in _error0\n   * @param formGroup\n   * @param id of the parent (input) component\n   * @param errorMessages: IErrorPairs[]\n   * @returns errorIds: IErrorIDs[]\n   */\n  getErrorIds(formGroup: FormGroup, id: string, errorMessages: IErrorPairs[]) {\n    let errorIds: IErrorIDs[] = [];\n    errorMessages?.forEach((message) => {\n      errorIds.push({ key: message.key, errorLOV: message.errorLOV });\n    });\n\n    //Code block to get errors that have occurred before the statusChange obs is activated\n    let i = 0;\n    errorIds.forEach((error) => {\n      if (formGroup.get(id)?.errors?.[error.key]) {\n        error.id = id + '_error' + i;\n        i++;\n      }\n    });\n\n    formGroup.get(id)?.statusChanges.subscribe((change) => {\n      let i = 0;\n      errorIds.forEach((error) => {\n        if (formGroup.get(id)?.errors?.[error.key]) {\n          error.id = id + '_error' + i;\n          i++;\n        }\n      });\n    });\n    return errorIds;\n  }\n\n  /**\n   * Given a form group & form control id, set errors & mark as touch on specific form controls\n   * @param formGroup\n   * @param formID ID of form control\n   * @param errorKeys\n   */\n  setFormErrors(formGroup: FormGroup, formID: string, errorKeys: string[]) {\n    const errorVals = {};\n    if (errorKeys.length === 0) {\n      formGroup.get(formID)?.setErrors(null);\n    } else {\n      errorKeys.forEach((error) => {\n        errorVals[error] = true;\n      });\n      formGroup.get(formID)?.setErrors(errorVals);\n      formGroup.get(formID)?.markAsTouched();\n    }\n  }\n\n  /**\n   * Create a label config - for use inside form input components\n   * @param formGroup\n   * @param id\n   * @param parentID\n   * @param errorMessages\n   * @param label\n   * @param desc\n   * @param hint\n   * @param required\n   */\n  makeLabelConfig(\n    formGroup: FormGroup,\n    parentID: string,\n    errorMessages?: IErrorPairs[],\n    label?: string,\n    desc?: string,\n    hint?: string,\n    required?: boolean,\n    iconButton?: ILabelIconConfig,\n    topLabel?: string\n  ) {\n    const config: ILabelConfig = {\n      formGroup: formGroup,\n      parentID: parentID,\n      errorMessages: errorMessages,\n      label: label,\n      desc: desc,\n      hint: hint,\n      required: required,\n      iconButton: iconButton,\n      topLabel: topLabel\n    };\n    return config;\n  }\n\n  /**\n   * A function designed to deal with how AWFUL Safari is. Safari does not consider touched to be a valid state in <body>,\n   * therefore this is needed to force it to acknowledge the state.\n   * @param formGroup\n   * @param id of the parent (input) component\n   */\n  wasTouched(formGroup: FormGroup, id: string) {\n    formGroup.get(id)?.markAsTouched();\n  }\n\n  /**\n   * Get the current base url.\n   * @param baseUrl\n   * @param baseUrlKey Translation key of base url\n   */\n  getBaseUrl(baseUrl: string = '', baseUrlKey?: string): string {\n    const curLang = this.translate.currentLang;\n    const langKey = curLang === 'en-US' || curLang === 'en' ? 'en' : 'fr';\n    let i: string | string[] = window.location.href.slice(\n      window.location.href.indexOf(langKey),\n      window.location.href.length\n    );\n    i = i.split('/');\n\n    let index = 0;\n    for (const j of i) {\n      if (j === this.translate.instant(baseUrlKey ?? '')) {\n        baseUrl += '/' + j;\n        // Should halt when find the base url segment\n        break;\n      } else if (index !== i.length - 1) {\n        baseUrl += '/' + j;\n        index += 1;\n      }\n    }\n    if (baseUrl[baseUrl.length] !== '/') baseUrl += '/';\n\n    return baseUrl;\n  }\n}\n","export enum DropdownTypes {\n  input = 'input',\n  cta = 'cta'\n}\n\nexport enum DropDownActions {\n  addApplications = 'add-applications',\n  filterApplications = 'filter-applications'\n}\n\nexport enum DSSizes {\n  large = 'large',\n  small = 'small'\n}\n\nexport enum DSFullSizes {\n  large = 'large',\n  small = 'small',\n  extraSmall = 'extraSmall'\n}\n\nexport enum DSOrientations {\n  horizontal = 'horizontal',\n  vertical = 'vertical'\n}\n\nexport enum DSViewPortSize {\n  default = 0,\n  mobile = 768, // Anything less than 768px is mobile\n  tablet = 992, // Anything between 768px & 992px is tablet\n  desktop = 1366\n}\n","import { Pipe, PipeTransform, SecurityContext } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({ name: 'autocomplete' })\nexport class autocompletePipe implements PipeTransform {\n  constructor(private domSanitizer: DomSanitizer) {}\n\n  transform(value: string, searched: string = ''): any {\n    if (searched.length === 0) {\n      return this.sanitize(`${value}`);\n    }\n    return this.sanitize(\n      `<span class=\"bolded\">${this.replace(value, searched)}</span>`\n    );\n  }\n\n  replace(str: string, searched: string) {\n    return str.replace(\n      new RegExp(`(${searched})`, 'i'),\n      '<span class=\"normal\">$1</span>'\n    );\n  }\n\n  sanitize(str: string) {\n    return this.domSanitizer.sanitize(SecurityContext.HTML, str);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { IBannerConfig } from './banner.component';\n\ninterface IBannerToggle {\n  id: string;\n  value: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BannerService {\n  private bannerSubj = new BehaviorSubject<IBannerConfig>({\n    id: ''\n  });\n  bannerSubjObs$ = this.bannerSubj.asObservable();\n\n  private toggleSubj = new BehaviorSubject<IBannerToggle>({\n    id: '',\n    value: false\n  });\n  toggleSubjObs$ = this.toggleSubj.asObservable();\n\n  setBanner = (update: IBannerConfig) => {\n    this.bannerSubj.next(update);\n  };\n\n  toggleBanner = (id: string, value: boolean) => {\n    this.toggleSubj.next({ id, value });\n  };\n}\n","import {\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport interface IIconConfig {\n  ariaLabel?: string;\n  FA_keywords?: string;\n  size?: keyof typeof DSSizes;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-icon',\n  templateUrl: './icon.component.html'\n})\nexport class IconComponent implements OnChanges, OnInit {\n  @ViewChild('iconSpan') iconSpan!: ElementRef;\n  @Input() config: IIconConfig = {};\n  @Input() ariaLabel?: string;\n  @Input() FA_keywords?: string;\n  @Input() size?: keyof typeof DSSizes;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['config'] && !changes['config'].firstChange) {\n      const change = changes['config'].currentValue;\n      const keys = Object.keys(change);\n      let spanContent = `<i class='font-icon `;\n      keys.includes('FA_keywords')\n        ? (spanContent += `${change['FA_keywords']}'`)\n        : null;\n      spanContent += `></i>`;\n      this.iconSpan.nativeElement.innerHTML = spanContent;\n    }\n\n    if (changes['size'] && !changes['size'].firstChange)\n      this.config.size = this.size;\n  }\n\n  ngOnInit() {\n    //set config from individual options, if present\n    if (this.ariaLabel) this.config.ariaLabel = this.ariaLabel;\n    if (this.FA_keywords) this.config.FA_keywords = this.FA_keywords;\n    if (this.size) this.config.size = this.size;\n\n    if (this.config.ariaLabel === '') {\n      delete this.config.ariaLabel;\n    }\n  }\n}\n","<span\n  class=\"ds-icon-container\"\n  [ngClass]=\"config.size\"\n>\n  <span\n    #iconSpan\n    [attr.aria-hidden]=\"config.ariaLabel ? false : true\"\n    [attr.aria-label]=\"config.ariaLabel ? config.ariaLabel : null\"\n    [attr.role]=\"config.ariaLabel ? 'img' : null\"\n  >\n    <i\n      class=\"font-icon\"\n      [ngClass]=\"config.FA_keywords\"\n    ></i>\n  </span>\n</span>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport enum ButtonCategories {\n  primary = 'primary',\n  secondary = 'secondary',\n  plain = 'plain'\n}\n\nexport enum ButtonSize {\n  small = 'small',\n  large = 'large'\n}\n\nexport enum ButtonColor {\n  critical = 'critical',\n  CTA = 'CTA'\n}\n\n// export enum ButtonType {\n//     button = 'button',\n//     submit = 'submit',\n//     reset = 'reset'\n// }\n\nexport enum ButtonIconDirection {\n  left = 'left',\n  right = 'right'\n}\n\nexport interface IButtonConfig {\n  id: string;\n  category?: keyof typeof ButtonCategories;\n  size?: keyof typeof DSSizes;\n  color?: keyof typeof ButtonColor;\n  ariaLabel?: string;\n  disabled?: boolean;\n  icon?: string;\n  iconDirection?: keyof typeof ButtonIconDirection;\n  tabIndex?: number;\n  fill?: boolean;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-button',\n  templateUrl: './button.component.html'\n})\nexport class ButtonComponent {\n  @Input() config: IButtonConfig = {\n    id: ''\n  };\n  @Input() id = '';\n  @Input() category?: keyof typeof ButtonCategories;\n  @Input() size?: keyof typeof DSSizes;\n  @Input() color?: keyof typeof ButtonColor;\n  @Input() ariaLabel?: string;\n  @Input() disabled?: boolean;\n  @Input() icon?: string;\n  @Input() iconDirection?: keyof typeof ButtonIconDirection;\n  @Input() tabIndex?: number;\n  @Input() fill?: boolean;\n\n  @Output() btnAction: EventEmitter<any> = new EventEmitter();\n\n  ngOnInit() {\n    this.id !== '' ? (this.config.id = this.id) : undefined;\n    this.category === undefined\n      ? undefined\n      : (this.config.category = this.category);\n    this.size === undefined ? undefined : (this.config.size = this.size);\n    this.color === undefined ? undefined : (this.config.color = this.color);\n    this.ariaLabel !== undefined\n      ? (this.config.ariaLabel = this.ariaLabel)\n      : undefined;\n    this.disabled !== undefined\n      ? (this.config.disabled = this.disabled)\n      : undefined;\n    this.tabIndex !== undefined\n      ? (this.config.tabIndex = this.tabIndex)\n      : undefined;\n    this.fill !== undefined ? (this.config.fill = this.fill) : undefined;\n    if (this.icon || this.config.icon) {\n      this.config.icon = this.icon ? this.icon : this.config.icon;\n      this.config.iconDirection = this.iconDirection\n        ? this.iconDirection\n        : this.config.iconDirection;\n      this.config.iconDirection = this.config.iconDirection\n        ? this.config.iconDirection\n        : 'left';\n    } else {\n      this.config.icon = undefined;\n      this.config.iconDirection = undefined;\n    }\n  }\n\n  clickEvent(id: string) {\n    this.btnAction.emit(id);\n  }\n}\n","<button\n  [attr.aria-label]=\"config.ariaLabel\"\n  [attr.color]=\"config.color\"\n  [attr.category]=\"config.category\"\n  [attr.size]=\"config.size\"\n  [attr.tabIndex]=\"config.tabIndex\"\n  [ngClass]=\"config.iconDirection\"\n  (click)=\"clickEvent(config.id)\"\n  class=\"lib-button\"\n  [id]=\"config.id\"\n  [attr.fill-container]=\"config.fill ? true : null\"\n>\n  <div class=\"button-content-container\">\n    <span\n      class=\"icon\"\n      *ngIf=\"config.icon\"\n    >\n      <ircc-cl-lib-icon\n        [config]=\"{ FA_keywords: config.icon }\"\n        [size]=\"config.size\"\n      ></ircc-cl-lib-icon>\n    </span>\n    <span class=\"text\"><ng-content></ng-content></span>\n  </div>\n</button>\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { DSFullSizes } from '../../../shared/constants/jl-components.constants';\nexport enum IconButtonCategories {\n  primary = 'primary',\n  critical = 'critical',\n  custom = 'custom'\n}\n\nexport interface IIconButtonIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IIconButtonComponentConfig {\n  id: string;\n  category: keyof typeof IconButtonCategories;\n  size?: keyof typeof DSFullSizes;\n  ariaLabel?: string;\n  disabled?: boolean;\n  icon?: IIconButtonIconConfig;\n}\n\nexport const CLASS_X_MARK = 'fa-light fa-xmark';\nexport const CLASS_TRASHCAN = 'fa-light fa-trash-can';\n@Component({\n  selector: 'ircc-cl-lib-icon-button',\n  templateUrl: './icon-button.component.html'\n})\nexport class IconButtonComponent implements OnInit {\n  @Input() config: IIconButtonComponentConfig = {\n    id: '',\n    category: IconButtonCategories.primary,\n    ariaLabel: ''\n  };\n  @Input() id = '';\n  @Input() category?: keyof typeof IconButtonCategories | IconButtonCategories;\n  @Input() size?: keyof typeof DSFullSizes | DSFullSizes;\n  @Input() ariaLabel?: string;\n  @Input() disabled?: boolean;\n  @Input() icon?: IIconButtonIconConfig;\n  @Output() clickEvent = new EventEmitter<string>();\n  // Mapping of icons to category\n  iconConfigs: { [key: string]: IIconButtonIconConfig } = {\n    primary: {\n      class: CLASS_X_MARK,\n      color: 'var(--text-primary)'\n    },\n    critical: {\n      class: CLASS_TRASHCAN,\n      color: 'var(--critical-text)'\n    }\n  };\n\n  ngOnInit() {\n    if (this.id) this.config.id = this.id;\n    if (this.category) this.config.category = this.category;\n    if (this.size) this.config.size = this.size;\n    if (this.ariaLabel) this.config.ariaLabel = this.ariaLabel;\n    if (this.disabled) this.config.disabled = this.disabled;\n    if (this.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.icon\n          : this.iconConfigs[this.config.category];\n    else if (!this.icon && this.config.icon)\n      this.config.icon =\n        this.config.category === IconButtonCategories.custom\n          ? this.config.icon\n          : this.iconConfigs[this.config.category];\n    else this.config.icon = this.iconConfigs[this.config.category];\n  }\n\n  buttonClick(id = this.config.id) {\n    this.clickEvent.emit(id);\n  }\n}\n","<button\n  category=\"plain\"\n  [id]=\"config.id\"\n  [attr.aria-label]=\"config.ariaLabel\"\n  [disabled]=\"config.disabled\"\n  (click)=\"buttonClick()\"\n  [class]=\"config.category + ' ' + config.size\"\n  class=\"icon-btn\"\n>\n  <span>\n    <ircc-cl-lib-icon\n      [config]=\"{ FA_keywords: config.icon?.class }\"\n      [style.color]=\"config.icon?.color\"\n      [ariaLabel]=\"config.icon?.class\"\n    ></ircc-cl-lib-icon>\n  </span>\n</button>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewChild\n} from '@angular/core';\nimport {\n  IIconButtonComponentConfig,\n  IIconButtonIconConfig\n} from '../../shared/icon-button/icon-button.component';\nimport { IButtonConfig } from '../../shared/button/button.component';\nimport { BannerService } from './banner.service';\nimport { Subscription } from 'rxjs';\n\nexport enum BannerType {\n  '' = '',\n  generic = 'generic',\n  info = 'info',\n  critical = 'critical',\n  success = 'success',\n  warning = 'warning'\n}\n\nexport enum BannerSize {\n  large = 'large',\n  small = 'small'\n}\n\nexport enum CTAType {\n  link = 'link',\n  button = 'button'\n}\n\nexport interface ICTAConfig {\n  text: string;\n  type: keyof typeof CTAType;\n  linkConfig?: any; //TO-DO: build link component and replace type any with ILinkConfig interface. For now will take url.\n  btnConfig?: IButtonConfig;\n  ariaLabel?: string;\n}\n\nexport interface IBannerConfig {\n  id: string;\n  title?: string;\n  content?: string;\n  type?: keyof typeof BannerType;\n  rounded?: boolean;\n  dismissible?: boolean;\n  cta?: ICTAConfig[];\n  size?: keyof typeof BannerSize;\n  ariaDissmissible?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-banner',\n  templateUrl: './banner.component.html'\n})\nexport class BannerComponent implements OnInit {\n  @ViewChild('banner', { static: false })\n  banner: ElementRef | undefined;\n\n  lineVisible = true;\n  textId = '';\n\n  @Input() config: IBannerConfig = {\n    id: ''\n  };\n  @Input() id?: string;\n  @Input() title?: string;\n  @Input() content?: string;\n  @Input() type?: keyof typeof BannerType;\n  @Input() rounded?: boolean;\n  @Input() dismissible?: boolean;\n  @Input() cta?: ICTAConfig[];\n  @Input() size?: keyof typeof BannerSize;\n  @Input() ariaDissmissible?: string;\n\n  @Output() btnEvent = new EventEmitter();\n\n  configSub?: Subscription;\n  configSubToggle?: Subscription;\n\n  iconConfig: IIconButtonComponentConfig = {\n    id: '', //id is set in ngOnInit\n    category: 'custom',\n    icon: {\n      class: 'fa-solid fa-xmark',\n      color: 'var(--text-primary)'\n    }\n  };\n\n  eventHandler(emitValue: string) {\n    if (this.config?.id) {\n      this.bannerService.toggleBanner(this.config.id, false);\n    }\n  }\n\n  toggleLine() {\n    let containerHeight = document.getElementById(this.textId)?.offsetHeight;\n    let el: any = document.querySelector(`#${this.config?.id} .banner-line`);\n    let ctas: any = document.querySelector(`#${this.config?.id} .banner-ctas`);\n    if (\n      (containerHeight && el && containerHeight > 35) ||\n      (el && containerHeight && containerHeight > 23 && ctas)\n    ) {\n      el.style.display = 'block';\n    } else if (el) {\n      el.style.display = 'none';\n    }\n  }\n\n  constructor(\n    private bannerService: BannerService,\n    private renderer: Renderer2\n  ) {}\n\n  ngOnInit() {\n    //set config from individual options, if present\n    if (this.id) this.config.id = this.id;\n    if (this.title) this.config.title = this.title;\n    if (this.content) this.config.content = this.content;\n    if (this.type) this.config.type = this.type;\n    if (this.rounded) this.config.rounded = this.rounded;\n    if (this.dismissible) this.config.dismissible = this.dismissible;\n    if (this.cta) this.config.cta = this.cta;\n    if (this.size) this.config.size = this.size;\n    if (this.ariaDissmissible)\n      this.config.ariaDissmissible = this.ariaDissmissible;\n\n    this.iconConfig.id = this.config?.id + '_closeBtn';\n    this.textId = this.config?.id + '_text';\n\n    if (this.config?.cta) {\n      this.config?.cta.forEach((item) => {\n        if (item.ariaLabel && item.btnConfig)\n          item.btnConfig.ariaLabel = item.ariaLabel;\n      });\n    }\n\n    if (!this.config.ariaDissmissible || this.config.ariaDissmissible === '') {\n      if (this.config.dismissible) {\n        this.config.ariaDissmissible = 'close';\n      }\n    }\n\n    this.configSub = this.bannerService.bannerSubjObs$.subscribe((response) => {\n      if (this.config.id === response.id) {\n        this.config = response;\n      }\n    });\n    this.configSubToggle = this.bannerService.toggleSubjObs$.subscribe(\n      (response) => {\n        if (this.config.id === response.id) {\n          this.toggleVisible(response.value);\n        }\n      }\n    );\n  }\n\n  toggleVisible(value: boolean) {\n    if (this.banner?.nativeElement) {\n      if (value === false) {\n        this.renderer.addClass(this.banner.nativeElement, 'bannerDismissed');\n        this.btnEvent?.emit(this.config.id);\n        setTimeout(() => {\n          if (this.banner?.nativeElement) {\n            this.renderer.removeClass(\n              this.banner.nativeElement,\n              'bannerDismissed'\n            );\n            this.renderer.addClass(this.banner.nativeElement, 'noDisplay');\n          }\n        }, 700);\n      } else {\n        this.renderer.removeClass(this.banner.nativeElement, 'bannerDismissed');\n        this.renderer.removeClass(this.banner.nativeElement, 'noDisplay');\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    this.toggleLine();\n  }\n\n  ngAfterViewChecked() {\n    this.toggleLine();\n  }\n}\n","<div\n  (window:resize)=\"toggleLine()\"\n  class=\"banner-component\"\n  class=\"{{ config?.size }}\"\n  id=\"{{ config?.id }}\"\n  #banner\n  [ngClass]=\"{\n    rounded: config?.rounded,\n    information: config?.type === 'info',\n    success: config?.type === 'success',\n    warning: config?.type === 'warning',\n    critical: config?.type === 'critical'\n  }\"\n>\n  <div class=\"banner-container\">\n    <div\n      class=\"banner-left\"\n      *ngIf=\"config?.type !== 'generic' && config?.type\"\n    >\n      <ng-container [ngSwitch]=\"config?.type\">\n        <div *ngSwitchCase=\"'critical'\">\n          <i class=\"fa-circle-exclamation fa-light banner-icon\"></i>\n        </div>\n        <div *ngSwitchCase=\"'success'\">\n          <i class=\"fa-circle-check fa-light banner-icon\"></i>\n        </div>\n        <div *ngSwitchCase=\"'info'\">\n          <i class=\"fa-circle-info fa-light banner-icon\"></i>\n        </div>\n        <div *ngSwitchCase=\"'warning'\">\n          <i class=\"fa-triangle-exclamation fa-light banner-icon\"></i>\n        </div>\n      </ng-container>\n      <div\n        class=\"banner-line\"\n        [ngClass]=\"{ hidden: !lineVisible }\"\n      ></div>\n    </div>\n    <div class=\"banner-right\">\n      <div class=\"banner-body\">\n        <div\n          class=\"banner-text\"\n          id=\"{{ textId }}\"\n        >\n          <div\n            class=\"banner-title h6 emphasis\"\n            *ngIf=\"config?.title\"\n          >\n            {{ config?.title || '' | translate }}\n          </div>\n          <div\n            class=\"banner-content\"\n            [innerHTML]=\"config?.content || '' | translate\"\n            *ngIf=\"config?.content\"\n          ></div>\n        </div>\n      </div>\n      <div\n        class=\"banner-ctas\"\n        *ngIf=\"config?.cta\"\n      >\n        <ng-container *ngFor=\"let cta of config?.cta; let index = index\">\n          <ircc-cl-lib-button\n            *ngIf=\"cta?.type === 'button'\"\n            [id]=\"'cta_' + index\"\n            [category]=\"cta?.btnConfig?.category\"\n            [color]=\"cta?.btnConfig?.color\"\n            [size]=\"config.size\"\n            [ariaLabel]=\"cta?.btnConfig?.ariaLabel\"\n            [disabled]=\"cta?.btnConfig?.disabled\"\n            [icon]=\"cta?.btnConfig?.icon\"\n            [iconDirection]=\"cta?.btnConfig?.iconDirection\"\n            >{{ cta.text | translate }}</ircc-cl-lib-button\n          >\n          <a\n            class=\"cta-link\"\n            *ngIf=\"cta?.type === 'link'\"\n            [routerLink]=\"cta?.linkConfig | translate\"\n            [attr.aria-label]=\"cta?.ariaLabel\"\n            >{{ cta.text | translate }}</a\n          >\n        </ng-container>\n      </div>\n    </div>\n  </div>\n  <div class=\"banner-btn\">\n    <ircc-cl-lib-icon-button\n      [ariaLabel]=\"config?.ariaDissmissible || '' | translate\"\n      size=\"extraSmall\"\n      class=\"banner-close\"\n      *ngIf=\"config?.dismissible\"\n      [config]=\"iconConfig\"\n      (clickEvent)=\"eventHandler($event)\"\n    ></ircc-cl-lib-icon-button>\n  </div>\n</div>\n","import { EventEmitter, Input, Output } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { TranslateService } from '@ngx-translate/core';\nexport interface ITabNavConfig {\n  id: string;\n  tab?: ITabConfig[];\n  size?: keyof typeof DSSizes;\n  selected?: string;\n  showContent?: boolean;\n}\nexport interface ITabConfig {\n  id?: string;\n  title: string;\n  value?: string;\n}\n@Component({\n  selector: 'ircc-cl-lib-tabs',\n  templateUrl: './tabs.component.html'\n})\nexport class TabsComponent implements OnInit {\n  @Input() config: ITabNavConfig = {\n    id: '',\n    showContent: true\n  };\n  @Input() id?: string;\n  @Input() tab?: ITabConfig[];\n  @Input() size?: keyof typeof DSSizes;\n  @Input() selected?: string;\n  @Input() showContent?: boolean;\n\n  @Output() valueChange = new EventEmitter<string>();\n\n  constructor(\n    private translate: TranslateService\n  ) {}\n\n  ngOnInit() {\n    //set config from individual options, if present\n    if (this.id) this.config.id = this.id;\n    if (this.tab) this.config.tab = this.tab;\n    if (this.size) this.config.size = this.size;\n    if (this.selected) this.config.selected = this.selected;\n    if (this.showContent) this.config.showContent = this.showContent;\n\n\n    if (this.config.selected === undefined && this.config.tab) {\n      this.config.selected = this.config.tab[0].id;\n      this.valueChange.emit(this.config.selected);\n    }\n  }\n\n  setSelected(selectedID: any) {\n    if (selectedID) this.config.selected = selectedID; //set the selected tab\n\n    if (this.config?.selected) {\n      let tab = document.getElementById(this.config?.selected);\n      let x = tab?.getBoundingClientRect().left;\n      if (document.querySelector('.page-nav')) {\n        let nav = document.querySelector('.page-nav');\n        nav && x ? (nav.scrollLeft = x) : null;\n      }\n      this.valueChange.emit(selectedID);\n    }\n  }\n}\n","<div class=\"{{ config.size }}\">\n  <nav class=\"page-nav\">\n    <div *ngFor=\"let val of config.tab\">\n      <button\n        *ngIf=\"val.id === config.selected\"\n        selected\n        class=\"tabs-btn\"\n        [id]=\"val.id\"\n        (click)=\"setSelected(val.id)\"\n        [attr.aria-label]=\"(val.title | translate) + ' selected'\"\n      >\n        {{ val.title || '' | translate }}\n      </button>\n      <button\n        *ngIf=\"val.id !== config.selected\"\n        class=\"tabs-btn\"\n        [id]=\"val.id\"\n        (click)=\"setSelected(val.id)\"\n      >\n        {{ val.title || '' | translate }}\n      </button>\n    </div>\n  </nav>\n  <ng-container *ngIf=\"config.showContent === true\">\n    <br />\n    <div class=\"col-lg-10\">\n      <div class=\"side-menu-content\">\n        <div *ngFor=\"let cont of config.tab\">\n          <div\n            *ngIf=\"cont.id === config.selected\"\n            class=\"content\"\n          >\n            {{ cont.value || '' | translate }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</div>\n","import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport const TAG_LABELS_EN = [\n  'In progress',\n  'Completed',\n  'Error',\n  'Locked',\n  'Not started'\n];\nexport const TAG_LABELS_FR = [\n  'En cours',\n  'Complété',\n  'Erreur',\n  'Verrouillé',\n  'Pas commencé'\n];\n\nexport enum TagType {\n  primary = 'primary',\n  success = 'success',\n  critical = 'critical',\n  locked = 'locked',\n  notStarted = 'notStarted'\n}\nexport interface IProgressTagsConfig {\n  id: string;\n  type?: keyof typeof TagType;\n  size?: keyof typeof DSSizes;\n}\n@Component({\n  selector: 'ircc-cl-lib-progress-tags',\n  templateUrl: './progress-tags.component.html'\n})\nexport class ProgressTagsComponent implements OnInit {\n  text: string[] = [];\n\n  @Input() config: IProgressTagsConfig = {\n    id: ''\n  };\n  @Input() id = '';\n  @Input() type?: keyof typeof TagType | TagType;\n  @Input() size?: keyof typeof DSSizes | DSSizes;\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    if (this.id) this.config.id = this.id;\n    if (this.type) this.config.type = this.type;\n    if (this.size) this.config.size = this.size;\n    this.setTypeTitle();\n    this.translate.onLangChange.subscribe(() => {\n      this.setTypeTitle();\n    });\n  }\n\n  ngOnChanges() {\n    this.setTypeTitle();\n  }\n\n  setTypeTitle() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.text = TAG_LABELS_EN;\n    } else {\n      this.text = TAG_LABELS_FR;\n    }\n  }\n}\n","<div\n  class=\"{{ config.size }}\"\n  id=\"{{ config.id }}\"\n  class=\"tag-component\"\n  [ngClass]=\"{\n    success: config.type === 'success',\n    critical: config.type === 'critical',\n    neutral: config.type === 'locked' || config.type === 'notStarted'\n  }\"\n>\n  <div class=\"tag-container\">\n    <div class=\"tag-left\">\n      <ng-container [ngSwitch]=\"config.type\">\n        <div *ngSwitchCase=\"'success'\">\n          <i class=\"fa-circle-check fa-regular tag-icon\"></i>\n          <span class=\"content\">{{ text[1] }}</span>\n        </div>\n        <div *ngSwitchCase=\"'critical'\">\n          <i class=\"fa-circle-exclamation fa-regular tag-icon\"></i>\n          <span class=\"content\">{{ text[2] }}</span>\n        </div>\n        <div *ngSwitchCase=\"'locked'\">\n          <i class=\"fa-light fa-lock tag-icon\"></i>\n          <span class=\"content\">{{ text[3] }}</span>\n        </div>\n        <div *ngSwitchCase=\"'notStarted'\">\n          <i class=\"fa-light fa-circle tag-icon\"></i>\n          <span class=\"content\">{{ text[4] }}</span>\n        </div>\n        <div *ngSwitchDefault>\n          <i class=\"fa-regular fa-circle-half-stroke tag-icon\"></i>\n          <span class=\"content\">{{ text[0] }}</span>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport enum IFlyoutOptionType {\n  text = 'text',\n  checkbox = 'checkbox',\n  dropdown = 'dropdown',\n  line = 'line',\n  heading = 'heading'\n}\n\nexport interface IFlyoutOptionConfig {\n  id?: string,\n  value: string,\n  selected?: boolean,\n  active?: boolean,\n  disabled?: boolean,\n  type?: keyof typeof IFlyoutOptionType,\n  clickable?: boolean,\n  size?: keyof typeof DSSizes\n};\n\n@Component({\n  selector: 'ircc-cl-lib-flyout-option',\n  templateUrl: './flyout-option.component.html'\n})\nexport class FlyoutOptionComponent implements OnInit {\n\n  @Input() config : IFlyoutOptionConfig = {\n    id: '',\n    value: 'Blank label'\n  }\n\n  @Input() id? : string;\n  @Input() size? : keyof typeof DSSizes;\n  @Input() value?: string;\n  @Input() selected?: boolean;\n  @Input() active?: boolean;\n  @Input() disabled?: boolean;\n  @Input() type?: keyof typeof IFlyoutOptionType;\n  @Input() clickable?: boolean;\n\n  constructor() { }\n\n  ngOnInit() {\n     //set config from individual options, if present\n    if(this.id) this.config.id = this.id;\n    if(this.size) this.config.size = this.size;\n    if(this.value) this.config.value = this.value;\n    if(this.selected) this.config.selected = this.selected;\n    if(this.active) this.config.active = this.active;\n    if(this.disabled) this.config.disabled = this.disabled;\n    if(this.type) this.config.type = this.type;\n    if(this.clickable) this.config.clickable = this.clickable;\n\n    if(this.config.type === undefined) this.config.type = 'text';\n    if((this.config.type === 'text' || 'checkbox' || 'dropdown') && this.config.clickable !== false && this.config.disabled !== true) {\n      this.config.clickable = true;\n    } else {\n      this.config.clickable = false;\n    }\n  };\n\n};\n","<div\n  class=\"option-container\"\n  [ngClass]=\"config.size\"\n>\n  <ircc-cl-lib-button\n    [category]=\"'plain'\"\n    [id]=\"config.id ? config.id : ''\"\n    role=\"option\"\n    [tabIndex]=\"-1\"\n  >\n    <div class=\"option-contents\">\n      <p\n        class=\"option-text\"\n        [innerHTML]=\"config.value || '' | translate\"\n      ></p>\n      <div *ngIf=\"config.selected\">\n        <span class=\"fa-solid fa-check option-check\"></span>\n      </div>\n    </div>\n  </ircc-cl-lib-button>\n</div>\n","import {\n  Component,\n  Input,\n  Output,\n  OnInit,\n  EventEmitter,\n  HostListener,\n  ViewChildren,\n  ElementRef,\n  QueryList,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  FlyoutOptionComponent,\n  IFlyoutOptionConfig\n} from '../flyout-option/flyout-option.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport enum IFlyoutSelectTypes {\n  single = 'single',\n  multi = 'multi',\n  autocomplete = 'autocomplete'\n}\n\nexport interface IFlyoutConfig {\n  id: string;\n  options: IFlyoutOptionConfig[];\n  disabled?: boolean;\n  selected?: string;\n  selection?: [] | number;\n  type?: keyof typeof IFlyoutSelectTypes;\n  size?: keyof typeof DSSizes;\n}\nexport const FLYOUT_CURRENT_SELECTED = {\n  en: ' currently selected',\n  fr: ' actuellement selectionne'\n};\n\n@Component({\n  selector: 'ircc-cl-lib-flyout',\n  templateUrl: './flyout.component.html'\n})\nexport class FlyoutComponent implements OnInit {\n  constructor(private translate: TranslateService) {}\n  @ViewChildren('option') optionContainers: QueryList<ElementRef> =\n    new QueryList<ElementRef>();\n\n  @Input() config: IFlyoutConfig = {\n    id: '',\n    options: []\n  };\n  @Input() id?: string;\n  @Input() options?: IFlyoutOptionConfig[];\n  @Input() disabled?: boolean;\n  @Input() selection?: [] | number;\n  @Input() type?: keyof typeof IFlyoutSelectTypes;\n  @Input() size?: keyof typeof DSSizes;\n\n  //TODO: Must add the other config parameters\n  @Output() isSelected = new EventEmitter();\n\n  selectedIndex: number = -1;\n  a11yText: string = '';\n  currentSelected: string = '';\n\n  ngOnInit() {\n    if (this.config.type === undefined) this.config.type = 'single';\n    if (this.config.selected === undefined) this.config.selected = '';\n    if (this.id) this.config.id = this.id;\n    if (this.options) this.config.options = this.options;\n    if (!this.config.options) this.config.options = [];\n    if (this.disabled) this.config.disabled = this.disabled;\n    if (this.selection) this.config.selection = this.selection;\n    if (this.type) this.config.type = this.type;\n    if (this.size) this.config.size = this.size;\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n  }\n\n  calculateContainerHeight(): string {\n    let numberOfItems = this.config.options?.length || 0;\n    const itemHeight = 36;\n    const visibleItems = 5;\n\n    if (numberOfItems < 2) {\n      numberOfItems = 1.5;\n    }\n\n    if (numberOfItems && numberOfItems <= visibleItems) {\n      return `${itemHeight * numberOfItems}px`;\n    }\n\n    return `${itemHeight * visibleItems}px`;\n  }\n\n  @HostListener('document:click', ['$event'])\n  onClick(event: Event) {\n    let target = event.target as HTMLElement;\n    if (\n      !target.classList.contains('option-contents') &&\n      !target.classList.contains('dropdown')\n    ) {\n      this.isSelected.emit(null);\n    }\n  }\n\n  @HostListener('document:keydown.arrowdown', ['$event'])\n  onArrowDown(event: KeyboardEvent) {\n    event.preventDefault();\n    if (this.config.options) {\n      let foundClickable = false;\n      this.config.options\n        .slice(this.selectedIndex + 1)\n        .forEach((option, index) => {\n          if (!foundClickable && option.clickable !== false) {\n            this.selectedIndex += index + 1;\n            this.highlightIndex(option.id);\n            foundClickable = true;\n          }\n        });\n    }\n  }\n\n  @HostListener('document:keydown.arrowup', ['$event'])\n  onArrowUp(event: KeyboardEvent) {\n    event.preventDefault();\n    if (this.config.options) {\n      let foundClickable = false;\n      this.config.options\n        .slice(0, this.selectedIndex)\n        .reverse()\n        .forEach((option, index) => {\n          if (!foundClickable && option.clickable !== false) {\n            this.selectedIndex -= index + 1;\n            this.highlightIndex(option.id);\n            foundClickable = true;\n          }\n        });\n      // Ensure selectedIndex does not fall below 0\n      this.selectedIndex = Math.max(this.selectedIndex, 0);\n    }\n  }\n\n  @HostListener('document:keydown.enter', ['$event'])\n  onEnter(event: KeyboardEvent) {\n    event.preventDefault();\n    //if the index hasn't changes through arrow navigation, emits our event but lets the parent know nothing was selected\n    this.selectedIndex != -1\n      ? this.optionSelected(this.selectedIndex)\n      : this.isSelected.emit(null);\n  }\n\n  @HostListener('mouseenter')\n  onHover() {\n    // Remove default active state for 1st option when user hover on flyout\n    if (\n      this.config.options.length > 0 &&\n      this.config.options[0].active === true\n    )\n      this.config.options[0].active = false;\n  }\n\n  //takes in the active index from HostListeners and sets the config option to active state which triggers styling\n  highlightIndex(el_id: any) {\n    if (el_id) {\n      this.config.options?.forEach((option) => {\n        if (option.id === el_id) {\n          option.active = true;\n          this.optionContainers\n            .toArray()\n            [this.selectedIndex]?.nativeElement?.scrollIntoView({\n              behavior: 'smooth',\n              block: 'end'\n            });\n          console.log('HERE', option.value);\n\n          this.a11yText = option.value;\n          //updates a11yText to indicate currently selected item if scrolling through flyout again\n          if (option.selected) this.a11yText += this.currentSelected;\n        } else {\n          option.active = false;\n        }\n      });\n    }\n  }\n\n  /**\n   * setLang detects changes to the language toggle to serve the correct aria error text\n   */\n  setLang(lang: string) {\n    lang === 'en' || lang === 'en-US'\n      ? (this.currentSelected = FLYOUT_CURRENT_SELECTED.en)\n      : (this.currentSelected = FLYOUT_CURRENT_SELECTED.fr);\n  }\n\n  //clears all selections by setting the option.selected to false\n  clearOptions() {\n    this.config?.options?.forEach((option) => {\n      option.selected = false;\n    });\n  }\n\n  //function takes in index value of current active option and selects it\n  optionSelected(i: number) {\n    if (\n      this.config.options &&\n      !this.config.options[i].selected &&\n      this.config.options[i].clickable\n    ) {\n      //setup for future multi select feature\n      this.config.type !== 'multi'\n        ? this.clearOptions()\n        : /*this.config.selection = [].push(this.config.options[i]);*/ console.log(\n            'MULTI'\n          );\n      this.config.options[i].selected = true;\n      //emits the value of the selected index so it's visible to the parent\n      this.isSelected.emit(this.config.options[i].value);\n    }\n  }\n}\n","<div\n  *ngIf=\"\n    config.type !== 'autocomplete' || config.options.length < 50;\n    else auto_flyout\n  \"\n>\n  <div\n    class=\"{{ config?.size }} flyout-container\"\n    #container\n  >\n    <div\n      #option\n      *ngFor=\"let option of config?.options; let index = index\"\n      [ngClass]=\"{\n        'flyout-option-container': option.clickable !== false,\n        'disabled-option': option.disabled === true,\n        selected: option.active\n      }\"\n    >\n      <ircc-cl-lib-flyout-option\n        [config]=\"option\"\n        [value]=\"option.value | autocomplete : config.selected\"\n        [size]=\"option.size\"\n        (click)=\"optionSelected(index)\"\n        [id]=\"option.id + '_option_' + (index + 1)\"\n      ></ircc-cl-lib-flyout-option>\n    </div>\n  </div>\n</div>\n\n<ng-template #auto_flyout>\n  <div class=\"{{ config?.size }} flyout-container\">\n    <cdk-virtual-scroll-viewport\n      autosize\n      style=\"height: 100%\"\n      minBufferPx=\"5\"\n      maxBufferPx=\"56\"\n      class=\"example-viewport\"\n      #container\n      [style.height]=\"calculateContainerHeight()\"\n    >\n      <div\n        *cdkVirtualFor=\"\n          let option of config?.options;\n          let index = index;\n          templateCacheSize: 0\n        \"\n        class=\"example-item\"\n        [ngClass]=\"{\n          'flyout-option-container': option.clickable !== false,\n          'disabled-option': option.disabled === true,\n          selected: option.active\n        }\"\n      >\n        <ircc-cl-lib-flyout-option\n          [config]=\"option\"\n          [value]=\"option.value | autocomplete : config.selected\"\n          [size]=\"option.size\"\n          (click)=\"optionSelected(index)\"\n          [id]=\"option.id + '_option_' + (index + 1)\"\n        ></ircc-cl-lib-flyout-option>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </div>\n</ng-template>\n\n<ng-template\n  #options\n  let-config=\"config\"\n  let-index=\"index\"\n>\n  <ircc-cl-lib-flyout-option\n    [config]=\"config\"\n    [value]=\"config.value | autocomplete : this.config.selected\"\n    [size]=\"config.size\"\n    (click)=\"optionSelected(index)\"\n    [id]=\"config.id + '_option_' + (index + 1)\"\n  ></ircc-cl-lib-flyout-option>\n</ng-template>\n<span\n  id=\"sr\"\n  class=\"sr-only\"\n  aria-live=\"polite\"\n  >{{ a11yText }}{{ currentSelected }}</span\n>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { ButtonCategories } from '../button/button.component';\nimport { IIconButtonIconConfig } from '../icon-button/icon-button.component';\nimport { IFlyoutConfig } from '../flyout/flyout.component';\nimport { TranslateService } from '@ngx-translate/core';\nexport interface IDropdownConfig {\n  id: string;\n  label?: string;\n  size?: keyof typeof DSSizes;\n  category?: keyof typeof ButtonCategories;\n  placeholderText?: string;\n  disabled?: boolean;\n  icon?: IIconButtonIconConfig;\n  flyout?: IFlyoutConfig;\n}\n\nexport const DROPDOWN_ARIA = {\n  en: 'Dropdown',\n  fr: 'Menu Deroulant'\n};\n@Component({\n  selector: 'ircc-cl-lib-dropdown',\n  templateUrl: './drop-down.component.html'\n})\nexport class DropdownComponent implements OnInit {\n  constructor(private translate: TranslateService) {}\n\n  @Input() config: IDropdownConfig = {\n    id: ''\n  };\n\n  @Input() id: string = '';\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string = '';\n  @Input() placeholderText?: string = '';\n  @Input() disabled?: boolean;\n  @Input() category?: keyof typeof ButtonCategories;\n  @Input() icon?: IIconButtonIconConfig;\n  @Input() flyout?: IFlyoutConfig;\n\n\n  btnAriaLabel = '';\n  showPlaceholder: boolean = false;\n  selected: boolean = false;\n\n  flyoutConfig: IFlyoutConfig = {\n    id: this.config.id + '_flyout',\n    options: [\n      {\n        value: 'Options empty'\n      }\n    ]\n  };\n\n  ngOnInit() {\n    //set config from individual options, if present\n    if (this.id !== '') this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.icon) this.config.icon = this.icon;\n    if (this.flyout) this.config.flyout = this.flyout;\n    if (this.label !== '') this.config.label = this.label;\n    if (this.placeholderText !== '')\n      this.config.placeholderText = this.placeholderText;\n    if (this.disabled !== undefined) this.config.disabled = this.disabled;\n    this.category === undefined\n      ? undefined\n      : (this.config.category = this.category);\n\n    if (!this.config.category) this.config.category = ButtonCategories.primary;\n\n    if (!this.config.label || this.config.label.trim().length == 0) {\n      if (!this.config.placeholderText) {\n        this.config.placeholderText = 'Default';\n      }\n      this.showPlaceholder = true;\n    }\n\n    if (this.config.flyout) this.flyoutConfig = this.config.flyout;\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n  }\n\n  /**\n   * setLang(lang: string) if a function which accepts a string value.\n   * This value currently needs to be 'en' or 'en-US' to trigger English translations otherwise\n   * french translations will be triggered.\n   */\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.btnAriaLabel = DROPDOWN_ARIA.en;\n    } else {\n      this.btnAriaLabel = DROPDOWN_ARIA.fr;\n    }\n  }\n\n  selectedOption(e: Event) {\n    //if it receives it's event info it selects the index - if not closes flyout\n    if (e) {\n      this.showPlaceholder = false;\n      this.config.label = e.toString();\n      this.selected = !this.selected;\n      this.clearFlyoutFocus(); //clear the flyout focus if the flyout is closed.\n    } else {\n      this.toggleFlyout(false);\n    }\n  }\n\n  /**\n   * function receives a truthy value which determines wether it closes or opens,\n   * but also looks for FocusEvent to check if flyout is being interacted with\n   * @param status\n   * @param e\n   */\n  toggleFlyout(status: boolean, e?: FocusEvent) {\n    let target = e?.relatedTarget as HTMLElement;\n    if (!target?.id.includes(this.config.id) || !e) {\n      this.selected = status;\n      !status && this.clearFlyoutFocus(); //clear the flyout focus if the flyout is closed.\n    }\n  }\n\n  /**\n   * Clear the flyout active state\n   */\n  clearFlyoutFocus() {\n    if (this.config?.flyout?.options) {\n      this.config.flyout.options.forEach((i) => {\n        i.active = false;\n      });\n    }\n  }\n}\n","<div\n  class=\"content-container\"\n  [ngClass]=\"config.size\"\n>\n  <button\n    aria-live=\"polite\"\n    attr.aria-label=\"{{ btnAriaLabel }}\"\n    [id]=\"config.id\"\n    (click)=\"toggleFlyout(!selected)\"\n    class=\"dropdown selected-{{ selected }} {{ config.category }}\"\n    attr.category=\"{{ config.category }}\"\n  >\n    <div class=\"icon-text-container\">\n      <ircc-cl-lib-icon\n        *ngIf=\"config.icon\"\n        class=\"custom-icon\"\n        [style.color]=\"config.icon?.color\"\n        [config]=\"{ FA_keywords: config.icon?.class }\"\n      ></ircc-cl-lib-icon>\n      <p\n        *ngIf=\"showPlaceholder\"\n        class=\"placholder-text\"\n      >\n        {{ config.placeholderText || '' | translate }}\n      </p>\n      <p class=\"label-text\">{{ config.label || '' | translate }}</p>\n    </div>\n    <div\n      *ngIf=\"!selected\"\n      role=\"img\"\n    >\n      <i class=\"fa-light fa-chevron-down custom-chevron\"></i>\n    </div>\n    <div\n      *ngIf=\"selected\"\n      role=\"img\"\n    >\n      <i class=\"fa-light fa-chevron-up custom-chevron\"></i>\n    </div>\n  </button>\n</div>\n<ircc-cl-lib-flyout\n  [id]=\"config.id + '_flyout'\"\n  [size]=\"config.size\"\n  *ngIf=\"selected\"\n  [config]=\"flyoutConfig\"\n  (isSelected)=\"selectedOption($event)\"\n></ircc-cl-lib-flyout>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LabelButtonService {\n  private labelButtonClickSubj = new BehaviorSubject<string>('');\n  labelButtonClickObs$ = this.labelButtonClickSubj.asObservable();\n\n  buttonPress(id: string) {\n    this.labelButtonClickSubj.next(id);\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StandAloneFunctions } from '../../../shared/functions/stand-alone.functions';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { LabelButtonService } from './label-button.service';\n\nexport interface ILabelIconConfig {\n  iconClass: string;\n  colour?: string; //Default is text primary token\n  ariaText: string;\n}\n\nexport interface ILabelConfig {\n  formGroup: FormGroup;\n  errorMessages?: IErrorPairs[];\n  parentID: string;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  iconButton?: ILabelIconConfig;\n  topLabel?: string;\n  touched?: boolean;\n  legend?: boolean;\n}\n\nexport const ERROR_TEXT_STUB = {\n  en: 'Error',\n  fr: 'Erreur'\n};\n\nexport const HELP_ICON_ALT = {\n  en: ', more information',\n  fr: \", plus d'information\"\n};\n\n@Component({\n  selector: 'ircc-cl-lib-label',\n  templateUrl: './label.component.html'\n})\nexport class LabelComponent implements OnInit {\n  @Input() config: ILabelConfig = {\n    formGroup: new FormGroup({}),\n    parentID: '',\n    legend: false\n  };\n  @Input() formGroup?: FormGroup;\n  @Input() errorMessages?: IErrorPairs[];\n  @Input() parentID?: string;\n  @Input() label?: string;\n  @Input() desc?: string;\n  @Input() hint?: string;\n  @Input() required?: boolean;\n  @Input() iconButton?: ILabelIconConfig;\n  @Input() topLabel?: string;\n  @Input() touched?: boolean;\n  @Input() legend?: boolean;\n\n  labelIconText = '';\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions,\n    private labelButton: LabelButtonService\n  ) {}\n\n  ngOnInit() {\n    //set config from individual options, if present\n    if (this.formGroup) this.config.formGroup = this.formGroup;\n    if (this.errorMessages) this.config.errorMessages = this.errorMessages;\n    if (this.parentID) this.config.parentID = this.parentID;\n    if (this.label) this.config.label = this.label;\n    if (this.desc) this.config.desc = this.desc;\n    if (this.hint) this.config.hint = this.hint;\n    if (this.required) this.config.required = this.required;\n    if (this.iconButton) this.config.iconButton = this.iconButton;\n    if (this.topLabel) this.config.topLabel = this.topLabel;\n    if (this.touched) this.config.touched = this.touched;\n    if (this.legend) this.config.legend = this.legend;\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      // this.errorStubText = ERROR_TEXT_STUB_EN;\n      this.labelIconText = HELP_ICON_ALT.en;\n    } else {\n      // this.errorStubText = ERROR_TEXT_STUB_FR;\n      this.labelIconText = HELP_ICON_ALT.fr;\n    }\n  }\n\n  /**\n   * Output the button press\n   * @param id of the button being pressed (same as component ID)\n   */\n  iconButtonClick() {\n    this.labelButton.buttonPress(this.config.parentID);\n  }\n\n  returnLabel() {\n    return !this.config.topLabel ? this.config.label : this.config.topLabel;\n  }\n}\n","<div\n  id=\"{{ config.parentID + '_label' }}\"\n  class=\"label_container\"\n  [ngClass]=\"{ extra_padding: config.label && !config.desc && !config.hint }\"\n>\n  <ng-container *ngIf=\"config.legend === true; else noLegend\">\n    <ng-container *ngIf=\"config.label\">\n      <div\n        *ngIf=\"config.label\"\n        class=\"label\"\n        [attr.for]=\"config.parentID\"\n      >\n        <div class=\"label_field_container\">\n          <div\n            class=\"required-field-container\"\n            *ngIf=\"config.required\"\n          >\n            <i class=\"fa-regular fa-asterisk required-star\"></i>\n            {{ config.label || '' | translate }}\n          </div>\n          <div *ngIf=\"!config.required\">\n            {{ config.label || '' | translate }}\n          </div>\n          <div\n            *ngIf=\"config.iconButton\"\n            class=\"icon_container\"\n          >\n            <button\n              class=\"touch_button\"\n              category=\"plain\"\n              (click)=\"iconButtonClick()\"\n              role=\"button\"\n              [attr.aria-label]=\"\n                (config.label | translate) +\n                ' ' +\n                (config.iconButton.ariaText | translate)\n              \"\n            ></button>\n            <i [class]=\"config.iconButton.iconClass\"></i>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n  </ng-container>\n  <p\n    *ngIf=\"config.desc\"\n    class=\"input-desc\"\n  >\n    {{ config.desc || '' | translate }}\n  </p>\n  <p\n    *ngIf=\"config.hint\"\n    class=\"input-hint\"\n  >\n    {{ config.hint | translate }}\n  </p>\n</div>\n\n<ng-template #noLegend>\n  <label\n    *ngIf=\"config.label\"\n    class=\"label\"\n    [attr.for]=\"config.parentID\"\n  >\n    <span class=\"label_field_container\">\n      <div\n        class=\"required-field-container\"\n        *ngIf=\"config.required\"\n      >\n        <i class=\"fa-regular fa-asterisk required-star\"></i\n        >{{ config.label || '' | translate }}\n      </div>\n      <div *ngIf=\"!config.required\">\n        {{ config.label || '' | translate }}\n      </div>\n      <div\n        *ngIf=\"config.iconButton\"\n        class=\"icon_container\"\n      >\n        <button\n          class=\"touch_button\"\n          category=\"plain\"\n          (click)=\"iconButtonClick()\"\n          role=\"button\"\n          [attr.aria-label]=\"\n            (config.label | translate) +\n            ' ' +\n            (config.iconButton.ariaText | translate)\n          \"\n        ></button>\n        <i [class]=\"config.iconButton.iconClass\"></i>\n      </div>\n    </span>\n  </label>\n</ng-template>\n","import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IProgressTagsConfig } from '../progress-tags/progress-tags.component';\nimport { ITabConfig, ITabNavConfig } from '../tabs/tabs.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport const PROGRESS_INDICATOR_STEP_EN = 'Step';\nexport const PROGRESS_INDICATOR_STEP_FR = 'Étap';\n\nexport interface IStepConfig {\n  title?: string;\n  tagConfig: IProgressTagsConfig;\n}\nexport interface IProgressIndicatorConfig {\n  id: string;\n  size?: keyof typeof DSSizes;\n  orientation?: keyof typeof Orientations;\n  steps?: IStepConfig[];\n  selected?: number;\n}\nexport enum Orientations {\n  horizontal = 'horizontal',\n  vertical = 'vertical'\n}\n@Component({\n  selector: 'ircc-cl-lib-progress-indicator',\n  templateUrl: './progress-indicator.component.html'\n})\nexport class ProgressIndicatorComponent implements OnInit {\n  @Input() config: IProgressIndicatorConfig = {\n    id: '',\n    steps: [{ tagConfig: { id: '' } }],\n    orientation: 'horizontal'\n  };\n\n  @Input() id?: string;\n  @Input() size?: keyof typeof DSSizes;\n  @Input() orientation?: keyof typeof Orientations;\n  @Input() steps?: IStepConfig[];\n  @Input() selected?: number;\n\n  @Output() tabClick: EventEmitter<any> = new EventEmitter();\n\n  tabConfig: ITabConfig = {\n    id: '',\n    title: ''\n  };\n  tabNavConfig: ITabNavConfig = {\n    id: '',\n    tab: [{ id: '', title: '' }]\n  };\n\n  stepText = '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    //set config from individual options, if present\n    if (this.id) this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.orientation) this.config.orientation = this.orientation;\n    if (this.steps) this.config.steps = this.steps;\n    if (this.selected) this.config.selected = this.selected;\n\n    if (!this.config.orientation) this.config.orientation = 'horizontal';\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    if (this.config.selected === undefined) {\n      this.config.selected = 0;\n    }\n  }\n\n  tabClickFn(selected: number) {\n    this.tabClick.emit(selected);\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.stepText = PROGRESS_INDICATOR_STEP_EN;\n    } else {\n      this.stepText = PROGRESS_INDICATOR_STEP_FR;\n    }\n  }\n}\n","<div\n  [class]=\"config.orientation\"\n  class=\"{{ config?.size }} {{ config?.orientation }} main-container\"\n>\n  <div\n    class=\"container-plus-line\"\n    *ngFor=\"let step of config.steps; let i = index\"\n  >\n    <nav\n      class=\"progress-nav\"\n      role=\"navigation\"\n    >\n      <button\n        role=\"tab\"\n        class=\"container\"\n        [ngClass]=\"config.size\"\n        category=\"plain\"\n        [attr.disabled]=\"step.tagConfig.type === 'locked' ? 'disabled' : null\"\n        (click)=\"tabClickFn(i)\"\n      >\n        <div class=\"except-line\">\n          <button\n            tabindex=\"-1\"\n            *ngIf=\"i === config.selected\"\n            selected\n            class=\"tags-btn\"\n            [id]=\"config.id + '_step_' + i\"\n            [attr.aria-label]=\"stepText + ' ' + (i + 1) + ' selected'\"\n          >\n            {{ stepText + ' ' + (i + 1) }}\n          </button>\n          <button\n            tabindex=\"-1\"\n            *ngIf=\"i !== config.selected\"\n            class=\"tags-btn-plus\"\n            [id]=\"config.id + '_step_' + i\"\n            [attr.aria-label]=\"stepText + ' ' + (i + 1)\"\n          >\n            {{ stepText + ' ' + (i + 1) }}\n          </button>\n          <span\n            class=\"stepTitle\"\n            [innerHTML]=\"step.title || '' | translate\"\n          ></span>\n          <div [ngClass]=\"{ small: config.size === 'small' }\">\n            <ircc-cl-lib-progress-tags\n              [config]=\"step.tagConfig\"\n            ></ircc-cl-lib-progress-tags>\n          </div>\n        </div>\n      </button>\n    </nav>\n    <div\n      [ngClass]=\"{ 'green-line': step.tagConfig.type === 'success' }\"\n      class=\"line\"\n    ></div>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\n\nexport interface ILinkComponentConfig {\n  text: string;\n  linkKey?: string;\n  href?: string;\n  routerLink?: string;\n  overflow?: boolean;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-breadcrumb-link',\n  templateUrl: './link.component.html'\n})\nexport class BreadcrumbLinkComponent {\n  @Input() config: ILinkComponentConfig = {\n    text: '',\n    overflow: false\n  };\n\n  constructor() {}\n}\n","<ng-container *ngIf=\"config.href\">\n  <a\n    class=\"breadcrumb-anchor\"\n    [href]=\"config.href\"\n    tabindex=\"-1\"\n    >{{ config.text | translate }}\n  </a>\n</ng-container>\n<ng-container *ngIf=\"config.routerLink\">\n  <a\n    class=\"breadcrumb-anchor\"\n    type=\"button\"\n    tabindex=\"-1\"\n    [routerLink]=\"config.routerLink\"\n    >{{ config.text | translate }}\n  </a>\n</ng-container>\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  OnDestroy,\n  Output\n} from '@angular/core';\n\n/**\n * @see https://stackblitz.com/edit/angular-mutationobserver-example?file=app%2Fapp.module.ts,app%2Fdom-change.directive.ts,app%2Fapp.component.ts\n */\n@Directive({\n  selector: '[domChange]'\n})\nexport class DomChangeDirective implements OnDestroy {\n  private changes: MutationObserver;\n\n  @Output()\n  public domChange = new EventEmitter();\n\n  constructor(private elementRef: ElementRef) {\n    const element = this.elementRef.nativeElement;\n\n    this.changes = new MutationObserver((mutations: MutationRecord[]) => {\n      mutations.forEach((mutation: MutationRecord) =>\n        this.domChange.emit(mutation)\n      );\n    });\n\n    this.changes.observe(element, {\n      attributes: true,\n      childList: true,\n      characterData: true\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.changes.disconnect();\n  }\n}\n","import {\n  Component,\n  Input,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  HostListener,\n  ElementRef,\n  AfterViewInit,\n  Renderer2,\n  ChangeDetectorRef,\n  ViewChild\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { ILinkComponentConfig } from './link/link.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StandAloneFunctions } from '../../../shared/functions/stand-alone.functions';\nimport { IIconButtonComponentConfig } from '../icon-button/icon-button.component';\n\nexport enum LinkType {\n  href = 'href',\n  routerLink = 'routerLink'\n}\n\nexport interface IBreadcrumbConfig {\n  id: string;\n  size?: keyof typeof DSSizes;\n  type: keyof typeof LinkType;\n  // Translation key of base url segment\n  baseUrlKey: string;\n  // The mid-layer navigation to the ancestor links, the previous pages that lead to users to the child page\n  links?: ILinkComponentConfig[];\n}\n\n@Component({\n  selector: 'ircc-cl-lib-breadcrumb',\n  templateUrl: './breadcrumb.component.html'\n})\nexport class BreadcrumbComponent implements OnInit, OnChanges, AfterViewInit {\n  @Input() config: IBreadcrumbConfig = {\n    id: '',\n    baseUrlKey: '',\n    type: 'href'\n  };\n\n  @Input() id? = '';\n  @Input() size?: keyof typeof DSSizes;\n  @Input() type?: keyof typeof LinkType;\n  // Translation key of base url segment\n  @Input() baseUrlKey?: string;\n\n\n  baseUrl = '';\n  separatorIcon: IIconButtonComponentConfig = {\n    id: 'breadcrumb_separator',\n    category: 'custom',\n    size: this.config?.size,\n    icon: {\n      class: 'fa-light fa-ellipsis',\n      color: 'var(--text-primary)'\n    },\n    ariaLabel: ''\n  };\n  overflowLinks?: ILinkComponentConfig[];\n  normalLinks?: ILinkComponentConfig[]; // Links that are not overflow\n  displayOverflow = false;\n  private maxHeight: number = 0; // Max height of element in px\n  @ViewChild('breadcrumb_div', { static: false })\n  divRef?: ElementRef<HTMLElement>;\n  @ViewChild('breadcrumb_child', { static: false })\n  childRef?: ElementRef<HTMLParagraphElement>;\n  isChildOverflow: boolean = false;\n  constructor(\n    private translate: TranslateService,\n    private standalone: StandAloneFunctions,\n    private renderer: Renderer2,\n    private changeRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    //set config from individual options, if present\n    if(this.id && this.id !== '') this.config.id = this.id;\n    if(this.size) this.config.size = this.size;\n    if(this.type) this.config.type = this.type;\n    if(this.baseUrlKey) this.config.baseUrlKey = this.baseUrlKey\n\n    this.createLinks();\n    this.separatorIcon.size = this.config.size;\n    this.maxHeight = this.getMaxHeight();\n    this.separatorIcon.ariaLabel = this.translate.instant(\n      'ACC_DEMO.BREADCRUMB_COMPONENT.ADDITIONAL_LINKS'\n    );\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.createOverflows();\n      this.isChildOverflow = this.getChildOverflow();\n      this.changeRef.detectChanges();\n    }, 500);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // If changing size, update max height\n    if (\n      !changes['config'].firstChange &&\n      changes['config'].currentValue.size !==\n        changes['config'].previousValue.size\n    ) {\n      this.maxHeight = this.getMaxHeight();\n    }\n    // If changing link type, recreate all links\n    if (\n      !changes['config'].firstChange &&\n      changes['config'].currentValue.type !==\n        changes['config'].previousValue.type\n    ) {\n      this.createLinks();\n    }\n    if (this.config?.links && this.config?.links.length > 0) {\n      if (this.config.type == 'routerLink') {\n        this.config?.links.forEach((link) => {\n          delete link.href;\n        });\n      } else {\n        this.config?.links.forEach((link) => {\n          delete link.routerLink;\n        });\n      }\n    }\n    this.separatorIcon.size = this.config.size;\n  }\n\n  /**\n   * Create href or routerLinks\n   */\n  createLinks() {\n    this.baseUrl = this.standalone.getBaseUrl('', this.config.baseUrlKey);\n    if (this.config.links && this.config.links.length > 1) {\n      let prev: string | undefined;\n      this.config?.links.forEach((link, i) => {\n        if (i === 0) {\n          link[this.config.type] = this.baseUrl;\n          prev = link[this.config.type];\n        } else if (link.linkKey) {\n          link[this.config.type] =\n            prev + this.translate.instant(link.linkKey) + '/';\n          prev = link[this.config.type];\n        }\n        link.overflow = false;\n      });\n\n      this.overflowLinks = this.config?.links.filter((link) => link.overflow);\n      this.normalLinks = this.config?.links.filter((link) => !link.overflow);\n    }\n  }\n\n  getMaxHeight(): number {\n    const containerElement = this.divRef && this.divRef.nativeElement;\n    if (containerElement == undefined) return 0;\n    const tempElement = this.renderer.createElement('p');\n    const text = this.renderer.createText('Test');\n    this.renderer.appendChild(tempElement, text);\n    this.renderer.addClass(tempElement, 'breadcrumb-child');\n    this.renderer.appendChild(containerElement, tempElement);\n    const maxHeight = tempElement.offsetHeight;\n    this.renderer.removeChild(containerElement, tempElement);\n    // Calculate based on elipsis icon size to p tag ratio\n    return maxHeight * 1.375;\n  }\n\n  createOverflows() {\n    if (\n      this.divRef &&\n      this.divRef?.nativeElement.offsetHeight <= this.maxHeight\n    )\n      return;\n\n    if (this.config.links && this.config.links.length > 1) {\n      const linksLength = this.config.links.length;\n\n      const overflow = this.config?.links.find(\n        (link, i) => i > 0 && i < linksLength - 1 && !link.overflow\n      );\n      if (overflow) overflow.overflow = true;\n\n      this.overflowLinks = this.config?.links.filter((link) => link.overflow);\n      this.normalLinks = this.config?.links.filter((link) => !link.overflow);\n    }\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: Event) {\n    this.overflowLinks = [];\n    this.normalLinks = [];\n    this.createLinks();\n    this.createOverflows();\n    this.isChildOverflow = this.getChildOverflow();\n  }\n\n  flipOverflow(buttonId: string) {\n    this.displayOverflow = !this.displayOverflow;\n  }\n\n  // Check if child page title overflows to 2nd line\n  getChildOverflow(): boolean {\n    if (this.childRef) {\n      return (\n        this.childRef.nativeElement.offsetWidth <\n        this.childRef.nativeElement.scrollWidth\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","<nav\n  class=\"{{ config.size }}\"\n  (domChange)=\"createOverflows()\"\n  [attr.aria-label]=\"'Breadcrumb.Title' | translate\"\n  #breadcrumb_div\n>\n  <ng-container\n    *ngFor=\"let link of normalLinks; first as first; last as last; index as i\"\n  >\n    <ng-container *ngIf=\"first\">\n      <ircc-cl-lib-breadcrumb-link\n        tabindex=\"0\"\n        class=\"breadcrumb-root\"\n        [config]=\"link\"\n      ></ircc-cl-lib-breadcrumb-link>\n      <div\n        *ngIf=\"overflowLinks && overflowLinks.length > 0\"\n        class=\"overflow-container\"\n      >\n        <ircc-cl-lib-icon\n          [config]=\"{ FA_keywords: 'fa-light fa-chevron-right' }\"\n          id=\"overflow\"\n        ></ircc-cl-lib-icon>\n        <ircc-cl-lib-icon-button\n          (clickEvent)=\"flipOverflow($event)\"\n          class=\"elipsis-icon\"\n          [config]=\"separatorIcon\"\n        ></ircc-cl-lib-icon-button>\n        <div\n          class=\"overflow-menu\"\n          *ngIf=\"displayOverflow && overflowLinks && overflowLinks.length > 0\"\n        >\n          <ng-container *ngFor=\"let link of overflowLinks\">\n            <ircc-cl-lib-breadcrumb-link\n              tabindex=\"0\"\n              class=\"breadcrumb-overflow\"\n              [config]=\"link\"\n            ></ircc-cl-lib-breadcrumb-link>\n          </ng-container>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"!first && !last\">\n      <ircc-cl-lib-icon\n        [config]=\"{ FA_keywords: 'fa-light fa-chevron-right' }\"\n      ></ircc-cl-lib-icon>\n      <ircc-cl-lib-breadcrumb-link\n        tabindex=\"0\"\n        class=\"breadcrumb-item\"\n        [config]=\"link\"\n      ></ircc-cl-lib-breadcrumb-link>\n    </ng-container>\n    <ng-container *ngIf=\"last\">\n      <ircc-cl-lib-icon\n        [config]=\"{ FA_keywords: 'fa-light fa-chevron-right' }\"\n        class=\"\"\n      ></ircc-cl-lib-icon>\n      <p\n        class=\"breadcrumb-child\"\n        #breadcrumb_child\n      >\n        <span *ngIf=\"!isChildOverflow\">{{ link.text }}</span>\n        <abbr\n          *ngIf=\"isChildOverflow\"\n          [title]=\"link.text\"\n          >{{ link.text }}</abbr\n        >\n      </p>\n    </ng-container>\n  </ng-container>\n</nav>\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\n\nexport enum IndicatorType {\n  dot,\n  text,\n  number\n}\n\nexport enum IndicatorTreatment {\n  strong = 'strong',\n  weak = 'weak'\n}\n\nexport enum IndicatorPurpose {\n  status = 'status',\n  palette = 'palette'\n}\n\nexport enum IndicatorStatus {\n  information = 'information',\n  warning = 'warning',\n  critical = 'critical',\n  neutral = 'neutral',\n  primary = 'primary',\n  success = 'success'\n}\n\nexport enum IndicatorPalette {\n  teal,\n  orange,\n  red,\n  grey,\n  blue,\n  green,\n  purple,\n  navy\n}\n\nexport interface IIndicatorConfig {\n  label?: string | number;\n  size?: keyof typeof DSSizes;\n  type: keyof typeof IndicatorType;\n  icon?: string;\n  tabIndex?: number | undefined;\n  category: keyof typeof IndicatorTreatment; // Treatment\n  purpose: keyof typeof IndicatorPurpose;\n  status?: keyof typeof IndicatorStatus; // Sentiment\n  palette?: keyof typeof IndicatorPalette; // Colour\n  ariaLabel?: string; // Aria label line of value\n}\n\n@Component({\n  selector: 'ircc-cl-lib-indicator',\n  templateUrl: './indicator.component.html'\n})\nexport class IndicatorComponent implements OnInit, AfterViewInit, OnChanges {\n  @Input() config: IIndicatorConfig = {\n    type: 'text',\n    category: IndicatorTreatment.weak,\n    purpose: IndicatorPurpose.status,\n    tabIndex: -1\n  };\n\n  @Input() size?: keyof typeof DSSizes;\n  @Input() type?: keyof typeof IndicatorType;\n  @Input() icon?: string;\n  @Input() category?: keyof typeof IndicatorTreatment; // Treatment\n  @Input() purpose?: keyof typeof IndicatorPurpose;\n  @Input() status?: keyof typeof IndicatorStatus; // Sentiment\n  @Input() palette?: keyof typeof IndicatorPalette; // Colour\n  @Input() ariaLabel?: string; // Aria label line of value\n  @Input() tabIndex = undefined;\n\n  @ViewChild('label', { static: false }) label?: ElementRef<HTMLDivElement>;\n  EIndicatorStatus = IndicatorStatus;\n  rounded?: boolean;\n  abbr?: boolean; // Display abbr tag when text is truncated\n\n  ngOnInit() {\n    //set config from individual options, if present\n    if (this.size) this.config.size = this.size;\n    if (this.type) this.config.type = this.type;\n    if (this.icon) this.config.icon = this.icon;\n    if (this.category) this.config.category = this.category;\n    if (this.purpose) this.config.purpose = this.purpose;\n    if (this.status) this.config.status = this.status;\n    if (this.palette) this.config.palette = this.palette;\n    if (this.ariaLabel) this.config.ariaLabel = this.ariaLabel;\n    if (!this.tabIndex) this.config.tabIndex = -1;\n\n    this.checkLabelRounded();\n    this.checkNumber();\n\n    this.tabIndex !== undefined\n      ? (this.config.tabIndex = this.tabIndex)\n      : undefined;\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => this.checkLabelLength());\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.checkNumber();\n    this.checkLabelRounded();\n    this.checkLabelLength();\n    setTimeout(() => this.checkLabelLength());\n  }\n\n  // Check if number exceeds 99\n  private checkNumber() {\n    if (\n      this.config.type === 'number' &&\n      this.config?.label &&\n      this.config.label > 99\n    ) {\n      this.config.label = '99+';\n    }\n  }\n\n  // If label only have 1 character, it should be rounded\n  private checkLabelRounded() {\n    if (typeof this.config?.label === 'string') {\n      this.rounded = this.config.label.length == 1 && !this.config.icon;\n    }\n  }\n\n  // Check if div exceeds 200px\n  private checkLabelLength() {\n    if (this.config.type !== 'text') return;\n    // Max 200px - padding 8px x2\n    this.abbr = <boolean>(\n      (this.label?.nativeElement?.offsetWidth &&\n        this.label?.nativeElement?.offsetWidth > 184)\n    );\n  }\n}\n","<div\n  [ngClass]=\"['indicator-container', config.size ?? '']\"\n    [attr.aria-label]=\"\n    (config.ariaLabel ?? 'Indicator.Heading' | translate) +\n    ' ' +\n    (config.label ?? '')\n  \"\n  [tabindex]=\"config.tabIndex\"\n  role=\"group\"\n>\n  <div\n    *ngIf=\"config.type === 'text' || config.type === 'number'\"\n    #label\n    [ngClass]=\"[\n      config.type,\n      config.category,\n      config.purpose === 'status'\n        ? EIndicatorStatus[config.status ?? 'information']\n        : '',\n      config.purpose === 'palette' ? config.palette : '',\n      rounded ? 'rounded' : '',\n      config.label === '99+' ? 'num-lg' : '',\n      abbr ? 'abbr' : ''\n    ]\"\n  >\n    <ircc-cl-lib-icon\n      *ngIf=\"config.type === 'text' && config?.icon\"\n      [config]=\"{ FA_keywords: config.icon }\"\n      [attr.size]=\"config.size\"\n    ></ircc-cl-lib-icon>\n    <ng-container *ngIf=\"abbr; else nonAbbr\">\n      <span class=\"abbr\"\n        ><abbr [title]=\"config.label\">{{ config.label }}</abbr></span\n      >\n    </ng-container>\n    <ng-template #nonAbbr>\n      <span>{{ config.label }}</span>\n    </ng-template>\n  </div>\n  <span\n    *ngIf=\"config.type === 'dot'\"\n    [ngClass]=\"[\n      config.icon ? 'dot-icon' : '',\n      config.type,\n      config.category,\n      config.purpose === 'status'\n        ? EIndicatorStatus[config.status ?? 'information']\n        : '',\n      config.purpose === 'palette' ? config.palette : ''\n    ]\"\n  >\n    <ircc-cl-lib-icon\n      *ngIf=\"config?.icon\"\n      [config]=\"{ FA_keywords: config.icon }\"\n      [attr.size]=\"config.size\"\n    ></ircc-cl-lib-icon>\n  </span>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  DSFullSizes,\n  DSOrientations\n} from '../../../shared/constants/jl-components.constants';\n\nexport const SPINNER_LABELS_EN = ['Loading', 'Success', 'Error'];\nexport const SPINNER_LABELS_FR = ['Chargement', 'Succès', 'Erreur'];\n\nexport enum SpinnerType {\n  active = 'active',\n  success = 'success',\n  critical = 'critical'\n}\nexport interface ISpinnerConfig {\n  id: string;\n  type?: keyof typeof SpinnerType;\n  size?: keyof typeof DSFullSizes;\n  orientation?: keyof typeof DSOrientations;\n  label?: string;\n  description?: string;\n}\n@Component({\n  selector: 'ircc-cl-lib-spinner',\n  templateUrl: './spinner.component.html'\n})\nexport class SpinnerComponent implements OnInit {\n  text: string[] = [];\n\n  @Input() config: ISpinnerConfig = {\n    id: ''\n  };\n  @Input() id = '';\n  @Input() type?: keyof typeof SpinnerType | SpinnerType;\n  @Input() size?: keyof typeof DSFullSizes | DSFullSizes;\n  @Input() orientation?: keyof typeof DSOrientations | DSOrientations;\n  @Input() label?: '';\n  @Input() description?: '';\n\n  constructor(private translate: TranslateService) {}\n\n  ngOnInit() {\n    //set config from individual options, if present\n    if (this.id !== '') this.config.id = this.id;\n    if (this.type) this.config.type = this.type;\n    if (this.size) this.config.size = this.size;\n    if (this.orientation) this.config.orientation = this.orientation;\n    if (this.label !== '') this.config.label = this.label;\n    if (this.description !== '') this.config.description = this.description;\n    \n    if (!this.config.orientation) this.config.orientation = 'horizontal';\n    if (!this.config.size) this.config.size = 'large';\n    this.removeVertical();\n\n    this.setTypeTitle();\n    this.translate.onLangChange.subscribe(() => {\n      this.setTypeTitle();\n    });\n  }\n\n  ngOnChanges() {\n    this.setTypeTitle();\n  }\n\n  setTypeTitle() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.text = SPINNER_LABELS_EN;\n    } else {\n      this.text = SPINNER_LABELS_FR;\n    }\n  }\n\n  removeVertical() {\n    if (\n      this.config.size !== 'large' &&\n      this.config.orientation === 'vertical'\n    ) {\n      this.config.orientation = 'horizontal';\n    }\n  }\n\n  getSuccessTitle(): string {\n    return (this.config.label || this.config.description) ? '' : this.text[1];\n  }\n  getErrorTitle(): string {\n    return (this.config.label || this.config.description) ? '' : this.text[2];\n  }\n}\n","<div\n  class=\"{{ config.size }} {{ config.orientation }}\"\n  id=\"{{ config.id }}\"\n  aria-live=\"polite\"\n>\n  <div\n    class=\"spinner-container\"\n    [ngClass]=\"{\n      active: config.type === 'active',\n      success: config.type === 'success',\n      critical: config.type === 'critical'\n    }\"\n  >\n    <ng-container [ngSwitch]=\"config.type\">\n      <div\n        *ngSwitchCase=\"'success'\"\n        class=\"container\"\n      >\n        <div class=\"icon-div\">\n          <ircc-cl-lib-icon\n            [config]=\"{\n              FA_keywords: 'fa-check fa-regular',\n              ariaLabel: getSuccessTitle()\n            }\"\n            class=\"spinner-icon\"\n          ></ircc-cl-lib-icon>\n        </div>\n        <div class=\"text\">\n          <div\n            class=\"label\"\n            [innerHTML]=\"config.label\"\n          ></div>\n          <div\n            *ngIf=\"config.size === 'large'\"\n            class=\"desc\"\n            [innerHTML]=\"config.description\"\n          ></div>\n        </div>\n      </div>\n      <div\n        *ngSwitchCase=\"'critical'\"\n        class=\"container\"\n      >\n        <div class=\"icon-div\">\n          <ircc-cl-lib-icon\n            [config]=\"{\n              FA_keywords: 'fa-exclamation fa-regular',\n              ariaLabel: getErrorTitle()\n            }\"\n            class=\"spinner-icon\"\n          ></ircc-cl-lib-icon>\n        </div>\n        <div class=\"text\">\n          <div\n            class=\"label\"\n            [innerHTML]=\"config.label\"\n          ></div>\n          <div\n            *ngIf=\"config.size === 'large'\"\n            class=\"desc\"\n            [innerHTML]=\"config.description\"\n          ></div>\n        </div>\n      </div>\n      <div\n        *ngSwitchDefault\n        class=\"container\"\n      >\n        <div class=\"icon-div\">\n          <img\n            src=\"./src/assets/icons/spinner-states.svg\"\n            [attr.alt]=\"config.label || config.description ? '' : text[0]\"\n            class=\"animated-icon loading-icon\"\n          />\n        </div>\n        <div class=\"text\">\n          <div\n            class=\"label\"\n            [innerHTML]=\"config.label\"\n          ></div>\n          <div\n            *ngIf=\"config.size === 'large'\"\n            class=\"desc\"\n            [innerHTML]=\"config.description\"\n          ></div>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n</div>\n","import {\n  Component,\n  Input,\n  Renderer2,\n  ElementRef,\n  AfterViewInit,\n  ViewChild,\n  OnInit\n} from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DSViewPortSize } from '../../../shared/constants/jl-components.constants';\n\nexport interface IDynamicImageComponentConfig {\n  id: string;\n  breakpoints: IBreakpoint[];\n  defaultSrc: string;\n  altText: string;\n  lazyLoad?: boolean;\n}\nexport interface IBreakpoint {\n  maxWidth: DSViewPortSize;\n  src: string;\n}\n@Component({\n  selector: 'ircc-cl-lib-dynamic-image',\n  templateUrl: './dynamic-image.component.html'\n})\nexport class DynamicImageComponent implements OnInit, AfterViewInit {\n  @ViewChild('image', { static: true }) image: ElementRef | undefined;\n  @Input() config: IDynamicImageComponentConfig = {\n    id: '',\n    breakpoints: [{ maxWidth: DSViewPortSize.default, src: '' }],\n    altText: '',\n    defaultSrc: '',\n    lazyLoad: false\n  };\n\n  @Input() id: string = '';\n  @Input() breakpoints:\n    | [{ maxWidth: DSViewPortSize.default; src: '' }]\n    | undefined;\n  @Input() altText: string = '';\n  @Input() defaultSrc?: string = '';\n  @Input() lazyLoad: boolean = false;\n\n  constructor(\n    private translate: TranslateService,\n    private renderer: Renderer2,\n    private el: ElementRef\n  ) {}\n\n  ngOnInit() {\n    if (this.id) this.config.id = this.id;\n    if (this.breakpoints) this.config.breakpoints = this.breakpoints;\n    if (this.altText) this.config.altText = this.altText;\n    if (this.defaultSrc) this.config.defaultSrc = this.defaultSrc;\n    if (this.lazyLoad) this.config.lazyLoad = this.lazyLoad;\n  }\n\n  ngAfterViewInit() {\n    this.updateImageSrc();\n    window.addEventListener('resize', () => this.updateImageSrc());\n  }\n\n  updateImageSrc() {\n    if (this.image?.nativeElement) {\n      const screenWidth = window.innerWidth;\n  \n      // Find the matching breakpoint for the current screen width\n      const breakpoint = this.config.breakpoints.find(\n        (breakpoint) => screenWidth <= breakpoint.maxWidth\n      );\n  \n      if (breakpoint) {\n        // Set the src attribute of the image to the matched breakpoint's src\n        this.renderer.setAttribute(\n          this.image?.nativeElement,\n          'src',\n          breakpoint.src\n        );\n      } else {\n        // If no matching breakpoint is found, use the default src image\n        this.renderer.setAttribute(\n          this.image?.nativeElement,\n          'src',\n          this.config.defaultSrc\n        );\n      }\n    }\n  }\n}\n","<div\n  id=\"{{ config.id + '-container' }}\"\n  class=\"dynamic-image-wrapper\"\n>\n  <img\n    #image\n    [alt]=\"config.altText || '' | translate\"\n    [attr.loading]=\"config.lazyLoad ? 'lazy' : null\"\n  />\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RouterModule } from '@angular/router';\nimport { autocompletePipe } from './autocomplete.pipe';\n\nconst IrccDsSharedComponents = [autocompletePipe];\n\n@NgModule({\n  declarations: [...IrccDsSharedComponents],\n  imports: [CommonModule, TranslateModule, RouterModule],\n  exports: [\n    CommonModule,\n    TranslateModule,\n    RouterModule,\n    ...IrccDsSharedComponents\n  ]\n})\nexport class IrccDsAngularPipesdModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RouterModule } from '@angular/router';\nimport { ButtonComponent } from './button/button.component';\nimport { IconComponent } from './icon/icon.component';\nimport { IconButtonComponent } from './icon-button/icon-button.component';\nimport { TabsComponent } from './tabs/tabs.component';\nimport { ProgressTagsComponent } from './progress-tags/progress-tags.component';\nimport { DropdownComponent } from './dropdown/drop-down.component';\nimport { LabelComponent } from './label/label.component';\nimport { ProgressIndicatorComponent } from './progress-indicator/progress-indicator.component';\nimport { BreadcrumbComponent } from './breadcrumb/breadcrumb.component';\nimport { BreadcrumbLinkComponent } from './breadcrumb/link/link.component';\nimport { IndicatorComponent } from './indicator/indicator.component';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { DomChangeDirective } from '../../shared/directives/dom-change.directive';\nimport { FlyoutComponent } from './flyout/flyout.component';\nimport { FlyoutOptionComponent } from './flyout-option/flyout-option.component';\nimport { DynamicImageComponent } from './dynamic-image/dynamic-image.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { ScrollingModule as ExperimentalScrollingModule } from '@angular/cdk-experimental/scrolling';\n\nimport { IrccDsAngularPipesdModule } from '../../shared/pipes/pipes.module';\n\nconst IrccDsSharedComponents = [\n  ButtonComponent,\n  BreadcrumbComponent,\n  BreadcrumbLinkComponent,\n  IconComponent,\n  IconButtonComponent,\n  IndicatorComponent,\n  TabsComponent,\n  ProgressTagsComponent,\n  DropdownComponent,\n  LabelComponent,\n  ProgressTagsComponent,\n  ProgressIndicatorComponent,\n  SpinnerComponent,\n  FlyoutComponent,\n  FlyoutOptionComponent,\n  DynamicImageComponent\n];\n\n@NgModule({\n  declarations: [...IrccDsSharedComponents, DomChangeDirective],\n  imports: [\n    CommonModule,\n    TranslateModule,\n    RouterModule,\n    ScrollingModule,\n    ExperimentalScrollingModule,\n    IrccDsAngularPipesdModule\n  ],\n  exports: [\n    CommonModule,\n    TranslateModule,\n    RouterModule,\n    ScrollingModule,\n    ExperimentalScrollingModule,\n    ...IrccDsSharedComponents\n  ]\n})\nexport class IrccDsAngularComponentsSharedModule { }\n","import { NgModule } from '@angular/core';\nimport { BannerComponent } from './banner/banner.component';\nimport { IrccDsAngularComponentsSharedModule } from '../shared/ircc-ds-angular-component-shared.module';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [BannerComponent],\n  imports: [IrccDsAngularComponentsSharedModule, CommonModule, TranslateModule],\n  exports: [BannerComponent]\n})\nexport class IrccDsAngularBannerModule {}\n","import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges\n} from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IIconConfig } from '../../shared/icon/icon.component';\n\nexport interface IErrorIconConfig {\n  class: string; // Fontawesome icon class\n  color?: string; // icon color\n}\n\nexport interface IErrorComponentConfig {\n  id: string;\n  errorLOV: string;\n  size?: keyof typeof DSSizes;\n  icon?: IErrorIconConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-error',\n  templateUrl: './error.component.html'\n})\nexport class ErrorComponent implements OnInit, OnChanges {\n  @Input() config?: IErrorComponentConfig;\n  @Input() id?: string;\n  @Input() errorLOV?: string;\n  @Input() icon?: IErrorIconConfig;\n  @Input() size?: keyof typeof DSSizes;\n  iconConfig?: IIconConfig;\n\n  constructor() {}\n  ngOnInit() {\n    //Initial null and override check:\n    if (!this.config)\n      this.config = {\n        id: '',\n        errorLOV: ''\n      };\n    this.portInputValues();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.portInputValues();\n  }\n\n  private portInputValues() {\n    if (this.config) {\n      if (this.id) this.config.id = this.id;\n      if (this.errorLOV) this.config.errorLOV = this.errorLOV;\n      if (this.icon) this.config.icon = this.icon;\n      if (this.size) this.config.size = this.size;\n\n      this.iconConfig = {\n        FA_keywords:\n          this.config.icon?.class ?? 'fa-light fa-circle-exclamation',\n        size: this.config.size\n      };\n    }\n  }\n}\n","<div\n  class=\"{{ config?.size }} errorComponent\"\n  id=\"{{ config?.id }}\"\n  [ngClass]=\"{ errorContainer: config?.id?.endsWith('error0') }\"\n>\n  <ircc-cl-lib-icon\n    *ngIf=\"config?.id?.endsWith('error0') && iconConfig\"\n    [config]=\"iconConfig\"\n    class=\"errorIcon\"\n  ></ircc-cl-lib-icon>\n  <p\n    [ngClass]=\"{ additionalError: !config?.id?.endsWith('error0') }\"\n    class=\"errorText\"\n  >\n    {{ config?.errorLOV || '' | translate }}\n  </p>\n</div>\n","import {\n  AfterContentChecked,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewChild\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormControlStatus,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IIconButtonComponentConfig } from '../../shared/icon-button/icon-button.component';\n\nexport interface IInputComponentConfig {\n  label?: string;\n  hint?: string;\n  desc?: string;\n  required?: boolean; // This field only adds styling to the label and DOES NOT add any validation to the input field.\n  placeholder?: string;\n  type?: keyof typeof InputTypes;\n  id: string;\n  size?: keyof typeof DSSizes;\n  formGroup: FormGroup;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport enum InputTypes {\n  text = 'text',\n  password = 'password',\n  autocomplete = 'autocomplete'\n}\n\nexport const ARIA_TEXT = {\n  en: {\n    btnTypePasswordAriaLabel: 'password eye icon',\n    btnTypePasswordShowAriaLabel: 'display password text',\n    btnTypePasswordHideAriaLabel: 'mark password text',\n    btnTypeAutoCompleteClear: 'clear text'\n  },\n  fr: {\n    btnTypePasswordAriaLabel: \"icône d'oeil de mot de passe\",\n    btnTypePasswordShowAriaLabel: 'afficher le texte du mot de passe',\n    btnTypePasswordHideAriaLabel: 'mark password text',\n    btnTypeAutoCompleteClear: 'Effacer le texte'\n  }\n};\n\n@Component({\n  selector: 'ircc-cl-lib-input',\n  templateUrl: './input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true\n    }\n  ]\n})\nexport class InputComponent\n  implements ControlValueAccessor, OnInit, OnChanges, AfterContentChecked\n{\n  formGroupEmpty: FormGroup = new FormGroup({});\n  /**\n   * Note: DON'T include default values of '' unless it REALLY makes sense to do so - instead, make them optional.\n   * The config input is where you declare the inputs desired properties such as labels, hints, descriptions, etc. where only the id and form group are mandatory properties. Refer to IInputComponentConfig interface.\n   */\n  @Input() config: IInputComponentConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n  /**\n   * The input id is used to identify the component uniquely for subscribing to value changes and errors\n   */\n  @Input() id = '';\n\n  /**\n   * FormGroup aggregates the values of each child FormControl into one object, with each control name as the key. It calculates its status by reducing the status values of its children. For example, if one of the controls in a group is invalid, the entire group becomes invalid.\n   */\n  @Input() formGroup = this.formGroupEmpty;\n\n  /**\n   * Type refers to the 2 different input options: basic text or password as the password type has additional configuration\n   */\n  @Input() type: keyof typeof InputTypes = InputTypes.password;\n\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string;\n  @Input() hint?: string;\n  @Input() desc?: string;\n  @Input() required?: boolean; // This field only adds styling to the label and DOES NOT add any validation to the input field.\n  @Input() placeholder?: string;\n  @Input() errorMessages?: IErrorPairs[];\n  @Output() focusEvent = new EventEmitter();\n\n  @ViewChild('inputEl') inputEl?: ElementRef;\n\n  disabled = false;\n  focusState = false;\n  showPassword?: boolean;\n  typeControl: keyof typeof InputTypes = InputTypes.text;\n  btnAriaLabel = '';\n  btnAriaLabelHide = '';\n  btnAriaLabelShow = '';\n  btnAriaTypeAutoCompleteClear = '';\n  errorIds: IErrorIDs[] = [];\n  errorAria = '';\n  formControl?: AbstractControl;\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n  currentStatus: FormControlStatus = 'VALID';\n\n  buttonAutoCompleteClear: IIconButtonComponentConfig = {\n    id: `${this.config.id}-button-autocomplete`,\n    category: 'custom',\n    size: 'extraSmall',\n    icon: {\n      class: 'fa-solid fa-circle-xmark',\n      color: 'var(--neutral-text)'\n    }\n  };\n  buttonAutoCompleteClearClicked: boolean = false;\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private renderer: Renderer2\n  ) {\n    //set config from individual options, if present\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n    if (this.id !== '') {\n      this.config.id = this.id;\n    }\n\n    if (!this.config.type) {\n      this.config.type = InputTypes.text;\n    } else if (this.config.type === InputTypes.password) {\n      this.showPassword = false;\n      this.typeControl = InputTypes.password;\n    }\n\n    if (this.size) this.config.size = this.size;\n    if (this.label) this.config.label = this.label;\n    if (this.hint) this.config.hint = this.hint;\n    if (this.desc) this.config.desc = this.desc;\n    if (this.required) this.config.required = this.required;\n    if (this.placeholder) this.config.placeholder = this.placeholder;\n    if (this.errorMessages) this.config.errorMessages = this.errorMessages;\n  }\n\n  //Removed '!' and added null case in onChange\n  onTouch = () => {\n    if (this.formGroup?.get(this.config.id)?.touched === false) {\n      this.formGroup?.get(this.config.id)?.markAsTouched();\n    }\n  };\n\n  onChange = (value: string) => {\n    this.config.formGroup.get(this.config.id)?.setValue(value);\n  };\n\n  ngAfterContentChecked() {\n    this.changeDetectorRef.detectChanges();\n  }\n\n  /**\n   * When the page loads, we initialize the form with it's controls, labels, and config, and detect value changes and errors. setLang detects changes to the language toggle to serve the correct text\n   */\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.type === InputTypes.text\n      ? (this.showPassword = false)\n      : (this.showPassword = true);\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    //set disable to true when form is disabled\n    this.config.formGroup.valueChanges.subscribe((change) => {\n      this.disabled = this.config.formGroup.get(this.config.id)\n        ?.disabled as boolean;\n    });\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    this.currentStatus =\n      this.config.formGroup.get(this.config.id)?.status || 'DISABLED';\n    switch (this.currentStatus) {\n      case 'DISABLED':\n        this.setDisabledState(true);\n        break;\n      default:\n        this.setDisabledState(false);\n    } //Get the error text when the formControl value changes\n    this.config.formGroup\n      .get(this.config.id)\n      ?.statusChanges.subscribe((change) => {\n        this.getAriaErrorText();\n        if (change !== this.currentStatus) {\n          this.currentStatus = change;\n          switch (this.currentStatus) {\n            case 'DISABLED':\n              this.setDisabledState(true);\n              break;\n            default:\n              this.setDisabledState(false);\n          }\n        }\n      });\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n    setTimeout(() => {\n      // Do not emit blur event after clicking clear button\n      if (!this.buttonAutoCompleteClearClicked) {\n        this.focusEvent.emit(false);\n      }\n      this.buttonAutoCompleteClearClicked = false;\n    }, 100);\n  }\n\n  onFocus() {\n    if (!this.config.formGroup.get(this.config.id)?.disabled) {\n      this.focusEvent.emit(true);\n    }\n  }\n\n  /**\n   * setLang detects changes to the language toggle to serve the correct aria error text\n   */\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB.en;\n      this.btnAriaLabel = ARIA_TEXT.en.btnTypePasswordAriaLabel;\n      this.btnAriaLabelHide = ARIA_TEXT.en.btnTypePasswordHideAriaLabel;\n      this.btnAriaLabelShow = ARIA_TEXT.en.btnTypePasswordShowAriaLabel;\n      this.btnAriaTypeAutoCompleteClear = ARIA_TEXT.en.btnTypeAutoCompleteClear;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB.fr;\n      this.btnAriaLabel = ARIA_TEXT.fr.btnTypePasswordAriaLabel;\n      this.btnAriaLabelHide = ARIA_TEXT.fr.btnTypePasswordHideAriaLabel;\n      this.btnAriaLabelShow = ARIA_TEXT.fr.btnTypePasswordShowAriaLabel;\n      this.btnAriaTypeAutoCompleteClear = ARIA_TEXT.en.btnTypeAutoCompleteClear;\n    }\n  }\n\n  /**\n   * A lifecycle hook that is called when any data-bound property of a directive changes.\n   */\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    } else {\n      this.errorIds = [];\n    }\n\n    if (this.config.type === InputTypes.autocomplete) {\n      this.typeControl = InputTypes.text;\n    } else if (this.config.type) {\n      this.typeControl = this.config.type;\n    }\n\n    this.showPassword =\n      this.config.type === InputTypes.password &&\n      this.typeControl === InputTypes.text;\n  }\n\n  /**\n   * Apply focus state\n   */\n  public focusInput(focusValue: boolean): void {\n    this.focusState = !focusValue;\n  }\n\n  /**\n   * Toggle the password field\n   */\n  hideShow() {\n    this.showPassword = !this.showPassword;\n\n    if (this.showPassword) {\n      this.typeControl = InputTypes.text;\n    } else {\n      this.typeControl = InputTypes.password;\n    }\n  }\n\n  public clearvalue() {\n    this.buttonAutoCompleteClearClicked = true;\n    this.config.formGroup.controls[this.config.id].setValue('');\n    this.renderer.selectRootElement(this.inputEl?.nativeElement).focus();\n    this.focusEvent.emit(true);\n  }\n\n  /**\n   * Prevents the info button from being triggered and marks the input as touched.\n   * @param event\n   */\n  enterEvent(event: Event) {\n    event.preventDefault();\n    this.config.formGroup.get(this.config.id)?.markAsTouched();\n    this.focusEvent.emit(false);\n  }\n\n  escapeEvent(event: Event) {\n    event.preventDefault();\n    this.config.formGroup.get(this.config.id)?.markAsTouched();\n    this.focusEvent.emit(false);\n  }\n\n  changeValue(event: any) {\n    this.writeValue(event.srcElement.value);\n    this.onTouch();\n  }\n\n  writeValue(value: string): void {\n    this.onChange(value);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  /**\n   * Apply a disabled state\n   */\n  setDisabledState(isDisabled: boolean) {\n    if (isDisabled) {\n      this.formGroup.get(this.config.id)?.disable();\n    } else {\n      this.formGroup.get(this.config.id)?.enable();\n    }\n  }\n\n  /**\n   * Return error state from FormGroup, must be touched & invalid\n   */\n  get getErrorState(): boolean {\n    return (\n      (this.config.formGroup.get(this.config.id)?.touched &&\n        this.config.formGroup.get(this.config.id)?.invalid) ??\n      false\n    );\n  }\n\n  get getValueLength(): number {\n    if (this.config.formGroup.get(this.config.id)?.value) {\n      return this.config.formGroup.get(this.config.id)?.value.length;\n    } else {\n      return 0;\n    }\n  }\n}\n","<div\n  id=\"{{ config.id + '_container' }}\"\n  class=\"input-wrapper\"\n>\n  <form\n    [formGroup]=\"config.formGroup\"\n    [attr.autocomplete]=\"config.type !== 'autocomplete' ? true : false\"\n  >\n    <div\n      class=\"input-container\"\n      [ngClass]=\"config.size\"\n    >\n      <div class=\"input-text\">\n        <ircc-cl-lib-label\n          [config]=\"labelConfig\"\n          [attr.size]=\"config.size\"\n        ></ircc-cl-lib-label>\n        <div\n          class=\"input-content-area\"\n          [ngClass]=\"focusState === true ? 'focus' : ''\"\n        >\n          <!-- ngModel doesn't mind undefined values, apparently\n          TODO: Should probably change the (keyup) to (onblur) -->\n          <input\n            (blur)=\"onTouchedLabel()\"\n            (focus)=\"onFocus()\"\n            (change)=\"changeValue($event)\"\n            name=\"{{ config.id }}\"\n            class=\"input-field\"\n            placeholder=\"{{ config.placeholder || '' | translate }}\"\n            tabindex=\"0\"\n            [ngClass]=\"\n              config.type === 'password'\n                ? 'input-password-field'\n                : 'input-text-field'\n            \"\n            #inputEl\n            [type]=\"typeControl\"\n            [id]=\"config.id\"\n            [formControlName]=\"config.id\"\n            (keydown.enter)=\"enterEvent($event)\"\n            (keydown.escape)=\"escapeEvent($event)\"\n            [attr.aria-invalid]=\"formControl?.invalid\"\n            [attr.aria-live]=\"'off'\"\n            [attr.aria-label]=\"\n              formControl?.invalid && touched\n                ? (config.label || '' | translate) +\n                  ' ' +\n                  (config.desc || '' | translate) +\n                  ' ' +\n                  (config.hint || '' | translate) +\n                  ' ' +\n                  (errorStubText + ': ' + errorAria)\n                : (config.label || '' | translate) +\n                  ' ' +\n                  (config.desc || '' | translate) +\n                  ' ' +\n                  (config.hint || '' | translate)\n            \"\n          />\n\n          <button\n            *ngIf=\"config.type === 'password'\"\n            role=\"button\"\n            category=\"plain\"\n            tabindex=\"0\"\n            class=\"passwordIcon\"\n            (click)=\"hideShow()\"\n            [disabled]=\"currentStatus === 'DISABLED'\"\n            attr.aria-label=\"{{ btnAriaLabel }}\"\n            aria-live=\"polite\"\n          >\n            <div\n              *ngIf=\"showPassword\"\n              role=\"img\"\n              attr.aria-label=\"{{ btnAriaLabelHide }}\"\n            >\n              <i class=\"fa-solid fa-eye-slash\"></i>\n            </div>\n            <div\n              *ngIf=\"!showPassword\"\n              role=\"img\"\n              attr.aria-label=\"{{ btnAriaLabelShow }}\"\n            >\n              <i class=\"fa-solid fa-eye\"></i>\n            </div>\n          </button>\n\n          <ng-container\n            *ngIf=\"config.type === 'autocomplete' && getValueLength > 0\"\n          >\n            <ircc-cl-lib-icon-button\n              class=\"autocompleteicon\"\n              (clickEvent)=\"clearvalue()\"\n              [config]=\"buttonAutoCompleteClear\"\n              [attr.size]=\"config.size\"\n            ></ircc-cl-lib-icon-button>\n          </ng-container>\n        </div>\n      </div>\n      <div aria-live=\"polite\">\n        <div *ngIf=\"config.formGroup.get(config.id)?.touched && currentStatus === 'INVALID'\">\n          <span class=\"sr-only\">{{\n            errorStubText + ': ' + (config.label || '' | translate) + ': '\n          }}</span>\n          <ng-container *ngFor=\"let errors of errorIds; let i = index\">\n            <div\n              *ngIf=\"formControl?.errors?.[errors.key]\"\n              class=\"radio-errors\"\n            >\n              <ircc-cl-lib-error\n                [id]=\"errors.id\"\n                [errorLOV]=\"errors.errorLOV\"\n                [size]=\"config.size\"\n              ></ircc-cl-lib-error>\n            </div>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, forwardRef, Input, OnChanges, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormControlStatus,\n  FormGroup,\n  NG_VALUE_ACCESSOR,\n  ValidatorFn\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface IRadioInputComponentConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean;\n  options?: IRadioInputOption[];\n  size?: keyof typeof DSSizes;\n  disabled?: boolean;\n  error?: true;\n  validators?: ValidatorFn[];\n  helpText?: string;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport interface IRadioInputOption {\n  text: string;\n  value?: string;\n  sizeOverride?: keyof typeof DSSizes;\n  disabled?: true;\n  error?: true;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-radio-input',\n  templateUrl: './radio-input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => RadioInputComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class RadioInputComponent\n  implements OnInit, OnChanges, ControlValueAccessor\n{\n  formGroupEmpty = new FormGroup({});\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  formControl?: AbstractControl;\n  currentStatus: FormControlStatus = 'VALID';\n\n  @Input() config: IRadioInputComponentConfig = {\n    id: '',\n    formGroup: this.formGroupEmpty\n  };\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string;\n  @Input() desc?: string;\n  @Input() hint?: string;\n  @Input() required?: boolean;\n  @Input() options?: IRadioInputOption[];\n  @Input() disabled?: boolean;\n  @Input() error?: true;\n  @Input() validators?: ValidatorFn[];\n  @Input() helpText?: string;\n  @Input() errorMessages?: IErrorPairs[];\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n  errorAria = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  onTouch = () => {\n    if (this.formGroup?.get(this.config.id)?.touched === false) {\n      this.formGroup?.get(this.config.id)?.markAsTouched();\n    }\n  };\n\n  onChange = (value: string) => {\n    this.config.formGroup.get(this.config.id)?.setValue(value);\n  };\n  \n  changeValue(event: any){\n    this.writeValue(event.srcElement.value);\n    this.onTouch();\n  }\n\n  writeValue(value: string): void {\n      this.onChange(value);\n  }\n  \n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  \n  registerOnTouched(onTouched: any) {\n    this.onTouch = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouch();\n      this.touched = true;\n    }\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    //set config from individual options, if present\n    if (this.id !== '') this.config.id = this.id;\n    if (this.formGroup !== this.formGroupEmpty)\n      this.config.formGroup = this.formGroup;\n    if (this.size) this.config.size = this.size;\n    if (this.label) this.config.label = this.label;\n    if (this.desc) this.config.desc = this.desc;\n    if (this.hint) this.config.hint = this.hint;\n    if (this.required) this.config.required = this.required;\n    if (this.options) this.config.options = this.options;\n    if (this.disabled) this.config.disabled = this.disabled;\n    if (this.error) this.config.error = this.error;\n    if (this.validators) this.config.validators = this.validators;\n    if (this.helpText) this.config.helpText = this.helpText;\n    if (this.errorMessages) this.config.errorMessages = this.errorMessages;\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    this.currentStatus = this.config.formGroup.get(this.config.id)?.status || 'DISABLED';\n    this.toggleDisabledState();\n    this.config.formGroup\n    .get(this.config.id)\n    ?.statusChanges.subscribe((change) => {\n      this.getAriaErrorText();\n      if (change !== this.currentStatus) {\n        this.currentStatus = change;\n        this.toggleDisabledState();\n      }\n    });\n}\n\n    toggleDisabledState() {\n    switch (this.currentStatus) {\n      case 'DISABLED':\n      this.setDisabledState(true);\n      break;\n    default:\n      this.setDisabledState(false);\n      break;\n    }\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB.en;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB.fr;\n    }\n  }\n  \n  setDisabledState(isDisabled: boolean) {\n    if(isDisabled){\n      this.formGroup.get(this.config.id)?.disable();\n    }else{\n      this.formGroup.get(this.config.id)?.enable();\n    }\n  }\n}\n","<form\n  [formGroup]=\"config.formGroup\"\n  [ngClass]=\"config.size\"\n>\n  <ircc-cl-lib-label\n    [config]=\"labelConfig\"\n    [attr.size]=\"config.size\"\n    [legend]=\"true\"\n  ></ircc-cl-lib-label>\n  <div class=\"radio-buttons\">\n    <div\n      *ngFor=\"let option of config.options; let index = index\"\n      class=\"radio\"\n    >\n      <!-- TODO: See if we can remove the error state from here, since it is controlled by the formControl -->\n      <input\n        (blur)=\"touched = true\"\n        type=\"radio\"\n        value=\"{{ option.value || option.text }}\"\n        id=\"{{ config.id + index }}\"\n        (click)=\"standAloneFunctions.wasTouched(config.formGroup, config.id)\"\n        [formControlName]=\"config.id ? config.id : 'formControl'\"\n        [ngClass]=\"option?.sizeOverride ? option?.sizeOverride : config.size\"\n        [attr.aria-invalid]=\"formControl?.invalid\"\n        [attr.aria-live]=\"'off'\"\n        [attr.aria-label]=\"\n          formControl?.invalid && touched\n            ? (config.label || '' | translate) +\n              ' ' +\n              (config.desc || '' | translate) +\n              ' ' +\n              (config.hint || '' | translate) +\n              ' ' +\n              (config.helpText || '' | translate) +\n              ' ' +\n              (option.text || '' | translate) +\n              ' ' +\n              (errorStubText + ': ' + errorAria)\n            : (config.label || '' | translate) +\n              ' ' +\n              (config.desc || '' | translate) +\n              ' ' +\n              (config.hint || '' | translate) +\n              ' ' +\n              (config.helpText || '' | translate) +\n              ' ' +\n              (option.text || '' | translate)\n        \"\n      />\n      <label\n        for=\"{{ config.id + index }}\"\n        [ngClass]=\"\n          option?.sizeOverride\n            ? option?.sizeOverride + '_label'\n            : config.size + '_label'\n        \"\n        >{{ option.text || '' | translate }}</label\n      >\n    </div>\n  </div>\n  <div aria-live=\"polite\">\n    <ng-container *ngIf=\"config.formGroup.get(config.id)?.touched && currentStatus === 'INVALID'\">\n      <span class=\"sr-only\">{{\n        errorStubText + ': ' + (config.label || '' | translate) + ': '\n      }}</span>\n      <ng-container *ngFor=\"let errors of errorIds; let i = index\">\n        <div\n          *ngIf=\"formControl?.errors?.[errors.key]\"\n          class=\"radio-errors\"\n        >\n          <ircc-cl-lib-error\n            [id]=\"errors.id\"\n            [errorLOV]=\"errors.errorLOV\"\n            [size]=\"config.size\"\n          ></ircc-cl-lib-error>\n        </div>\n      </ng-container>\n    </ng-container>\n  </div>\n</form>\n","import { Injectable } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nexport interface IMultiCheckboxEvent {\n  id: string;\n  event: any;\n  remove?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MultiCheckboxService {\n  //This is a subject, we're making subject => observable after\n  // Anytime change to subject, it will propagate out to all other things related to it\n  private multiCheckboxEventSubj = new Subject<IMultiCheckboxEvent>();\n  multiCheckboxEventObs$ = this.multiCheckboxEventSubj.asObservable(); //Use this for any events we need propagated up to parents\n\n  /**\n   * Broadcast element events\n   * @param event: ImultiCheckboxEvent where id is the id of the component broadcasting and event is the Event\n   */\n  checkEvent(event: IMultiCheckboxEvent) {\n    this.multiCheckboxEventSubj.next(event);\n  }\n\n  private multiCheckboxErrorSubj = new Subject<string>();\n  multiCheckboxErrorObs$ = this.multiCheckboxErrorSubj.asObservable();\n\n  errorEvent(event: string) {\n    this.multiCheckboxErrorSubj.next(event);\n  }\n\n  /**\n   * Checks to see if an AbstractControl is valid or not.\n   * @param control: AbstractControl field that we are checking\n   * @param field: string, name of the field we are checking\n   */\n  checkField(id: string): void {\n    //is the control valid\n    this.errorEvent(id);\n  }\n}\n","import { Component, forwardRef, Input, OnChanges, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormControlStatus,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MultiCheckboxService } from '../multi-checkbox/multi-checkbox.service';\nimport { Subscription } from 'rxjs';\n\nexport interface ICheckBoxComponentConfig {\n  formGroup: FormGroup;\n  label?: string;\n  required?: boolean;\n  size?: keyof typeof DSSizes | DSSizes;\n  mixed?: boolean;\n  inlineLabel?: string;\n  inlineLabelBold?: boolean;\n  id: string; //used for identifying the component everywhere and should NEVER be missing\n  hint?: string;\n  desc?: string;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-checkbox',\n  templateUrl: './checkbox.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CheckboxComponent),\n      multi: true\n    }\n  ]\n})\nexport class CheckboxComponent\n  implements ControlValueAccessor, OnInit, OnChanges\n{\n  formGroupEmpty: FormGroup = new FormGroup({});\n  configSub?: Subscription;\n\n  //TODO: Add output - consider using a formControl as output rather than anything else. Many different approaches are possible\n  @Input() config: ICheckBoxComponentConfig = {\n    id: '',\n    formGroup: this.formGroupEmpty,\n    size: DSSizes.large,\n    label: '',\n    inlineLabel: ''\n  };\n\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() id = '';\n\n  @Input() label?: string = '';\n  @Input() required?: boolean;\n  @Input() size?: keyof typeof DSSizes | DSSizes;\n  @Input() mixed?: boolean;\n  @Input() inlineLabel?: string;\n  @Input() inlineLabelBold?: boolean;\n  @Input() hint?: string;\n  @Input() desc?: string;\n  @Input() errorMessages?: IErrorPairs[];\n\n  isDisabled = false;\n  errorIds: IErrorIDs[] = [];\n  formControl?: AbstractControl;\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorAria = '';\n  errorStubText = '';\n  currentStatus: FormControlStatus = 'VALID';\n  currentTouch: boolean = false;\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService,\n    private multicheckboxService: MultiCheckboxService\n  ) {}\n\n  onTouch = () => {\n    if (this.formGroup?.get(this.config.id)?.touched === false) {\n      this.formGroup?.get(this.config.id)?.markAsTouched();\n    }\n  };\n\n  onChange = (value: string) => {\n    this.config.formGroup.get(this.config.id)?.setValue(value);\n  };\n\n  changeValue(event: any) {\n    this.writeValue(event.srcElement.value);\n    this.onTouch();\n  }\n\n  writeValue(value: string): void {\n    this.onChange(value);\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any): void {\n    this.onTouch = onTouched;\n  }\n\n  /**\n   * This is used automatically by the parent formControl. It is used in the template to set the label to disabled\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled: boolean) {\n    if (isDisabled) {\n      this.formGroup.get(this.config.id)?.disable();\n    } else {\n      this.formGroup.get(this.config.id)?.enable();\n    }\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.configSub = this.multicheckboxService.multiCheckboxEventObs$.subscribe(\n      (response) => {\n        if (response.id === this.config.id) {\n          this.config.formGroup\n            .get(this.config.id)\n            ?.patchValue(response.event, { emitEvent: false });\n        }\n      }\n    );\n\n    this.config.formGroup\n      .get(this.config.id)\n      ?.valueChanges.subscribe((event) => {\n        this.multicheckboxService.checkEvent({\n          id: this.config.id,\n          event: event\n        });\n      });\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    //set config from individual options, if present\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n    if (this.id) this.config.id = this.id;\n    if (this.label) this.config.label = this.label;\n    if (this.required) this.config.required = this.required;\n    if (this.size) this.config.size = this.size;\n    if (this.mixed) this.config.mixed = this.mixed;\n    if (this.inlineLabel) this.config.inlineLabel = this.inlineLabel;\n    if (this.inlineLabelBold)\n      this.config.inlineLabelBold = this.inlineLabelBold;\n    if (this.hint) this.config.hint = this.hint;\n    if (this.desc) this.config.desc = this.desc;\n    if (this.errorMessages) this.config.errorMessages = this.errorMessages;\n\n    if (!this.config?.size) this.config.size = DSSizes.large;\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n\n      this.errorIds.forEach((errorId) => {\n        this.multicheckboxService.errorEvent(this.config.id);\n      });\n    }\n    this.currentStatus =\n      this.config.formGroup.get(this.config.id)?.status || 'DISABLED';\n    this.toggleDisabledState();\n    this.config.formGroup\n      .get(this.config.id)\n      ?.statusChanges.subscribe((change) => {\n        this.getAriaErrorText();\n        //Get the error text when the formControl value changes\n        if (change === 'VALID') {\n          this.multicheckboxService.errorEvent(this.config.id);\n        }\n\n        if (change !== this.currentStatus) {\n          this.currentStatus = change;\n          this.toggleDisabledState();\n        }\n        this.setStatus();\n      });\n\n    console.log(this.labelConfig);\n  }\n\n  setStatus() {\n    this.currentStatus =\n      this.config.formGroup.get(this.config.id)?.status || 'DISABLED';\n    this.currentTouch = this.config.formGroup.controls[this.config.id].touched;\n  }\n\n  ngAfterViewInit() {\n    this.setStatus();\n  }\n\n  toggleDisabledState() {\n    switch (this.currentStatus) {\n      case 'DISABLED':\n        this.setDisabledState(true);\n        break;\n      default:\n        this.setDisabledState(false);\n        break;\n    }\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB.en;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB.fr;\n    }\n  }\n\n  /**\n   * Return error state from FormGroup, must be touched & invalid\n   */\n  get errorState(): boolean {\n    this.setStatus()\n    return (\n      (this.currentTouch &&\n        this.currentStatus === 'INVALID') ??\n      false\n    );\n  }\n\n  clickEvent() {\n    this.standAloneFunctions.wasTouched(this.config.formGroup, this.config.id);\n  }\n\n  ariaAccess(): string {\n    let returnVal = '';\n    if (this.config.label)\n      returnVal += this.translate.instant(this.config.label || '') + ' ';\n    if (this.config.desc)\n      returnVal += this.translate.instant(this.config.desc || '') + ' ';\n    if (this.config.hint)\n      returnVal += this.translate.instant(this.config.hint || '') + ' ';\n    if (this.config.inlineLabel)\n      returnVal += this.translate.instant(this.config.inlineLabel || '') + ' ';\n\n    if (this.config.mixed) {\n      returnVal += 'Mixed checkbox';\n    }\n\n    if (\n      this.config.formGroup.get(this.config.id)?.invalid &&\n      this.config.formGroup.get(this.config.id)?.touched\n    ) {\n      returnVal += this.errorStubText;\n      returnVal += this.errorAria;\n    }\n    return returnVal;\n  }\n}\n","<form\n  class=\"checkbox-container\"\n  [formGroup]=\"config.formGroup\"\n>\n  <div\n    class=\"checkbox-container\"\n    [ngClass]=\"config.size\"\n  >\n    <ircc-cl-lib-label\n      [config]=\"labelConfig\"\n      [attr.size]=\"config.size\"\n      [legend]=\"true\"\n    ></ircc-cl-lib-label>\n    <div\n      class=\"checkbox-layout\"\n      [ngClass]=\"{\n        error: currentStatus === 'INVALID' && currentTouch === true\n      }\"\n    >\n      <div class=\"checkbox\">\n        <input\n          [attr.aria-live]=\"'off'\"\n          id=\"{{ config.id }}\"\n          class=\"check\"\n          (click)=\"clickEvent()\"\n          [ngClass]=\"{\n            mixed: config.mixed,\n            error: currentStatus === 'INVALID' && currentTouch === true\n          }\"\n          [attr.size]=\"config.size\"\n          type=\"checkbox\"\n          [formControlName]=\"config.id\"\n          [attr.aria-invalid]=\"formControl?.invalid\"\n          [attr.aria-label]=\"ariaAccess()\"\n        />\n        <span class=\"checkmark\"></span>\n      </div>\n      <label\n        [attr.aria-live]=\"'off'\"\n        class=\"checkbox-desc-label\"\n        [for]=\"config.id\"\n        [id]=\"config.id + ' checkbox_label'\"\n        [ngClass]=\"{\n          'disabled-label': currentStatus === 'DISABLED',\n          small: config.size === 'small',\n          makeBold: config.inlineLabelBold\n        }\"\n        >{{ config.inlineLabel || '' | translate }}\n      </label>\n    </div>\n    <div aria-live=\"polite\">\n      <div\n        *ngIf=\"errorState\"\n        class=\"check-error\"\n        [ngClass]=\"{ small: config.size === 'small' }\"\n      >\n        <span class=\"sr-only\">{{\n          errorStubText + ': ' + (config.label || '' | translate) + ': '\n        }}</span>\n\n        <ng-container *ngFor=\"let errors of errorIds; let i = index\">\n          <div\n            *ngIf=\"formControl?.errors?.[errors.key]\"\n            class=\"radio-errors\"\n          >\n            <ircc-cl-lib-error\n              [id]=\"errors.id\"\n              [errorLOV]=\"errors.errorLOV\"\n              [size]=\"config.size\"\n            ></ircc-cl-lib-error>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormControlStatus,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport {\n  ERROR_TEXT_STUB,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport interface ISelectConfig {\n  id: string;\n  formGroup: FormGroup;\n  label?: string;\n  options?: ISelectOptionsConfig[];\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  placeholder?: string;\n  size?: keyof typeof DSSizes;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n  disableError?: boolean; //used to disable the error aria-live (mostly for use when nested, as in date picker)\n}\nexport interface ISelectOptionsConfig {\n  text: string;\n  value?: string;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-select',\n  templateUrl: './select.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => SelectComponent) //This allows the error state to be turned off and on again\n    }\n  ]\n})\nexport class SelectComponent implements ControlValueAccessor, OnInit {\n  touched = false;\n  errorIds: IErrorIDs[] = [];\n  activiatedSelect: boolean = false;\n  rotateChevron: boolean = false;\n  currentStatus: FormControlStatus = 'VALID';\n  formGroupEmpty: FormGroup = new FormGroup({});\n\n  @Input() config: ISelectConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string;\n  @Input() desc?: string;\n  @Input() hint?: string;\n  @Input() placeholder?: string;\n  @Input() required?: boolean;\n  @Input() options?: ISelectOptionsConfig[];\n  @Input() errorMessages?: IErrorPairs[];\n  @Input() disableError?: boolean; //used to disable the error aria-live (mostly for use when nested, as in date picker)\n  labelIconConfig?: ILabelIconConfig;\n\n  formControl?: AbstractControl;\n  errorAria = '';\n\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  errorStubText = '';\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  onTouch = () => {\n    if (this.formGroup?.get(this.config.id)?.touched === false) {\n      this.formGroup?.get(this.config.id)?.markAsTouched();\n    }\n  };\n\n  onChange = (value: string) => {\n    this.config.formGroup.get(this.config.id)?.setValue(value);\n  };\n\n  changeValue(event: any){\n    this.writeValue(event.srcElement.value);\n    this.onTouch();\n  }\n\n  writeValue(value: string): void {\n    this.onChange(value);\n  }\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n  registerOnTouched(onTouched: any) {\n    this.onTouch = onTouched;\n  }\n\n  markAsTouched() {\n    if (!this.touched) {\n      this.onTouch();\n      this.touched = true;\n    }\n  }\n\n  valueChange($event: any) {\n    this.activiatedSelect = true;\n  }\n\n  onClicked() {\n    this.rotateChevron = !this.rotateChevron;\n  }\n\n  onBlur() {\n    this.touched = true;\n    this.rotateChevron = false;\n  }\n\n  ngOnInit() {\n    const retControl = this.config.formGroup.get(this.config.id);\n    if (retControl) {\n      this.formControl = retControl;\n    }\n\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n    });\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n    );\n\n    //set config from individual options, if present\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    };\n    if (this.id !== '') this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label) this.config.label = this.label;\n    if (this.desc) this.config.desc = this.desc;\n    if (this.hint) this.config.hint = this.hint;\n    if (this.placeholder) this.config.placeholder = this.placeholder;\n    if (this.required) this.config.required = this.required;\n    if (this.options) this.config.options = this.options;\n    if (this.errorMessages) this.config.errorMessages = this.errorMessages;\n    if (this.disableError) this.config.disableError = this.disableError;\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    this.currentStatus = this.config.formGroup.get(this.config.id)?.status || 'DISABLED';\n    switch (this.currentStatus) {\n      case 'DISABLED':\n        this.setDisabledState(true);\n        break;\n      default:\n        this.setDisabledState(false);\n    }\n\n    this.config.formGroup.get(this.config.id)?.statusChanges.subscribe((change) => {\n      this.getAriaErrorText();\n      if(change !== this.currentStatus) {\n        this.currentStatus = change;\n        switch (this.currentStatus) {\n          case 'DISABLED':\n            this.setDisabledState(true);\n            break;\n          default:\n            this.setDisabledState(false);\n        }\n      }\n    });\n  }\n\n\n  //This is used instead of ngOnChange here because it allows the config to be updated in date-picker.\n  //TODO: Replace this with something less blunt\n  ngDoCheck() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n    );\n  }\n\n  /**\n   * Apply a disabled state\n   */\n   setDisabledState(isDisabled: boolean) {\n    isDisabled\n      ? this.formGroup?.get(this.config.id)?.disable()\n      : this.formGroup?.get(this.config.id)?.enable();\n  }\n\n  /**\n   * Get the aria error text for the label\n   */\n  getAriaErrorText() {\n    if (this.config.errorMessages) {\n      this.formControl?.markAsDirty();\n      this.errorAria = this.standAloneFunctions.getErrorAria(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n  }\n\n  /**\n   * Set a boolean representing the touched state to true and trigger getAriaErrorText()\n   */\n  onTouchedLabel() {\n    this.touched = true;\n    this.getAriaErrorText();\n  }\n\n  setLang(lang: string) {\n    this.getAriaErrorText();\n    if (lang === 'en' || lang === 'en-US') {\n      this.errorStubText = ERROR_TEXT_STUB.en;\n    } else {\n      this.errorStubText = ERROR_TEXT_STUB.fr;\n    }\n  }\n}\n","<div class=\"{{ config.size }} select-wrapper\">\n  <ircc-cl-lib-label\n    [config]=\"labelConfig\"\n    [attr.size]=\"config.size\"\n  ></ircc-cl-lib-label>\n  <form [formGroup]=\"config.formGroup\">\n    <div class=\"ircc-cl-lib-select\">\n      <select\n        (blur)=\"onBlur()\"\n        (click)=\"onClicked()\"\n        class=\"custom-select h6 select-placeholder\"\n        [name]=\"config.id\"\n        [id]=\"config.id\"\n        [formControlName]=\"config.id\"\n        (change)=\"changeValue($event)\"\n        [class.activited-select]=\"activiatedSelect\"\n        [attr.aria-invalid]=\"formControl?.invalid\"\n        [attr.aria-live]=\"'off'\"\n        [attr.aria-label]=\"\n          formControl?.invalid && touched\n            ? (config.label || '' | translate) +\n              ' ' +\n              (config.desc || '' | translate) +\n              ' ' +\n              (config.hint || '' | translate) +\n              ' ' +\n              (errorStubText + ': ' + errorAria)\n            : (config.label || '' | translate) +\n              ' ' +\n              (config.desc || '' | translate) +\n              ' ' +\n              (config.hint || '' | translate)\n        \"\n      >\n        <option\n          [value]=\"''\"\n          disabled\n          selected\n          hidden\n        >\n          {{ config.placeholder || '' | translate }}\n        </option>\n        <option\n          *ngFor=\"let option of config.options\"\n          [value]=\"option.value || option.text\"\n          class=\"select-option\"\n        >\n          {{ option.text | translate }}\n        </option>\n      </select>\n      <div\n        class=\"icon-container\"\n        [class.select-clicked]=\"rotateChevron\"\n      >\n        <i class=\"fa-thin fa-chevron-down custom-chevron\"></i>\n      </div>\n    </div>\n\n    <div\n      aria-live=\"polite\"\n      *ngIf=\"!config.disableError\"\n    >\n      <div\n        *ngIf=\"\n          config.formGroup.get(config.id)?.touched &&\n          currentStatus === 'INVALID'\n        \"\n      >\n        <span class=\"sr-only\">{{\n          errorStubText + ': ' + (config.label || '' | translate) + ': '\n        }}</span>\n        <ng-container *ngFor=\"let errors of errorIds; let i = index\">\n          <div\n            *ngIf=\"formControl?.errors?.[errors.key]\"\n            class=\"radio-errors\"\n          >\n            <ircc-cl-lib-error\n              [size]=\"config.size\"\n              [id]=\"errors.id\"\n              [errorLOV]=\"errors.errorLOV\"\n            ></ircc-cl-lib-error>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ISelectConfig } from '../select/select.component';\nimport {\n  ERROR_TEXT_STUB,\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\n\nexport const DATE_PICKER_MONTHS_EN = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\n\nexport const DATE_PICKER_MONTHS_FR = [\n  'janvier',\n  'février',\n  'mars',\n  'avril',\n  'mai',\n  'juin',\n  'juillet',\n  'août',\n  'septembre',\n  'octobre',\n  'novembre',\n  'décembre'\n];\n\nexport const DATE_PICKER_DAY_CONTROL_ID_EXTENSION = '_dayControl';\nexport const DATE_PICKER_MONTH_CONTROL_ID_EXTENSION = '_monthControl';\nexport const DATE_PICKER_YEAR_CONTROL_ID_EXTENSION = '_yearControl';\n\nexport const DATE_PICKER_LABELS_EN = ['Day', 'Month', 'Year'];\nexport const DATE_PICKER_LABELS_FR = ['Jour', 'Mois', 'Année'];\n\nexport const DATE_PICKER_PLACEHOLDER_YEAR_EN = 'YYYY';\nexport const DATE_PICKER_PLACEHOLDER_YEAR_FR = 'AAAA';\n\nexport const DATE_PICKER_PLACEHOLDER_MONTH_EN = 'Month';\nexport const DATE_PICKER_PLACEHOLDER_MONTH_FR = 'Mois';\n\nexport const DATE_PICKER_PLACEHOLDER_DAY_EN = 'DD';\nexport const DATE_PICKER_PLACEHOLDER_DAY_FR = 'JJ';\n\nexport const DATE_PICKER_UNKOWN_EN = 'Unknown';\nexport const DATE_PICKER_UNKOWN_FR = 'Inconnu';\n\nexport interface IDatePickerConfig {\n  id: string;\n  formGroup: FormGroup;\n  size?: keyof typeof DSSizes;\n  label?: string;\n  required?: boolean;\n  hint?: string;\n  desc?: string;\n  errorMessages?: IErrorPairs[];\n  labelIconConfig?: ILabelIconConfig;\n  maxYear?: number;\n  minYear?: number;\n  unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n  yearSelectShow?: boolean;\n  monthSelectShow?: boolean;\n  daySelectShow?: boolean;\n}\n\nexport interface IDatePickerUnknownDateToggleConfig {\n  dayUnknown?: boolean;\n  monthUnknown?: boolean;\n  yearUnknown?: boolean;\n}\n\nexport interface IDatePickerDropDownConfigs {\n  day: ISelectConfig;\n  month: ISelectConfig;\n  year: ISelectConfig;\n}\n\n@Component({\n  selector: 'ircc-cl-lib-date-picker',\n  templateUrl: './date-picker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatePickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatePickerComponent implements OnInit {\n\n  formGroupEmpty: FormGroup = new FormGroup({});\n\n  @Input() config: IDatePickerConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() id?: string;\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string;\n  @Input() required?: boolean;\n  @Input() hint?: string;\n  @Input() desc?: string;\n  @Input() errorMessages?: IErrorPairs[];\n  @Input() maxYear?: number;\n  @Input() minYear?: number;\n  @Input() unknownDateToggle?: IDatePickerUnknownDateToggleConfig;\n  @Input() yearSelectShow?: boolean= true\n  @Input() monthSelectShow?: boolean = true;\n  @Input() daySelectShow?: boolean= true;\n\n  errorIds: IErrorIDs[] = [];\n  days: number[] = [];\n  months: string[] = [];\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  touched = false;\n  errorStubText = '';\n\n  dropDownConfigs: IDatePickerDropDownConfigs = {\n    day: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    month: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    },\n    year: {\n      id: '',\n      formGroup: this.config.formGroup,\n      label: '',\n      options: [],\n      size: 'large',\n      disableError: true\n    }\n  };\n\n  yearSelect: any = '';\n  monthSelect: any = '';\n  daySelect: any = '';\n\n  //Get the current year for use in the year dropdown\n  private currentYear = new Date().getFullYear();\n\n  constructor(\n    private translate: TranslateService,\n    public standAloneFunctions: StandAloneFunctions\n  ) {}\n\n  ngOnInit() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n    );\n\n    //set config from individual options, if present\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    };\n    if (this.id) this.config.id = this.id;\n    if (this.size) this.config.size = this.size;\n    if (this.label) this.config.label = this.label;\n    if (this.required) this.config.required = this.required;\n    if (this.hint) this.config.hint = this.hint;\n    if (this.desc) this.config.desc = this.desc;\n    if (this.errorMessages) this.config.errorMessages = this.errorMessages;\n    if (this.maxYear) this.config.maxYear = this.maxYear;\n    if (this.minYear) this.config.minYear = this.minYear;\n    if (this.unknownDateToggle)\n      this.config.unknownDateToggle = this.unknownDateToggle;\n    if (this.yearSelectShow) this.config.yearSelectShow = this.yearSelectShow;\n    if (this.monthSelectShow) this.config.monthSelectShow = this.monthSelectShow;\n    if (this.daySelectShow) this.config.daySelectShow = this.daySelectShow;\n    //Set the ids for the dropdowns\n    this.dropDownConfigs.day.id =\n      this.config.id + DATE_PICKER_DAY_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.month.id =\n      this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION;\n    this.dropDownConfigs.year.id =\n      this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION;\n\n    this.dropDownConfigs.day.formGroup = this.config.formGroup;\n    this.dropDownConfigs.month.formGroup = this.config.formGroup;\n    this.dropDownConfigs.year.formGroup = this.config.formGroup;\n\n    this.dropDownConfigs.day.size = this.config.size;\n    this.dropDownConfigs.month.size = this.config.size;\n    this.dropDownConfigs.year.size = this.config.size;\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION,\n        this.config.errorMessages\n      );\n    }\n\n    // Populate the months and years arrays\n    this.setMonthsLanguage();\n    this.setLabelLanguage();\n    this.translate.onLangChange.subscribe(() => {\n      this.setMonthsLanguage();\n      this.setYearDayLanguage();\n      this.setLabelLanguage();\n      this.getAriaOverride();\n    });\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (this.config.minYear || this.config.maxYear) {\n      if (this.config.minYear && this.config.maxYear) {\n        for (let i = this.config.minYear; i <= this.config.maxYear; i++) {\n          this.dropDownConfigs.year.options?.push({ text: i.toString() });\n        }\n      } else if (this.config.minYear && !this.config.maxYear) {\n        for (let i = this.config.minYear; i <= this.currentYear; i++) {\n          this.dropDownConfigs.year.options?.push({ text: i.toString() });\n        }\n      } else if (this.config.maxYear && !this.config.minYear) {\n        for (let i = 1900; i <= this.config.maxYear; i++) {\n          this.dropDownConfigs.year.options?.push({ text: i.toString() });\n        }\n      }\n    } else {\n      for (let i = 1900; i <= this.currentYear; i++) {\n        this.dropDownConfigs.year.options?.push({ text: i.toString() });\n      }\n    }\n\n    // Populate the days array based on the selected month and year\n    this.config.formGroup\n      .get(this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION)\n      ?.valueChanges.subscribe((month) => {\n        //add if statement here - the value of year can be empty, since it may not have been selected yet.\n        const numDays = this.updateDaysArray(\n          month,\n          this.config.formGroup.get(this.config.id + '_yearControl')?.value\n        );\n      });\n    this.config.formGroup\n      .get(this.config.id + DATE_PICKER_YEAR_CONTROL_ID_EXTENSION)\n      ?.valueChanges.subscribe((year) => {\n        const numDays = this.updateDaysArray(\n          this.config.formGroup.get(\n            this.config.id + DATE_PICKER_MONTH_CONTROL_ID_EXTENSION\n          )?.value,\n          year\n        );\n      });\n\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n\n    if (\n      (this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 1) ||\n      (!this.config.unknownDateToggle?.dayUnknown &&\n        this.dropDownConfigs.day.options?.length === 0)\n    ) {\n      for (let i = 1; i <= 31; i++) {\n        this.dropDownConfigs.day.options?.push({ text: i.toString() });\n      }\n    }\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      [],\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig,\n      );\n      this.dropDownConfigs.day.size = this.config.size;\n      this.dropDownConfigs.month.size = this.config.size;\n      this.dropDownConfigs.year.size = this.config.size;\n  }\n\n  ngAfterViewInit() {\n    this.yearSelect = document.getElementById(this.dropDownConfigs.year.id);\n    this.monthSelect = document.getElementById(this.dropDownConfigs.month.id);\n    this.daySelect = document.getElementById(this.dropDownConfigs.day.id);\n    this.getAriaOverride();\n  }\n\n  /**\n   * Set the language for dropdown options\n   * TODO: Set value of each month to be the lov and not the text\n   */\n  setMonthsLanguage() {\n    this.dropDownConfigs.month.options = [];\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.months = DATE_PICKER_MONTHS_EN;\n      if (this.config.unknownDateToggle?.monthUnknown)\n        this.dropDownConfigs.month.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      this.months = DATE_PICKER_MONTHS_FR;\n      if (this.config.unknownDateToggle?.monthUnknown)\n        this.dropDownConfigs.month.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n    this.months.forEach((month: string, index: number) => {\n      this.dropDownConfigs.month.options?.push({\n        text: month,\n        value: (index + 1).toString().padStart(2, '0')\n      });\n    });\n  }\n\n  /**\n   * Used to set the language of year/day 'unknown' field when langauge changes\n   */\n  setYearDayLanguage() {\n    this.dropDownConfigs.day.options?.shift();\n    this.dropDownConfigs.year.options?.shift();\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.months = DATE_PICKER_MONTHS_EN;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      this.months = DATE_PICKER_MONTHS_FR;\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n      if (this.config.unknownDateToggle?.yearUnknown)\n        this.dropDownConfigs.year.options?.unshift({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n  }\n\n  /**\n   * Set the language for the labels of each dropdown\n   */\n  setLabelLanguage() {\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_EN[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_EN[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_EN[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_EN;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_EN;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_EN;\n\n      this.errorStubText = ERROR_TEXT_STUB.en;\n    } else {\n      this.dropDownConfigs.day.label = DATE_PICKER_LABELS_FR[0];\n      this.dropDownConfigs.month.label = DATE_PICKER_LABELS_FR[1];\n      this.dropDownConfigs.year.label = DATE_PICKER_LABELS_FR[2];\n\n      this.dropDownConfigs.day.placeholder = DATE_PICKER_PLACEHOLDER_DAY_FR;\n      this.dropDownConfigs.month.placeholder = DATE_PICKER_PLACEHOLDER_MONTH_FR;\n      this.dropDownConfigs.year.placeholder = DATE_PICKER_PLACEHOLDER_YEAR_FR;\n\n      this.errorStubText = ERROR_TEXT_STUB.fr;\n    }\n  }\n\n  /**\n   * update the days array with the correct number of days based on the year and the month\n   * @param month string of the month (TODO: Change this to be an LOV)\n   * @param year year selected\n   */\n  private updateDaysArray(month: string, year: number): void {\n    this.days = [];\n    this.dropDownConfigs.day.options = [];\n    const numDays = this.getNumDaysInMonth(month, year);\n    for (let i = 1; i <= numDays; i++) {\n      this.days.push(i);\n    }\n    this.config.formGroup\n      .get(this.config.id + DATE_PICKER_DAY_CONTROL_ID_EXTENSION)\n      ?.setValue('');\n    if (\n      this.translate.currentLang === 'en' ||\n      this.translate.currentLang === 'en-US'\n    ) {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_EN,\n          value: '**'\n        });\n    } else {\n      if (this.config.unknownDateToggle?.dayUnknown)\n        this.dropDownConfigs.day.options?.push({\n          text: DATE_PICKER_UNKOWN_FR,\n          value: '**'\n        });\n    }\n    this.days.forEach((day) => {\n      this.dropDownConfigs.day.options?.push({ text: day.toString() });\n    });\n  }\n\n  /**\n   * Get the number of days in the month based on the month and year\n   * @param month string of the month selected\n   * @param year number selected\n   * @returns number representing the number of days in the month\n   */\n  private getNumDaysInMonth(month: string, year: number): number {\n    const monthNum: number = +month;\n    if (monthNum === 2) {\n      if (String(year) === '**') {\n        //if year is unknown and month is feb return 29\n        return 29;\n      }\n      return this.isLeapYear(year) ? 29 : 28;\n    } else if ([4, 6, 9, 11].includes(monthNum)) {\n      return 30;\n    } else {\n      return 31;\n    }\n  }\n\n  /**\n   * Check if the year is a leap year\n   * @param year number representing the year\n   * @returns true if a leap year, false otherwise\n   */\n  private isLeapYear(year: number): boolean {\n    if (year % 4 === 0) {\n      if (year % 100 === 0) {\n        return year % 400 === 0;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  getDatePickerTouchedOrInvalid(): boolean {\n    let datePickerState: boolean | undefined = false;\n\n    datePickerState =\n      (this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid) ||\n      (this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid);\n\n    this.touched = datePickerState || false;\n    this.getAriaOverride(datePickerState);\n    return datePickerState ?? false;\n    //  return this.config.formGroup?.touched && this.config.formGroup?.invalid;\n  }\n\n  /**\n   * Override the aria labels for each of the select fields in the date picker\n   * @param hasError is the field in error?\n   */\n  getAriaOverride(hasError?: boolean) {\n    if (this.yearSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.year.id)?.invalid\n      ) {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.year.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.yearSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.year.label\n        );\n      }\n    }\n    if (this.monthSelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.month.id)?.invalid\n      ) {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.month.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.monthSelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.month.label\n        );\n      }\n    }\n    if (this.daySelect !== '') {\n      if (\n        hasError &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.touched &&\n        this.config.formGroup.get(this.dropDownConfigs.day.id)?.invalid\n      ) {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() +\n            this.dropDownConfigs.day.label +\n            ' ' +\n            this.getErrorAria()\n        );\n      } else {\n        this.daySelect?.setAttribute(\n          'aria-label',\n          this.getLabelCore() + this.dropDownConfigs.day.label\n        );\n      }\n    }\n  }\n\n  /**\n   * Generates a core string of the label (date picker label, description, and hint) for aria text\n   * @returns label core text translated string\n   */\n  getLabelCore() {\n    let labelCore = '';\n    if (this.config.label)\n      labelCore += this.translate.instant(this.config.label) + ' ';\n    if (this.config.desc)\n      labelCore += this.translate.instant(this.config.desc) + ' ';\n    if (this.config.hint)\n      labelCore += this.translate.instant(this.config.hint) + ' ';\n    return labelCore;\n  }\n\n  /**\n   * Generates the translated error string for aria text\n   * @returns errors text translated string\n   */\n  getErrorAria() {\n    let errors = '';\n    this.errorIds.forEach((error) => {\n      errors += this.translate.instant(error.errorLOV) + ' ';\n    });\n    return errors;\n  }\n\n  onTouch = () => {\n    if (this.formGroup?.get(this.config.id)?.touched === false) {\n      this.formGroup?.get(this.config.id)?.markAsTouched();\n    }\n  };\n  \n  onChange = (value: string) => {\n    this.config.formGroup.get(this.config.id)?.setValue(value);\n  };\n\n  changeValue(event: any){\n    this.writeValue(event.srcElement.value);\n    this.onTouch();\n  }\n\n  writeValue(value: string): void {\n    this.onChange(value);\n  }\n  \n  registerOnChange(fn: any): void {\n    this.config.formGroup.valueChanges.subscribe(fn);\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  /**\n   * Apply a disabled state\n   */\n   setDisabledState(isDisabled: boolean) {\n    if(isDisabled) {\n      this.formGroup?.get(this.config.id)?.disable();\n    } else {\n      this.formGroup?.get(this.config.id)?.enable();\n    }\n  }\n}\n","<div class=\"{{ config.size }}\">\n  <ircc-cl-lib-label\n    [config]=\"labelConfig\"\n    [attr.size]=\"config.size\"\n  ></ircc-cl-lib-label>\n  <fieldset class=\"all-select-container\">\n    <ircc-cl-lib-select\n      class=\"select-year\"\n      [attr.aria-live]=\"'off'\"\n      [config]=\"dropDownConfigs.year\"\n      *ngIf=\"config.yearSelectShow\"\n      (change)=\"changeValue($event)\"\n    ></ircc-cl-lib-select>\n    <ircc-cl-lib-select\n      class=\"select-month\"\n      [config]=\"dropDownConfigs.month\"\n      *ngIf=\"config.monthSelectShow\"\n      (change)=\"changeValue($event)\"\n    ></ircc-cl-lib-select>\n    <ircc-cl-lib-select\n      class=\"select-day\"\n      [config]=\"dropDownConfigs.day\"\n      *ngIf=\"config.daySelectShow\"\n      (change)=\"changeValue($event)\"\n    ></ircc-cl-lib-select>\n  </fieldset>\n  <div aria-live=\"polite\">\n    <ng-container *ngIf=\"getDatePickerTouchedOrInvalid()\">\n      <span class=\"sr-only\">{{\n        errorStubText + ': ' + (config.label || '' | translate) + ': '\n      }}</span>\n      <!-- TODO: Do something clever here to add which of the dropdowns are in error and put them in the above p tag -->\n      <ng-container *ngFor=\"let errors of errorIds; let i = index\">\n        <div\n          *ngIf=\"config.formGroup.get(dropDownConfigs.year.id)?.errors?.[errors.key] || config.formGroup.get(dropDownConfigs.month.id)?.errors?.[errors.key] || config.formGroup.get(dropDownConfigs.day.id)?.errors?.[errors.key]\"\n          class=\"radio-errors\"\n        >\n          <ircc-cl-lib-error\n            [id]=\"errors.id\"\n            [errorLOV]=\"errors.errorLOV\"\n            [size]=\"config.size\"\n          ></ircc-cl-lib-error>\n        </div>\n      </ng-container>\n    </ng-container>\n  </div>\n</div>\n","import { Component, ElementRef, forwardRef, HostListener, Input, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormControlStatus,\n  FormGroup,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\nimport {\n  ILabelConfig,\n  ILabelIconConfig\n} from '../../shared/label/label.component';\nimport { IErrorIconConfig } from '../error/error.component';\nimport { TranslateService } from '@ngx-translate/core';\n\nexport const MAX_CHAR_LIMIT_EN = 'Maximum character limit reached.';\nexport const MAX_CHAR_LIMIT_FR = 'Limite maximale de caractères atteinte.';\n\nexport const WARNING_CHAR_LIMIT_EN =\n  'Maximum character limit reached in 15 characters.';\nexport const WARNING_CHAR_LIMIT_FR =\n  'Limite maximale de caractères atteinte en 15 caractères.';\n\nexport interface ITextareaComponentConfig {\n  formGroup: FormGroup;\n  id: string;\n  label?: string;\n  desc?: string;\n  hint?: string;\n  required?: boolean; // This field only adds styling to the label and DOES NOT add any validation to the input field.\n  placeholder?: string;\n  charLimit?: string;\n  resizable?: keyof typeof ResizableTypes;\n  size?: keyof typeof DSSizes;\n  errorMessages?: IErrorPairs[];\n  errorIcon?: IErrorIconConfig;\n  labelIconConfig?: ILabelIconConfig;\n}\n\nexport enum ResizableTypes {\n  vertical = 'vertical',\n  horizontal = 'password',\n  both = 'both',\n  none = 'none'\n}\n@Component({\n  selector: 'ircc-cl-lib-textarea',\n  templateUrl: './textarea.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TextareaComponent),\n      multi: true\n    }\n  ]\n})\nexport class TextareaComponent implements ControlValueAccessor, OnInit {\n  formGroupEmpty: FormGroup = new FormGroup({});\n  //DON'T include default values of '' unless it REALLY makes sense to do so. Instead, make them optional\n  @Input() config: ITextareaComponentConfig = {\n    id: '',\n    formGroup: new FormGroup({})\n  };\n\n  @Input() id = '';\n  @Input() formGroup = this.formGroupEmpty;\n  @Input() size?: keyof typeof DSSizes;\n  @Input() label?: string;\n  @Input() desc?: string;\n  @Input() hint?: string;\n  @Input() placeholder?: string;\n  @Input() required?: boolean; // This field only adds styling to the label and DOES NOT add any validation to the input field.\n  @Input() charLimit = '';\n  @Input() resizable?: keyof typeof ResizableTypes;\n  @Input() errorMessages?: IErrorPairs[];\n  @Input() errorIcon?: IErrorIconConfig;\n\n  disabled = false;\n  focusState = false;\n  errorIds: IErrorIDs[] = [];\n  charLimitStatus = '';\n  currentCharacterStatusAria = '';\n  currentStatus: FormControlStatus = 'VALID';\n  announceCharStatusChangeAria: boolean = false;\n  charLength: number = -1;\n  labelConfig: ILabelConfig = {\n    formGroup: this.config.formGroup,\n    parentID: ''\n  };\n  isEventActive = false;\n  announceMaxCharaterLimitReached = ''\n\n  constructor(\n    public standAloneFunctions: StandAloneFunctions,\n    private translate: TranslateService\n  ) {}\n\n  //Removed '!' and added null case in onChange\n  onTouch = () => {\n    if (this.config.formGroup?.get(this.config.id)?.touched === false) {\n      this.config.formGroup?.get(this.config.id)?.markAsTouched();\n    }\n  };\n  onChange = (value: string) => {\n    this.config.formGroup.get(this.config.id)?.setValue(value);\n  };\n\n  ngOnInit(): void {\n    //set config from individual options, if present\n    if (this.id !== '') this.config.id = this.id;\n    if (this.formGroup !== this.formGroupEmpty)\n      this.config.formGroup = this.formGroup;\n    if (this.charLimit !== '') this.config.charLimit = this.charLimit;\n    if (this.size) this.config.size = this.size;\n    if (this.label) this.config.label = this.label;\n    if (this.desc) this.config.desc = this.desc;\n    if (this.hint) this.config.hint = this.hint;\n    if (this.placeholder) this.config.placeholder = this.placeholder;\n    if (this.required) this.config.required = this.required;\n    if (this.resizable) this.config.resizable = this.resizable;\n    if (this.errorMessages) this.config.errorMessages = this.errorMessages;\n    if (this.errorIcon) this.config.errorIcon = this.errorIcon;\n\n    if (this.config.charLimit != '' && this.config.charLimit) {\n      this.charLength = 0;\n    }\n\n    if (this.config.errorMessages) {\n      this.errorIds = this.standAloneFunctions.getErrorIds(\n        this.config.formGroup,\n        this.config.id,\n        this.config.errorMessages\n      );\n    }\n\n    if (this.config.formGroup.controls[this.config.id].value) {\n      this.charLength =\n        this.config.formGroup.controls[this.config.id].value.length;\n      this.characterCountStatus(\n        this.config.formGroup.controls[this.config.id].value.length\n      );\n    }\n\n    this.config.formGroup.valueChanges.subscribe((change) => {\n      this.characterCountStatus(change[this.config.id]?.length);\n    });\n\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n\n    this.currentStatus =\n      this.config.formGroup.get(this.config.id)?.status || 'DISABLED';\n    this.toggleDisabledState();\n    this.config.formGroup\n      .get(this.config.id)\n      ?.statusChanges.subscribe((change) => {\n        if (change !== this.currentStatus) {\n          this.currentStatus = change;\n          this.toggleDisabledState();\n        }\n      });\n\n    this.translate.currentLang === 'en' || this.translate.currentLang === 'en-US'\n      ? (this.announceMaxCharaterLimitReached = MAX_CHAR_LIMIT_EN)\n      : (this.announceMaxCharaterLimitReached = MAX_CHAR_LIMIT_FR);\n  }\n\n  toggleDisabledState() {\n    switch (this.currentStatus) {\n      case 'DISABLED':\n        this.setDisabledState(true);\n        break;\n      default:\n        this.setDisabledState(false);\n        break;\n    }\n  }\n\n  ngOnChanges() {\n    this.labelConfig = this.standAloneFunctions.makeLabelConfig(\n      this.config.formGroup,\n      this.config.id,\n      this.config.errorMessages,\n      this.config.label,\n      this.config.desc,\n      this.config.hint,\n      this.config.required,\n      this.config.labelIconConfig\n    );\n  }\n\n  public focusInput(focusValue: boolean): void {\n    this.focusState = !focusValue;\n  }\n\n  characterCountStatus(currCharCount: any) {\n    let currLang = this.translate.currentLang;\n    if (this.config?.charLimit) {\n      if (this.config?.charLimit == currCharCount) {\n        this.charLimitStatus = 'maxLimit';\n        currLang === 'en' || currLang === 'en-US'\n          ? (this.currentCharacterStatusAria = MAX_CHAR_LIMIT_EN)\n          : (this.currentCharacterStatusAria = MAX_CHAR_LIMIT_FR);\n        this.announceCharStatusChangeAria = true;\n        this.isEventActive = true;\n      } else if (Number(this.config?.charLimit) - currCharCount == 15) {\n        this.charLimitStatus = 'warningLimit';\n        currLang === 'en' || currLang === 'en-US'\n          ? (this.currentCharacterStatusAria = WARNING_CHAR_LIMIT_EN)\n          : (this.currentCharacterStatusAria = WARNING_CHAR_LIMIT_FR);\n        this.announceCharStatusChangeAria = true;\n        this.isEventActive = false;\n      } else if (Number(this.config?.charLimit) - currCharCount < 15) {\n        this.charLimitStatus = 'warningLimit';\n        this.currentCharacterStatusAria = '';\n        this.isEventActive = false;\n      } else {\n        this.charLimitStatus = '';\n        this.currentCharacterStatusAria = '';\n        this.isEventActive = false;\n      }\n    }\n  }\n\n  onBlur() {\n    this.announceCharStatusChangeAria = false;\n    if (this.config.formGroup.controls[this.config.id].value) {\n      this.charLength =\n        this.config.formGroup.controls[this.config.id].value.length;\n    } else {\n      this.charLength = 0;\n    }\n  }\n\n  //Keep announcing max char limit reached for each keypress made after max limit has reached\n  @HostListener('window:keypress', ['$event'])\n  onKeyPress(event: KeyboardEvent) {\n    if (this.isEventActive) {\n      if(this.announceMaxCharaterLimitReached === MAX_CHAR_LIMIT_EN || this.announceMaxCharaterLimitReached === MAX_CHAR_LIMIT_FR) {\n        this.announceMaxCharaterLimitReached+='&nbsp;'\n      }\n      else {\n        this.translate.currentLang === 'en' || this.translate.currentLang === 'en-US'\n          ? (this.announceMaxCharaterLimitReached = MAX_CHAR_LIMIT_EN)\n          : (this.announceMaxCharaterLimitReached = MAX_CHAR_LIMIT_FR);\n      }\n    }\n    if (this.charLimitStatus !== 'maxLimit') {\n      this.isEventActive = false;\n    }\n  }\n\n  formatCharacterUsedString(currentLength: number): string {\n    var formatedString = '';\n    var currentLengthString = currentLength.toString();\n    if (\n      currentLengthString === '-1' ||\n      this.config.charLimit === '' ||\n      !this.config.charLimit\n    ) {\n      return formatedString;\n    }\n    formatedString = currentLengthString + '/' + this.config.charLimit;\n    return formatedString;\n  }\n\n  public clearvalue() {}\n\n  changeValue(event: any) {\n    this.writeValue(event.target.value);\n    this.onTouch();\n  }\n  writeValue(value: string): void {\n    this.onChange(value);\n  }\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n  setDisabledState(isDisabled: boolean) {\n    isDisabled\n      ? this.formGroup.get(this.config.id)?.disable()\n      : this.formGroup.get(this.config.id)?.enable();\n  }\n}\n","<div>\n  <form [formGroup]=\"config.formGroup\">\n    <div\n      class=\"textarea-container\"\n      ngClass=\"{{ config.size }} resize-{{ config.resizable }}\"\n    >\n      <div>\n        <ircc-cl-lib-label\n          [config]=\"labelConfig\"\n          [attr.size]=\"config.size\"\n        ></ircc-cl-lib-label>\n        <div\n          class=\"content-area\"\n          [ngClass]=\"focusState === true ? 'focus' : ''\"\n        >\n          <textarea\n            class=\"textarea-field\"\n            maxlength=\"{{ config.charLimit }}\"\n            placeholder=\"{{\n              announceCharStatusChangeAria\n                ? ''\n                : (config.placeholder || '' | translate)\n            }}\"\n            [id]=\"config.id\"\n            tabindex=\"0\"\n            (blur)=\"onBlur()\"\n            (change)=\"changeValue($event)\"\n            [formControlName]=\"config.id\"\n            [attr.aria-label]=\"\n              announceCharStatusChangeAria\n                ? currentCharacterStatusAria\n                : (config.label || '' | translate) +\n                  ' ' +\n                  (config.desc || '' | translate) +\n                  ' ' +\n                  (config.hint || '' | translate) +\n                  ' ' +\n                  (config.placeholder || '' | translate) +\n                  ' ' +\n                  formatCharacterUsedString(charLength)\n            \"\n            #textareaInput\n          >\n          </textarea>\n          <p\n            *ngIf=\"config.charLimit\"\n            class=\"character-count\"\n            [ngClass]=\"charLimitStatus\"\n          >\n            {{ textareaInput.value.length }}/{{ config.charLimit }}\n          </p>\n          <span\n            class=\"sr-only\"\n            aria-live=\"polite\"\n            [innerHTML]=\"announceMaxCharaterLimitReached\"\n          >\n          </span>\n        </div>\n      </div>\n\n      <div\n        *ngIf=\"\n          config.formGroup.get(config.id)?.touched &&\n          config.formGroup.get(config.id)?.invalid\n        \"\n        class=\"check-error\"\n      >\n        <ng-container *ngFor=\"let errors of errorIds; let i = index\">\n          <div\n            *ngIf=\"config.formGroup.get(config.id)?.errors?.[errors.key]\"\n            class=\"radio-errors\"\n          >\n            <ircc-cl-lib-error\n              [size]=\"config.size\"\n              [id]=\"errors.id\"\n              [errorLOV]=\"errors.errorLOV\"\n            ></ircc-cl-lib-error>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, DoCheck, Input, OnInit } from '@angular/core';\nimport { FormControlStatus, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport {\n  DSSizes,\n  ICheckBoxComponentConfig,\n  ILabelConfig,\n  MultiCheckboxService\n} from '../../../public-api';\n\nimport {\n  IErrorIDs,\n  StandAloneFunctions\n} from '../../../shared/functions/stand-alone.functions';\n\nexport interface IErrorPairsMultiCheckBox {\n  id?: string;\n  key: string;\n  errorLOV: string;\n}\n\nexport interface IMultiCheckboxConfig {\n  id: string;\n  label: ILabelConfig;\n  parent?: ICheckBoxComponentConfig;\n  children?: ICheckBoxComponentConfig[];\n  errorMessages: IErrorPairsMultiCheckBox[];\n}\n\n@Component({\n  selector: 'ircc-cl-lib-multi-checkbox',\n  templateUrl: './multi-checkbox.component.html',\n  styleUrls: ['./multi-checkbox.component.css']\n})\nexport class MultiCheckboxComponent implements OnInit {\n  form: FormGroup = new FormGroup({});\n  configSub?: Subscription;\n  errorSub?: Subscription;\n  errorIds: IErrorIDs[] = [];\n\n  @Input() config: IMultiCheckboxConfig = {\n    id: '',\n    label: {\n      parentID: '',\n      formGroup: this.form\n    },\n    errorMessages: []\n  };\n\n  @Input() id = '';\n  @Input() parent? : ICheckBoxComponentConfig;\n  @Input() children? : ICheckBoxComponentConfig[];\n  @Input() errorMessages?: IErrorPairsMultiCheckBox[];\n\n  /**\n   * Accumulates all the errors on parents and children checkboxes\n   * @type IErrorPairsMultiCheckBox[]\n   */\n  errorMessagesAccumulator: IErrorPairsMultiCheckBox[] = [];\n\n  /**\n   * Accumulates unique error types and used in the frontend to display\n   * @type IErrorPairsMultiCheckBox[]\n   */\n  errorMessagesAccumulatorUniqueType: IErrorPairsMultiCheckBox[] = [];\n  disabledStatus: boolean = false;\n  groupCheckbox: boolean = true;\n\n  // returns size depending on if its group or multicheckbox\n\n  get size() : keyof typeof DSSizes {\n    if(this.groupCheckbox && this.config.children) {\n      return this.config?.children[0]?.size || 'large'\n\n    }\n    return this.config.parent?.size || 'large';\n  }\n\n  constructor(\n    private multiCheckboxService: MultiCheckboxService,\n    public standAloneFunctions: StandAloneFunctions\n  ) {\n    if (this.id !== '') this.config.id = this.id;\n    if (this.parent) this.config.parent = this.parent;\n    if (this.children) this.config.children = this.children;\n    if (this.errorMessages) this.config.errorMessages = this.errorMessages;\n  }\n\n  ngOnInit() {\n    //errorChecking\n\n    this.checkErrorsSubscription();\n\n    this.errorSub = this.multiCheckboxService.multiCheckboxErrorObs$.subscribe(\n      (response) => {\n        if (this.config.children) {\n          let children = this.config.children?.findIndex((child) => {\n            return child.id === response;\n          });\n\n          if (children > -1) {\n            this.checkError(\n              this.config?.children[children]?.formGroup?.get(response)?.status,\n              this.config?.children[children]?.formGroup || new FormGroup({}),\n              response\n            );\n          }\n        }\n        if (this.config?.parent?.id === response) {\n          this.checkError(\n            this.config?.parent?.formGroup?.get(response)?.status,\n            this.config?.parent?.formGroup || new FormGroup({}),\n            response\n          );\n        }\n      }\n    );\n\n\n    if (this.config.parent !== undefined) {\n      this.groupCheckbox = false\n      this.configSub =\n        this.multiCheckboxService.multiCheckboxEventObs$.subscribe(\n          (response) => {\n            if (this.config.children) {\n              if (response.id === this.config.parent?.id) {\n                this.config.children?.forEach((res) => {\n                  this.multiCheckboxService.checkEvent({\n                    id: res.id,\n                    event: response.event\n                  });\n                });\n                this.config.parent.mixed = false;\n\n                this.checkError(\n                  this.config?.parent?.formGroup?.get(this.config.parent?.id)\n                    ?.status,\n                  this.config?.parent?.formGroup || new FormGroup({}),\n                  this.config.parent?.id\n                );\n\n                this.config.children?.forEach((res) => {\n                  this.checkError(\n                    this.config?.parent?.formGroup?.get(res.id)?.status,\n                    this.config?.parent?.formGroup || new FormGroup({}),\n                    res.id\n                  );\n                });\n              } else if (\n                this.config.children?.findIndex((child) => {\n                  return child.id === response.id;\n                }) > -1\n              ) {\n                let positive = 0;\n                let negative = 0;\n\n                this.config.children?.forEach((res) => {\n                  res.formGroup.get(res.id)?.value === true\n                    ? positive++\n                    : negative++;\n                });\n\n                if (positive > 0 && negative > 0) {\n                  this.config.parent?.formGroup\n                    .get(this.config.parent?.id)\n                    ?.patchValue(true, { emitEvent: false });\n                  this.config!.parent!.mixed = true;\n                } else if (positive > 0 && negative == 0) {\n                  this.config.parent?.formGroup\n                    .get(this.config.parent?.id)\n                    ?.patchValue(true, { emitEvent: false });\n\n                  this.config!.parent!.mixed = false;\n                } else if (positive == 0 && negative > 0) {\n                  this.config.parent?.formGroup\n                    .get(this.config.parent?.id)\n                    ?.patchValue(false, { emitEvent: false });\n                  this.config!.parent!.mixed = false;\n                }\n                this.checkError(\n                  this.config?.parent?.formGroup?.get(this.config.parent?.id)\n                    ?.status,\n                  this.config.parent?.formGroup || new FormGroup({}),\n                  this.config.parent?.id || ''\n                );\n\n                this.config.children?.forEach((res) => {\n                  this.checkError(\n                    this.config?.parent?.formGroup?.get(res.id)?.status,\n                    this.config?.parent?.formGroup || new FormGroup({}),\n                    res.id\n                  );\n                });\n              }\n            }\n          }\n        );\n    }\n  }\n\n  checkErrorsSubscription() {\n    this.config.children?.forEach((res) => {\n      res.formGroup?.get(res.id)?.statusChanges.subscribe((value: any) => {\n        this.checkError(value, res.formGroup, res.id);\n        value === 'DISABLED'\n          ? (this.disabledStatus = true)\n          : (this.disabledStatus = false);\n      });\n    });\n\n    if (this.config.parent !== undefined) {\n      this.config.parent.formGroup\n        ?.get(this.config.parent.id)\n        ?.statusChanges.subscribe((value: any) => {\n          this.checkError(\n            value,\n            this.config?.parent?.formGroup || new FormGroup({}),\n            this.config?.parent?.id || ''\n          );\n          value === 'DISABLED'\n            ? (this.disabledStatus = true)\n            : (this.disabledStatus = false);\n\n          this.config.children?.forEach((res) => {\n            res.formGroup\n              ?.get(res.id)\n              ?.statusChanges.subscribe((value: any) => {\n                this.checkError(value, res.formGroup, res.id);\n                value === 'DISABLED'\n                  ? (this.disabledStatus = true)\n                  : (this.disabledStatus = false);\n              });\n          });\n        });\n    }\n  }\n\n  /**\n   * Will check the status of a formcontrol.  If the control is not in a valid status, it will loop through the errors\n   * and add them to this.errorMessages.\n   * @param value Status of the formcontrol\n   * @param group - Formgroup to be checked\n   * @param id - ID of the control that is being checked for error in the formgroup\n   */\n  checkError(value: FormControlStatus | undefined, group: FormGroup, id: string) {\n    if (value !== 'VALID') {\n      for (const error in group.get(id)?.errors) {\n        let errorIndex = this.config.errorMessages?.findIndex((errorPair) => {\n          return errorPair.key === error;\n        });\n\n        let errorMessagesKeys = this.errorMessagesAccumulator?.findIndex((errorPair) => {\n          return errorPair.key === error && id === errorPair.id;\n        });\n\n        if (errorIndex > -1 && errorMessagesKeys === -1) {\n          this.errorMessagesAccumulator.push({\n            id: id,\n            key: this.config.errorMessages[errorIndex].key,\n            errorLOV: this.config.errorMessages[errorIndex].errorLOV\n          });\n        }\n        this.filterErrorList();\n      }\n    } else {\n\n      this.errorMessagesAccumulator = this.errorMessagesAccumulator.filter(\n        (errorPair) => \n        {\n          return (errorPair.id)?.replace('_error0', '') !== id\n        }\n      );\n      this.filterErrorList();\n    }\n  }\n\n  /**\n   * Will loop through the errors in the variable errorMessages.\n   * It will then add a copy in errorMessagesAccumulator for each unique error type.\n   * THe first error in errorMessagesAccumulator will get _error0 appended to it's ID to display the icon\n   */\n  filterErrorList() {\n    this.errorMessagesAccumulatorUniqueType = [];\n\n    this.errorMessagesAccumulator.forEach((error) => {\n      let errorIndex = this.errorMessagesAccumulatorUniqueType.findIndex((errorPair) => {\n        return errorPair.key === error.key;\n      });\n\n      if (errorIndex === -1) {\n        this.errorMessagesAccumulatorUniqueType.push(error);\n      }\n    });\n\n\n    if(this.errorMessagesAccumulatorUniqueType[0]){\n      if(this.errorMessagesAccumulatorUniqueType[0].id && !this.errorMessagesAccumulatorUniqueType[0].id.endsWith(\"_error0\")) {\n        this.errorMessagesAccumulatorUniqueType[0].id = this.errorMessagesAccumulatorUniqueType[0].id + \"_error0\"\n      }\n    }\n  }\n\n  isValid(checkbox: ICheckBoxComponentConfig) {\n    return typeof checkbox !== 'undefined';\n  }\n\n  removeResponseFromError(response: any) {\n    this.config.errorMessages = this.config.errorMessages.filter((item) => {\n      item?.key !== response.id;\n    });\n  }\n}\n","<fieldset>\n  <legend class=\"visually-hidden\">\n    {{ config.label.label || '' | translate }}\n  </legend>\n  <ng-container *ngIf=\"config.label\">\n    <ircc-cl-lib-label\n      [config]=\"config.label\"\n      [legend]=\"true\"\n      [attr.size]=\"size\"\n    ></ircc-cl-lib-label>\n  </ng-container>\n  <div class=\"parent-checkbox\">\n    <ng-container *ngIf=\"config.parent; else group\">\n      <ircc-cl-lib-checkbox [config]=\"config.parent\"></ircc-cl-lib-checkbox>\n      <ng-container *ngFor=\"let child of config.children\">\n        <ng-container\n          *ngTemplateOutlet=\"\n            recursiveListTmpl;\n            context: { checkBoxConfig: child }\n          \"\n        ></ng-container>\n      </ng-container>\n    </ng-container>\n  </div>\n\n  <ng-template #group>\n    <ng-container *ngFor=\"let child of config.children\">\n      <ircc-cl-lib-checkbox [config]=\"child\"></ircc-cl-lib-checkbox>\n    </ng-container>\n  </ng-template>\n\n  <ng-template\n    #recursiveListTmpl\n    let-checkBoxConfig=\"checkBoxConfig\"\n  >\n    <div class=\"child-checkbox\">\n      <ircc-cl-lib-checkbox [config]=\"checkBoxConfig\"></ircc-cl-lib-checkbox>\n    </div>\n  </ng-template>\n  <ng-container\n    *ngFor=\"let errors of errorMessagesAccumulatorUniqueType; let i = index\"\n  >\n    <div\n      *ngIf=\"errorMessagesAccumulatorUniqueType.length > -1 && !disabledStatus\"\n      class=\"radio-errors\"\n    >\n      <ircc-cl-lib-error\n        [id]=\"errors.id\"\n        [errorLOV]=\"errors.errorLOV\"\n        [attr.size]=\"size\"\n      ></ircc-cl-lib-error>\n    </div>\n  </ng-container>\n</fieldset>\n","import {\n  AfterContentChecked,\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SecurityContext,\n  SimpleChanges,\n  ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { IErrorPairs } from '../../../shared/interfaces/component-configs';\n\nimport { IInputComponentConfig } from '../input/input.component';\nimport {\n  DSSizes,\n  IFlyoutConfig,\n  IFlyoutOptionConfig\n} from '../../../public-api';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nexport interface IAutocompleteComponent {\n  id: string;\n  label?: string;\n  hint?: string;\n  desc?: string;\n  placeholder?: string;\n  size: keyof typeof DSSizes;\n  formGroup: FormGroup;\n  suggestions: string[];\n  required?: boolean;\n  errorMessages?: IErrorPairs[];\n}\n\nexport enum matchType {\n  infix = 'infix',\n  prefix = 'prefix'\n}\n\n@Component({\n  selector: 'ircc-cl-lib-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.css']\n})\nexport class AutoCompleteComponent\n  implements OnInit, OnChanges, AfterContentChecked\n{\n  @ViewChild('inputAutocomplete', { static: false }) inputAutocomplete:\n    | ElementRef\n    | undefined;\n\n  formGroupEmpty: FormGroup = new FormGroup({});\n\n  @Input() config: IAutocompleteComponent = {\n    id: 'auto-complete',\n    formGroup: this.formGroupEmpty,\n    label: 'label',\n    hint: 'hint',\n    desc: 'desc',\n    size: 'small',\n    suggestions: []\n  };\n\n  matchType?: keyof typeof matchType = 'infix';\n  showSuggestions: boolean = false;\n\n  @Input() formGroup = this.formGroupEmpty;\n\n  inputComponent: IInputComponentConfig = {\n    ...this.config,\n    type: 'autocomplete'\n  };\n\n  flyout: IFlyoutConfig = {\n    id: 'string',\n    options: [],\n    type: 'autocomplete',\n    size: this.config.size\n  };\n\n  constructor(\n    private domSanitizer: DomSanitizer,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.inputComponent = {\n      ...this.config,\n      type: 'autocomplete'\n    };\n\n    this.flyout.size = this.config.size;\n  }\n\n  ngAfterContentChecked() {\n    this.changeDetectorRef.detectChanges();\n  }\n\n  ngOnInit() {\n    if (this.formGroup !== this.formGroupEmpty) {\n      this.config.formGroup = this.formGroup;\n    }\n\n    this.inputComponent.id = this.config.id;\n    this.inputComponent.formGroup = this.config.formGroup;\n    this.inputComponent.label = this.config.label;\n    this.inputComponent.hint = this.config.hint;\n    this.inputComponent.desc = this.config.desc;\n    this.inputComponent.size = this.config.size;\n    this.inputComponent.errorMessages = this.config.errorMessages;\n    this.inputComponent.placeholder = this.config.placeholder;\n\n    this.flyout.id = `${this.config.id}-flyout`;\n\n    this.flyout.options = this.config.suggestions.map((suggestion) => {\n      return {\n        value: suggestion,\n        clickable: true\n      };\n    });\n\n    this.config.formGroup\n      .get(this.config.id)\n      ?.valueChanges.subscribe((data) => {\n        if (data === null || data.length === 0) {\n          this.flyout.selected = '';\n          this.flyout.options = [];\n          this.flyout.options = this.config.suggestions.map((suggestion) => {\n            return {\n              value: suggestion,\n              clickable: true\n            };\n          });\n        } else {\n          this.validateInternal(data);\n        }\n      });\n\n    this.inputComponent = {\n      ...this.config,\n      type: 'autocomplete'\n    };\n  }\n\n  spreadFlyoutOption(value: string): IFlyoutOptionConfig {\n    return {\n      value: value,\n      clickable: true\n    };\n  }\n\n  onFocus(event: any) {\n    let timeoutTime = 0;\n\n    if (event === false) {\n      timeoutTime = 500;\n    }\n\n    setTimeout(() => {\n      this.showSuggestions = event;\n    }, timeoutTime);\n\n    // Set 1st option as active when on focus\n    if (this.flyout.options.length > 0) {\n      this.flyout.options[0].active = true;\n    }\n  }\n\n  isSelected(event: any) {\n    if (event !== null) {\n      const tempDivElement = document.createElement('div');\n      tempDivElement.innerHTML = event || '';\n      const convertedString =\n        tempDivElement.textContent || tempDivElement.innerText || '';\n\n      this.config.formGroup.get(this.config.id)?.setValue(convertedString);\n      this.showSuggestions = false;\n    }\n  }\n\n  validateInternal(data: string) {\n    this.flyout.options = [];\n\n    let eventString = this.domSanitizer.sanitize(\n      SecurityContext.HTML,\n      data.replace(/<[^>]*>/g, '')\n    );\n\n    let re: RegExp;\n\n    if (this.matchType === 'infix') {\n      const infixMatching = new RegExp(`${data}`);\n      re = new RegExp(`${infixMatching.source}`, 'i');\n    } else {\n      const paragraphStart = new RegExp(`^${data}`);\n      const whitespaceStart = new RegExp(`\\\\s+\\\\b${data}[a-zA-Z]*`);\n      re = new RegExp(\n        `${paragraphStart.source}|${whitespaceStart.source}`,\n        'i'\n      );\n    }\n\n    this.flyout.selected = data;\n\n    this.flyout.options = this.config.suggestions\n      .filter((suggestion) => suggestion.search(re) >= 0)\n      .map((suggestion) => {\n        return {\n          value: suggestion,\n          clickable: true\n        };\n      });\n\n    if (this.flyout.options.length === 0) {\n      this.flyout.options = [\n        {\n          value: 'No options found',\n          clickable: false\n        }\n      ];\n    }\n  }\n}\n","<div\n  #inputAutocomplete\n  [attr.size]=\"config.size\"\n>\n  <ircc-cl-lib-input\n    [attr.size]=\"config.size\"\n    [config]=\"inputComponent\"\n    type=\"autocomplete\"\n    (focusEvent)=\"onFocus($event)\"\n  ></ircc-cl-lib-input>\n\n  <ng-container *ngIf=\"showSuggestions === true\">\n    <ircc-cl-lib-flyout\n      (isSelected)=\"isSelected($event)\"\n      [config]=\"flyout\"\n      [class]=\"config.size\"\n    ></ircc-cl-lib-flyout>\n  </ng-container>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { ScrollingModule as ExperimentalScrollingModule } from '@angular/cdk-experimental/scrolling';\n\nimport { ErrorComponent } from './error/error.component';\nimport { InputComponent } from './input/input.component';\nimport { RadioInputComponent } from './radio-input/radio-input.component';\nimport { IrccDsAngularComponentsSharedModule } from '../shared/ircc-ds-angular-component-shared.module';\nimport { CheckboxComponent } from './checkbox/checkbox.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DatePickerComponent } from './date-picker/date-picker.component';\nimport { TextareaComponent } from './textarea/textarea.component';\nimport { SelectComponent } from './select/select.component';\nimport { MultiCheckboxComponent } from './multi-checkbox/multi-checkbox.component';\nimport { AutoCompleteComponent } from './autocomplete/autocomplete.component';\n\nimport { IrccDsAngularPipesdModule } from '../../shared/pipes/pipes.module';\n\nconst IrccDsAngularFormComponents = [\n  CheckboxComponent,\n  ErrorComponent,\n  InputComponent,\n  RadioInputComponent,\n  DatePickerComponent,\n  TextareaComponent,\n  SelectComponent,\n  MultiCheckboxComponent,\n  AutoCompleteComponent\n];\n\n@NgModule({\n  declarations: [...IrccDsAngularFormComponents],\n  imports: [\n    CommonModule,\n    IrccDsAngularComponentsSharedModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ScrollingModule,\n    ExperimentalScrollingModule,\n    IrccDsAngularPipesdModule\n  ],\n  exports: [...IrccDsAngularFormComponents]\n})\nexport class IrccDsAngularFormComponentsModule {}\n","export const GOV_CANADA_LOGOS = {\n  headerLightLogo:\n    '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',\n  headerLightLogoFrench:\n    '',\n  headerDarkLogo:\n    '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',\n  headerDarkLogoFrench:\n    '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',\n  footerLightLogo:\n    'iVBORw0KGgoAAAANSUhEUgAAAGUAAAAZCAYAAAAonOB1AAAACXBIWXMAABCcAAAQnAEmzTo0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAVJSURBVHgB5ZqPNTtBEMc3ngLoQAeoABWgAlGBdCAqCBWgAlSAClABKkAF99vPyjcmY/fu8gfv/fJ9716Su92Z2Znd+XfpVBGhAXd3d+Hm5ia8vLyEx8fHdG9lZSWsra2Fvb29sLW1lb7z/P7+PhwcHIT/HWdnZ0kXrBnwiU4eHh5CeH8PYX//a3C3G0JJJ7mxVQ3Oz8+rqGyMVm1vb1e3t7fV29tbevb8/Dz2PBqn2tjYSJ+LAnSg9esaPmCnf139/tekqMOx35mxocQMI4jRYDCoFQxjaCzfFwmnp6ftjcKGjkZM9zBOYew3o8TjV8VjOGJyfHzcKBinRzuGz0UCm7KVUaLxomK/jMLm7XazY5ese8Mv7uzsRDf3nn4TL/r9fmgCvvTq6mroIt/DIoFY2gq7uygKJX/+Jjavr2eHjhnFGgTEUxLaIrqtGKO6C2eU1sB46JNAHjd7GAxC6PXyY3UMCdrBHMNpYgOJAHM50ouEMEmgB4onhbHLMs7JycmYsdj1kyImB8mVLTzQgdWfd1NRT3VjOxiLOgTXZRF3fVLypICWn6f6BteG0bja0Ga86gDcowAtrra0REc1FnGAeZZmG0CDi/k2lnQ6ndH3qlD2SeZW/DFKr9cbO4JcqkdmAZmc0mVSbFwk6bUytXgav7k6fnPf5v9kg8gTk450n+fUQzbj63sXMQQpq7JJMklkYL7mXVxc1K5BfKHBJd6sR/IH774K/BkP/6Ojo3SvJHeiYmsSKWFW2DRZShVYiARljN8AvvbROJ+eM8+OQwEWNk6iEAu7EUsGjRnlSE4M4eWMnYux8sEbxRoMHVso/uaeZY0yj1rDMvUKAdqtOWX6+TnBc+O83JbHrQ2u1adB6zxDHV2LbEU/hN0UuTXauVa+HzMKi4QuOzmXjbE764zmlcYCSygpl4XCnx2dg1UKrrb0rI63XUfupMAfPeR0UNqYy+GHQCAjWZhlvkXbIk3JBCABSA3ClvOEGGdGCQa06jJRmrElIPM0/Jc0+behTKQt5i2jMqkc6IgLTRnaLHKRqeawnGOMsHbHzQvQRZDLy8uJjTJPGVA6p4H15ToQ1lhNSp/UKOJfMghIJyX3/mMWpR0eHqZPFsx7B2qg1dXVsLm5mYSiT9YrtRjmDPhRGEsGPglDuNbSpptnqwhalj86iHEvxDhVrK/SSVEBZq3Hy6ppi0e5BgTRrmNHoYjfdJWcSIwvJcf6IDVYmzwAnkNyz2IgrwMavBijif+oIclgi5gNhGmAIjh57I6/NAi8rUEI1qypjUu2cta5GVBnNDyG1QEeog3/JSvIgM6lYYbrmQSKGf7UoZzfTiYUF4VJOt67tNmHgEadYbybt/HIzvObXrRzGGvdozwrPEe9lKHkwM5gvjfAeua9QVPM8gJP6kY+Pj5G332vSvRKa2NTWdfN6S/h6elp7LelaU9FblMWdZsriGhnBFNItukPUQjZNogtqnwbw7/bzr0m8BV9SQaKPjtORRgy2RaIr9j9qwpP38voOwLi4St6u1ZaM6X5vmdmC+jiHydYrGVIVYrg3EcYiMJITUL/Hl+GCsPeF30k0YUWBswtWouy1a4Ml2te5npkGgdNGcbOV6VPY9DS17pkWL5LsdCxhlPfLdc3VHfAvybXffGX7jQPfsxJrftQA9UVyqosyFLwv7i9UgDT35NwVxxhXBlBl/GKQSrWoEeSwL3X19csPTIo8aLWKIFMRzyur69HPLhHFS4ZtD79RQj5/Hp8baVXBsiCm1OqLzfJxTpU/8GfbLakAz2XDhqNYoEflm//iy7AouAffZcxXLnrBUYAAAAASUVORK5CYII=',\n  footerDarkLogo:\n    'iVBORw0KGgoAAAANSUhEUgAAAGUAAAAZCAYAAAAonOB1AAAACXBIWXMAABCcAAAQnAEmzTo0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAVdSURBVHgB7VrNdeM4DIbz8ua62vMclse5RakgSgXjrWCVCsapwE4FY1dgpQJnKpC3AnsqsPYyV6sDLBCBEUSRkuw4M++N871HiyIIggT4A0IewQAgYkKPmNIVJUMpolRSKij9S+lpNBqVVI9pCeUz+M1BY03pcQOVLiJbTmO/xer960vl2QxgOvU39OMHwMePuuQb9AmmlGMFfo5F8UyLKU0o7SQtKW0oPcGZgHVBaY8Kz+U0cZHJNs1mdYU8r973wrbbYaMumbBLWK5kzXo6tlF1N3BGkIk5zChsCGOqsjwPGuXCI4S3qZxSIkUPtCRnoU4RraDHLVRbGSOC88KwnWGxALi+rt/v7wHu7rxVG0aRrWkF1bnB2HYZxILPE3pYCWdlFJmU/bi5qZ6FVN9u6YS+8la9dN55hRj1fg/DO7cmoz5S9h94RxsxbUBf6ex/JBWVZWWkyaQ2kg9yqONrzgb20oTXwBlh8JmiD3sLz5miV4rrsz3CgZDVUsI7WAdZkPrpU53/8MGlbkf8i9U9JHeIt6xkOBDU1pj4npwyPmdiVVRSne3A9gw/9d4tZeaQtsSB0efdVs7CwZBxRCKzVOVo81Q+CvAaaB4N3f0mhjm28eoDG6u7jF2rG3EfeS3vsPLvl+5Wx3KxvvPYO8BeaFPhXUm7ls5lk0Afvqh6c9mmM9WntGcMkZK7F7m58HLbRivNwz/G+sqQO/K5zWlIcI5N7OEEEKEogzGqXA+E60QOn3v3sfXmPfUmDl2fk0uHNg/xqToJ1gbd6H6K7Aw9l0enjsXGoY0VLfcJz9FRALwSWB/6jKcemZMe/tagAvV2Di1TtMShRYq2x/bEiHW76Nk5pI2d7qRDT3vGuAv1762Mwh3eiGDjoc+UvGWAXyPtkKOhZ7PdOvIA707xxR20FMLjnHUYxa7kTUAHmc9ol/BGkIPwGo6EBDh1UTGwng2WgjgcQ2Nx2pgpNB2JrINvDW3P1fatgOE6eJFvb/T/wc/H1YH1CzghsO0NaXxW+T7ProDjceMrvAgINngC78uFbDVj2U4S+AWQLYW3Cg4nhVxiPfYCunGoW83yU9GBV8fWKJmHFsORQOXmYeUGr+ScYq+OZyGHbxbwE4C1S8t9YPnsMLAyOIgaUqiBgei764h81kGu5BtKf0Pg28mlbZgY1tCcvZxfw4HAyotgj4gjAjwbrXELStf2wsQrBt4YIoOdCDsjeSLMrCKxfa2w4D4ayf8Jx8s30Iwnrind2YtwSL6OErvBx2MDi8zHBuHVog1yO/QWfwrI9stf/6xBMpI/GXiL12fs1QA5IfCEMJIv+KvkkKjyi1FEYQ+KZjBwqerooIF6hSWKtBgc4j4deEIY9f4Aw6E9NoPuHaIJo18c1zdRed/Hkz88Zc3vKfLtRAcip3hYxJdnps8AvhXyF3TgBI6G5i/dPkn7xscoMb+1KvoMYSTOu9FyVb6ANoynDC48HUqhnlXc8bxnprzEqyj7nfjnUqyN617MDDQH43Mq3LIE/LJD9dZQKyXyGNk904zzzjO7kPzEI8fiS0A+YxtqX3Sg2+ycpJYpdW61S3FnY6FH4t5N5cbqxp3sjZ6xd/hyrAOTFonQJ/JcYhOtW7G0tXLq7bD+c4cOc6xUeSLt6fhXbpWl+mBUH/mZOrKX2I7R7ZUcl9+Wx0r+XvNxu6MhxoFq+SbQ9qsLqFZEFjozhJ95eSbwzP1u60snx1BvD89/V4L2eaAxV95TCmHovz2xku3fo7YiJxN6KvKN9O+bpUFbB0a18VyXb/tYxeVi0YdNC+VpWv5I6WDu6d8zrdcoGlh/T2CUh36PeMcw/A8RhuRsl5R/lwAAAABJRU5ErkJggg=='\n};\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n  /**\n   * Language Switch Button renamed and refactored to include Header and Footer Dark Mode support based on user system preferences\n   */\nexport class LanguageHeaderFooterSwitchService {\n  private languageClickSub = new BehaviorSubject<boolean>(false);\n  languageClickObs$ = this.languageClickSub.asObservable();\n  private isDarkModeSubject = new BehaviorSubject<boolean>(false);\n  public isDarkMode$ = this.isDarkModeSubject.asObservable();\n\n  constructor() {\n    this.updateDarkModePreference();\n  }\n    /**\n   * We check system preference for preferred color scheme in the constructor before components are rendered in the DOM and subscribe to changes in the header and footer components\n   */\n  updateDarkModePreference() {\n    const darkModeQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    \n    const darkModeListener = (event: MediaQueryListEvent) => {\n      this.isDarkModeSubject.next(event.matches);\n    };\n\n    darkModeQuery.addEventListener('change', darkModeListener);\n    this.isDarkModeSubject.next(darkModeQuery.matches);\n  }\n\n  languageToggleClick() {\n    this.languageClickSub.next(true);\n  }\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport {\n  Component,\n  HostListener,\n  Inject,\n  Input,\n  OnInit,\n  PLATFORM_ID\n} from '@angular/core';\nimport { Router, TitleStrategy } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LanguageHeaderFooterSwitchService } from './language-header-footer-switch.service';\n\n\nexport const LANGUAGE_SWITCH_TEXT_ENGLISH = 'Français';\nexport const LANGUAGE_SWITCH_TEXT_ENGLISH_MOBILE = '<abbr title=\"Français\">FR</abbr>';\n\nexport const LANGUAGE_SWITCH_TEXT_FRENCH = 'English';\nexport const LANGUAGE_SWITCH_TEXT_FRENCH_MOBILE = '<abbr title=\"English\">EN</abbr>';\n\n@Component({\n  selector: 'ircc-cl-lib-language-switch',\n  templateUrl: './language-switch.component.html'\n})\nexport class LanguageSwitchComponent implements OnInit {\n  @Input() id = '';\n\n  isMobile = false;\n\n  text = '';\n  aria = '';\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: object,\n    private langToggle: LanguageHeaderFooterSwitchService,\n    private translate: TranslateService,\n    private router: Router,\n    private titleService: TitleStrategy\n\n  ) {\n    this.isMobile = window.innerWidth <= 360; //phone breakpoint\n  }\n\n  /** Listens for screen resizes and sets mobile boolean */\n  @HostListener('window:resize', ['$event'])\n  handleResize(e: any) {\n    if (isPlatformBrowser(this.platformId)) {\n      this.isMobile = window.innerWidth <= 768; //tablet breakpoint\n      this.setText(this.translate.currentLang);\n    }\n  }\n\n  ngOnInit() {\n    let lang = this.translate.currentLang;\n    this.setText(lang);\n    this.translate.onLangChange.subscribe((newLang) => {\n      console.log(newLang.lang, 'switch');\n      this.setText(newLang.lang);\n    });\n  }\n\n  switch() {\n    this.langToggle.languageToggleClick();\n    this.titleService.updateTitle(this.router.routerState.snapshot);\n  }\n\n  setText(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.isMobile\n        ? (this.text = LANGUAGE_SWITCH_TEXT_ENGLISH_MOBILE)\n        : (this.text = LANGUAGE_SWITCH_TEXT_ENGLISH);\n    } else {\n      this.isMobile\n        ? (this.text = LANGUAGE_SWITCH_TEXT_FRENCH_MOBILE)\n        : (this.text = LANGUAGE_SWITCH_TEXT_FRENCH);\n    }\n  }\n}\n","<a\n  [id]=\"id\"\n  (click)=\"switch()\"\n  id=\"language-toggle\"\n  [innerHTML]=\"text\"\n  tabindex=\"0\"\n></a>\n","import { Component, Renderer2 } from '@angular/core';\n// import { ThemeSwitchService } from './theme-switch.service';\n\n\n@Component({\n  selector: 'ircc-cl-lib-theme-switch',\n  templateUrl: './theme-switch.component.html'\n})\nexport class ThemeSwitchComponent {\n  isDarkTheme = false;\n  currentTheme = '';\n  previousTheme = '';\n  darkModeQuery : any;\n\n  constructor(private renderer: Renderer2) { }\n\n  ngOnInit() {\n    this.darkModeQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    this.isDarkTheme = this.darkModeQuery.matches;\n    this.isDarkTheme ? this.currentTheme = 'dark' : this.currentTheme = 'light';\n    this.currentTheme === 'dark' ? this.previousTheme = 'Light' : this.previousTheme = 'Dark';\n    this.darkModeQuery.addEventListener('change', this.handleDarkModeChange.bind(this));\n  }\n\n  toggleTheme() {\n    this.isDarkTheme = !this.isDarkTheme;\n    this.isDarkTheme ? this.currentTheme = 'dark' : this.currentTheme = 'light';\n    this.currentTheme === 'dark' ? this.previousTheme = 'Light' : this.previousTheme = 'Dark';\n    this.renderer.setAttribute(document.documentElement, 'scheme', this.currentTheme);\n    this.darkModeQuery.removeEventListener('change', this.handleDarkModeChange.bind(this));\n  }\n\n  handleDarkModeChange(event: MediaQueryListEvent) { \n    this.isDarkTheme = event.matches;\n    this.isDarkTheme ? this.currentTheme = 'dark' : this.currentTheme = 'light';\n    this.currentTheme === 'dark' ? this.previousTheme = 'Light' : this.previousTheme = 'Dark';\n  }\n}\n","<button\n  (click)=\"toggleTheme()\"\n  category=\"secondary\"\n  color=\"critical\"\n>\n  {{ this.previousTheme }}\n</button>\n","import { Component, Input, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { GOV_CANADA_LOGOS } from '../header-footer-const.component';\nimport { Subscription } from 'rxjs';\nimport { LanguageHeaderFooterSwitchService } from '../language-switch/language-header-footer-switch.service';\n\nexport const HEADER_IMG_LINK_EN = 'https://www.canada.ca/en.html';\nexport const HEADER_IMG_LINK_FR = 'https://www.canada.ca/fr.html';\nexport const CANADA_LOGO_ARIA_LABEL_ENGLISH =\n  'Symbol of the Government of Canada';\nexport const CANADA_LOGO_ARIA_LABEL_FRENCH =\n  'Symbole du gouvernement du Canada';\n\n@Component({\n  selector: 'ircc-cl-lib-header',\n  templateUrl: './header.component.html'\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  /**\n   * This is the ID of the header component. Will be applied as the ID of the header Element within the custom element.\n   *\n   * All IDs must be unique and can be used to specifically target an element within your project.\n   */\n  @Input() id = '';\n  @Input() themeToggle? = false;\n  alt = '';\n  govCanadaLink = '';\n  logo: string = '';\n  private subscription: Subscription;\n  isDarkMode: boolean = false;\n  constructor(\n    private translate: TranslateService,\n    private languageHeaderFooterSwitch: LanguageHeaderFooterSwitchService\n  ) {\n    this.subscription = this.languageHeaderFooterSwitch.isDarkMode$.subscribe(\n      (response) => {\n        this.updateHeaderImage(response);\n        this.isDarkMode = response;\n      }\n    );\n  }\n\n  /**\n   * ngOnInit() lifecycle method run immediately when the component is initialized. c\n   *\n   * For Header Component the ngOnInit() checks for current url Language and subscribes to changes. Appropriate translations will be pulled as a result and content will be displayed in the users selected language.\n   * When language changes update the Header and Footer images to display logos based on language and preferred color scheme based on the dark mode subscription in the constructor\n   */\n  ngOnInit() {\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n      this.updateHeaderImage(this.isDarkMode);\n    });\n  }\n\n  updateHeaderImage(res: boolean) {\n    const locale = this.translate.currentLang;\n    if (locale === 'en' || locale === 'en-US') {\n      this.logo = res\n        ? GOV_CANADA_LOGOS.headerDarkLogo\n        : GOV_CANADA_LOGOS.headerLightLogo;\n    } else {\n      this.logo = res\n        ? GOV_CANADA_LOGOS.headerDarkLogoFrench\n        : GOV_CANADA_LOGOS.headerLightLogoFrench;\n    }\n  }\n\n  /**\n   * setLang(lang: string) if a function which accepts a string value.\n   * This value currently needs to be 'en' or 'en-US' to trigger English translations otherwise\n   * french translations will be triggered.\n   */\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.alt = CANADA_LOGO_ARIA_LABEL_ENGLISH;\n      this.govCanadaLink = HEADER_IMG_LINK_EN;\n    } else {\n      this.alt = CANADA_LOGO_ARIA_LABEL_FRENCH;\n      this.govCanadaLink = HEADER_IMG_LINK_FR;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<header\n  class=\"heading\"\n  role=\"banner\"\n  [id]=\"id\"\n>\n  <div class=\"header-content\">\n    <div class=\"image-container\">\n      <a\n        href=\"{{ govCanadaLink }}\"\n        id=\"canada-home-img-link\"\n        target=\"_blank\"\n        property=\"url\"\n        role=\"link\"\n        tabindex=\"0\"\n      >\n        <img\n          [src]=\"'data:image/png;base64,' + logo\"\n          alt=\"{{ alt }}\"\n          property=\"logo\"\n        />\n      </a>\n    </div>\n\n    <div class=\"languageSwitch\">\n      <ircc-cl-lib-language-switch\n        [id]=\"id + '_langToggle'\"\n      ></ircc-cl-lib-language-switch>\n      <ircc-cl-lib-theme-switch *ngIf=\"themeToggle\"></ircc-cl-lib-theme-switch>\n    </div>\n  </div>\n  <hr class=\"headerLine\" />\n\n  <ng-content select=\"[headerContent]\"></ng-content>\n</header>\n","import { Component, Input } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { GOV_CANADA_LOGOS } from '../header-footer-const.component';\n\nimport { Subscription } from 'rxjs';\nimport { LanguageHeaderFooterSwitchService } from '../language-switch/language-header-footer-switch.service';\n\nexport const GOV_LOGO_ALT_TEXT_EN = 'Canada wordmark';\nexport const GOV_LOGO_ALT_TEXT_FR = 'FR Canada wordmark';\n\n@Component({\n  selector: 'ircc-cl-lib-footer',\n  templateUrl: './footer.component.html'\n})\nexport class FooterComponent {\n  @Input() id = '';\n  altImage = '';\n  logo: string = GOV_CANADA_LOGOS.footerLightLogo;\n  isDarkMode: boolean = false;\n  private subscription: Subscription;\n\n  constructor(\n    private translate: TranslateService,\n    private languageHeaderFooterSwitch: LanguageHeaderFooterSwitchService\n  ) {\n    this.subscription = this.languageHeaderFooterSwitch.isDarkMode$.subscribe(\n      (response) => {\n        this.updateFooterImage(response);\n        this.isDarkMode = response;\n      }\n    );\n  }\n\n  ngOnInit() {\n    this.setLang(this.translate.currentLang);\n    this.translate.onLangChange.subscribe((change) => {\n      this.setLang(change.lang);\n      this.updateFooterImage(this.isDarkMode);\n    });\n  }\n\n  updateFooterImage(res: boolean) {\n    this.logo = res\n      ? GOV_CANADA_LOGOS.footerDarkLogo\n      : GOV_CANADA_LOGOS.footerLightLogo;\n  }\n\n  setLang(lang: string) {\n    if (lang === 'en' || lang === 'en-US') {\n      this.altImage = GOV_LOGO_ALT_TEXT_EN;\n    } else {\n      this.altImage = GOV_LOGO_ALT_TEXT_FR;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<footer\n  class=\"ircc-cl-lib-footer footing\"\n  role=\"contentinfo\"\n>\n  <div\n    class=\"grid-container\"\n    [id]=\"id\"\n  >\n    <div class=\"item1 body3\">\n      <ng-content></ng-content>\n    </div>\n    <picture class=\"item2\">\n      <img\n        [src]=\"'data:image/png;base64,' + logo\"\n        alt=\"{{ altImage }}\"\n      />\n    </picture>\n  </div>\n</footer>\n","import { Component, HostListener, Input, OnInit } from '@angular/core';\n\nexport interface ISkipLinkConfig {\n  title: string;\n  href: string;\n  ariaLabel?: string;\n}\n\nexport interface IHiddenNavConfig {\n  id: string;\n  skipLinks?: ISkipLinkConfig[];\n}\n\n@Component({\n  selector: 'ircc-cl-lib-hidden-nav',\n  templateUrl: './hidden-nav.component.html'\n})\nexport class HiddenNavComponent {\n  @Input() config: IHiddenNavConfig = {\n    id: ''\n  };\n\n  scrollToAnchor(id: string) {\n    if (id) {\n      const el = document.getElementById(id);\n      el?.scrollIntoView();\n      el?.setAttribute('tabindex', '-1');\n      el?.focus();\n    }\n  }\n\n  @HostListener('keydown', ['$event.key'])\n  handleKeyDown(key: string, link?: string) {\n    key === 'Tab' ? this.showNav() : null;\n    key === 'Enter' && link ? this.scrollToAnchor(link) : null;\n  }\n\n  showNav() {\n    const container = document.getElementById('hidden-nav-container');\n    const btns = document.getElementsByClassName('hidden-btns');\n    container?.classList.add('active-nav');\n  }\n}\n","<div id=\"hidden-nav-container\">\n  <ng-container *ngFor=\"let link of config?.skipLinks; let i = index\">\n    <button\n      class=\"hidden-btns\"\n      role=\"link\"\n      (click)=\"scrollToAnchor(link.href)\"\n      (keydown)=\"handleKeyDown($event.key, link.href)\"\n      [tabindex]=\"i + 1\"\n      [attr.aria-label]=\"link.ariaLabel\"\n    >\n      {{ link.title }}\n    </button>\n  </ng-container>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { IrccDsAngularComponentsSharedModule } from '../shared/ircc-ds-angular-component-shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HiddenNavComponent } from './hidden-nav/hidden-nav.component';\nimport { ThemeSwitchComponent } from './theme-switch/theme-switch.component';\nimport { LanguageSwitchComponent } from './language-switch/language-switch.component';\n\n\nconst IrccDsHeaderFooterComponents = [\n  HeaderComponent,\n  FooterComponent,\n  LanguageSwitchComponent,\n  HiddenNavComponent,\n  ThemeSwitchComponent\n];\n\n@NgModule({\n  declarations: [...IrccDsHeaderFooterComponents],\n  imports: [\n    CommonModule,\n    IrccDsAngularComponentsSharedModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [...IrccDsHeaderFooterComponents]\n})\nexport class IrccDsAngularHeaderFooterModule { }\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'lib-chip-item',\n  templateUrl: './chip-item.component.html'\n})\nexport class ChipItemComponent {\n  @Input() chipContent?: string;\n  @Output() iconClickEvent = new EventEmitter();\n\n  constructor() {}\n\n  onIconClick() {\n    this.iconClickEvent.emit();\n  }\n\n  onEnterKeyPress() {\n    this.iconClickEvent.emit();\n  }\n}\n","<div\n  class=\"chip-item\"\n  tabindex=\"0\"\n  (keydown.enter)=\"onEnterKeyPress()\"\n>\n  <span class=\"chip-text\">{{ chipContent || '' }}</span>\n  <span\n    class=\"icon-container\"\n    (click)=\"onIconClick()\"\n  >\n    <i class=\"fa-solid fa-circle-xmark clickable-icon\"></i>\n  </span>\n</div>\n","/**\n * TODO: This particular component, while functional, is not ideal. Components should not import other components directly in the .ts\n * unless absolutely necessary. Furthermore, the use of DoCheck, while interesting, is not ideal, since it ignores the built-in\n * angular lifecycle hooks and change detection.\n */\n\nimport {\n  Component,\n  OnInit,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n  DoCheck,\n  KeyValueDiffers,\n  KeyValueDiffer,\n  ViewChild\n} from '@angular/core';\nimport { InputComponent } from '../../form-components/input/input.component';\n//TODO: This should be changed. Ideally the component doesn't need to know about these, and can just\n//add them in using the template.\nimport { ChipItemComponent } from '../chips/chip-item/chip-item.component';\n\ninterface IOption {\n  //Changed: Interfaces should ALWAYS start with 'I'.\n  text: string;\n  value: string;\n}\n\n@Component({\n  selector: 'lib-autocomplete',\n  templateUrl: './autocomplete.component.html'\n})\nexport class AutocompleteComponent implements OnInit, DoCheck {\n  @ViewChild(InputComponent, { static: true })\n  inputComponent?: InputComponent;\n\n  //TODO: Change this to a config\n  @Input() options: IOption[] = [];\n  @Input() title = `Title`;\n  @Input() hintText = `Hint Text`;\n  @Input() name = `Add Name`;\n  @Input() error = false;\n  @Input() limit = 0;\n  @Output() selectValueChange = new EventEmitter();\n  @Input() savedSelectedOptions: IOption[] = [];\n\n  selectedOptions: IOption[] = [];\n  originalOptions: IOption[] = [];\n  inputValue?: string;\n  hideDropdown = true;\n  isFocusInsideComponent = false;\n  isComponentClicked = false;\n  addHover = false;\n  emptyResults = false;\n\n  differ: KeyValueDiffer<string, any>;\n  constructor(private differs: KeyValueDiffers) {\n    this.differ = this.differs.find({}).create();\n  }\n\n  @HostListener('window:keydown.escape', ['$event'])\n  handleKeyDown(event: KeyboardEvent) {\n    event.stopPropagation();\n    if (this.hideDropdown === false || this.options.length > 0) {\n      this.inputComponent?.clearvalue();\n      this.returnOptionsToDefault();\n      this.isComponentClicked = false;\n      this.isFocusInsideComponent = false;\n      this.hideDropdown = true;\n    }\n  }\n\n  @HostListener('click', ['$event'])\n  clickInside(event: { target: HTMLInputElement }) {\n    const target = event.target;\n    if (\n      this.hideDropdown === true &&\n      target.type === `text` &&\n      this.options.length > 0\n    ) {\n      this.isFocusInsideComponent = true;\n      this.isComponentClicked = true;\n      this.toggleDropDown();\n      this.addHover = true;\n    } else if (\n      target.classList.contains('select-target') ||\n      target.classList.contains(`selected`)\n    ) {\n      this.isComponentClicked = false;\n      this.isFocusInsideComponent = false;\n      this.toggleDropDown();\n    }\n  }\n\n  @HostListener('document:click')\n  clickout() {\n    if (!this.isFocusInsideComponent && this.isComponentClicked) {\n      this.toggleDropDown();\n      this.inputComponent?.clearvalue();\n      this.returnOptionsToDefault();\n      this.isComponentClicked = false;\n    }\n    this.isFocusInsideComponent = false;\n  }\n\n  onMouseEnter() {\n    this.addHover = false;\n  }\n\n  ngDoCheck() {\n    const change = this.differ.diff(this);\n    if (change) {\n      change.forEachChangedItem((item) => {\n        if (item.key === `options`) {\n          this.selectValueChange.emit(this.selectedOptions);\n        }\n      });\n    }\n  }\n\n  valueChange(event: any) {\n    this.filterList(event);\n  }\n\n  filterList(filterValue: any) {\n    if (filterValue.length < 1) {\n      this.returnOptionsToDefault();\n    } else {\n      const filteredOptions = this.originalOptions.filter((value) => {\n        return value.text.toLowerCase().includes(filterValue.toLowerCase());\n      });\n      this.options = filteredOptions.slice(0);\n      if (this.options.length === 0) {\n        this.emptyResults = true;\n      } else {\n        this.emptyResults = false;\n      }\n    }\n  }\n\n  public checkActive(value: string): boolean {\n    for (const selectedOption of this.selectedOptions) {\n      if (selectedOption.value === value) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  returnOptionsToDefault() {\n    this.emptyResults = false;\n    this.options = this.originalOptions.slice(0);\n  }\n\n  public toggleDropDown() {\n    this.hideDropdown = !this.hideDropdown;\n    this.inputComponent?.focusInput(this.hideDropdown);\n  }\n\n  public toggleDropDownKey(event: KeyboardEvent) {\n    if (event.keyCode === 13) {\n      this.toggleDropDown();\n    }\n  }\n\n  removeChipItem(index: number) {\n    this.selectedOptions.splice(index, 1);\n    this.returnOptionsToDefault();\n  }\n\n  public removeAllChipItems() {\n    this.selectedOptions = [];\n    this.returnOptionsToDefault();\n  }\n\n  public selectAll() {\n    for (const option of this.options) {\n      this.selectedOptions.push(option);\n    }\n    this.returnOptionsToDefault();\n  }\n\n  public selectIndex(index: number) {\n    if (this.limit !== 0 && this.selectedOptions.length >= this.limit) {\n      return;\n    } else {\n      this.inputComponent?.clearvalue();\n      this.returnOptionsToDefault();\n      if (this.checkDuplicated(index) === false) {\n        this.selectedOptions.push(this.options[index]);\n      }\n    }\n  }\n\n  checkDuplicated(index: number) {\n    return this.selectedOptions.some((element: { value: string }) => {\n      if (element.value === this.options[index].value) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  ngOnInit() {\n    this.selectedOptions = [];\n    this.originalOptions = this.options.slice(0);\n    this.selectedOptions = this.savedSelectedOptions;\n    this.savedSelectedOptions = [];\n    this.returnOptionsToDefault();\n  }\n}\n","<div\n  class=\"autocomplete-container\"\n  [ngClass]=\"{ error: error }\"\n>\n  <div>\n    <!-- <jl-pr-sclp-input\n      [label]=\"title\"\n      [hintText]=\"hintText\"\n      [placeholder]=\"'+ ' + (name | translate)\"\n      [error]=\"error\"\n      (valueChange)=\"valueChange($event)\"\n    > -->\n    <lib-chip-item\n      *ngFor=\"let option of selectedOptions; let index = index\"\n      [chipContent]=\"option['text']\"\n      (iconClickEvent)=\"removeChipItem(index)\"\n    ></lib-chip-item>\n    <!-- </jl-pr-sclp-input> -->\n  </div>\n\n  <div\n    class=\"autocomplete-options\"\n    [ngClass]=\"hideDropdown === false ? '' : 'hide'\"\n    (mouseenter)=\"onMouseEnter()\"\n  >\n    <div\n      *ngIf=\"limit === 0\"\n      class=\"option autocomplete-target all-results\"\n      (click)=\"selectAll()\"\n      [tabindex]=\"0\"\n      [ngClass]=\"emptyResults === false ? '' : 'hide-option'\"\n    >\n      <p class=\"select-target\">\n        {{ 'AllOptionsForAutocomplete' | translate }} {{ title | translate }}s\n      </p>\n    </div>\n    <div\n      class=\"option autocomplete-target\"\n      *ngFor=\"let option of options; let index = index; first as isFirst\"\n      (click)=\"selectIndex(index)\"\n      [tabindex]=\"index + 1\"\n      [ngClass]=\"checkActive(option['value']) ? 'active' : ''\"\n    >\n      <p class=\"select-target\">{{ option['text'] }}</p>\n    </div>\n    <div\n      class=\"option autocomplete-target\"\n      [ngClass]=\"emptyResults === false ? 'hide-option' : ''\"\n    >\n      <p>{{ 'NoResults' | translate }}</p>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'lib-chip-list',\n  templateUrl: './chip-list.component.html'\n})\nexport class ChipListComponent implements OnInit {\n  @Input() chipList?: string[];\n  @Output() chipListChange = new EventEmitter<Array<string>>();\n  chipContentText?: string;\n  constructor() {}\n\n  ngOnInit() {}\n\n  removeChipItem(chipIdx: number) {\n    this.chipList?.splice(chipIdx, 1);\n    this.chipListChange.emit(this.chipList);\n  }\n\n  onSubmit() {\n    if (this.chipContentText) {\n      this.chipList?.push(this.chipContentText);\n      this.chipListChange.emit(this.chipList);\n      this.chipContentText = '';\n    }\n  }\n}\n","<form\n  #form=\"ngForm\"\n  (ngSubmit)=\"onSubmit()\"\n>\n  <ircc-cl-lib-input\n    name=\"chipContentText\"\n    [(ngModel)]=\"chipContentText\"\n    placeholder=\"Add Chip\"\n  >\n  </ircc-cl-lib-input>\n</form>\n<div class=\"chip-list\">\n  <lib-chip-item\n    *ngFor=\"let chip of chipList; let idx = index\"\n    [chipContent]=\"chip\"\n    (iconClickEvent)=\"removeChipItem(idx)\"\n  ></lib-chip-item>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'lib-secondary-chips',\n  templateUrl: './secondary-chips.component.html'\n})\nexport class SecondaryChipsComponent implements OnInit {\n  @Input() chipContent?: string;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div\n  class=\"secondary-chip\"\n  tabindex=\"0\"\n>\n  <span class=\"secondary-chip-text\">{{ chipContent || '' | translate }}</span>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nexport interface ISearchInputConfig {\n  placeholderText?: string;\n  customIcon?: string;\n  searchButton?: ISearchInputButtonConfig;\n}\n\nexport interface ISearchInputButtonConfig {\n  text?: string;\n  colour?: string;\n}\n\n@Component({\n  selector: 'lib-search-input',\n  templateUrl: './search-input.component.html'\n})\nexport class SearchInputComponent implements OnInit {\n  @Input() config?: ISearchInputConfig;\n  @Output() searchEvent: EventEmitter<any> = new EventEmitter();\n\n  searchInputControl = new FormControl();\n  constructor() {}\n\n  ngOnInit() {\n    console.log('testing');\n  }\n}\n","<input formControlName=\"searchInputControl\" />\n<!-- TODO: Translation? -->\n<ng-container *ngIf=\"config?.searchButton\">\n  <button>{{ config?.searchButton?.text }}</button>\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AutocompleteComponent } from './autocomplete/autocomplete.component';\nimport { ChipListComponent } from './chips/chip-list/chip-list.component';\nimport { SecondaryChipsComponent } from './chips/secondary-chips/secondary-chips.component';\nimport { ChipItemComponent } from './chips/chip-item/chip-item.component';\nimport { SearchInputComponent } from './search-input/search-input.component';\nimport { IrccDsAngularComponentsSharedModule } from '../shared/ircc-ds-angular-component-shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nconst IrccDsLegacyOldComponents = [\n  AutocompleteComponent,\n  ChipListComponent,\n  SecondaryChipsComponent,\n  ChipItemComponent,\n  SearchInputComponent\n];\n\n@NgModule({\n  declarations: [...IrccDsLegacyOldComponents],\n  imports: [\n    CommonModule,\n    IrccDsAngularComponentsSharedModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [...IrccDsLegacyOldComponents]\n})\nexport class IrccDsAngularLegacyOldModule {}\n","//TODO: Add detailed readme listing how this actually works. People will be SOOOO confused.\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport {\n  INavigationConfig,\n  INavigationItem,\n  INavigationItemAccordion,\n  INavigationItemHeading,\n  INavigationItemLink\n} from './navigation.types';\n\nexport interface INavItemEvent {\n  id: string;\n  event: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigationService {\n  //Used entirely as a workaround for the change detection limitations\n  private itemChangeSubj = new Subject<string>();\n  itemChangeObs$ = this.itemChangeSubj.asObservable();\n\n  private navEventSubj = new Subject<INavItemEvent>();\n  navEventObs$ = this.navEventSubj.asObservable(); //Use this for any events we need propagated up to parents\n\n  private navConfigSubj = new BehaviorSubject<INavigationConfig>({\n    id: '',\n    label: '',\n    iconLeading: '',\n    iconTrailing: '',\n    height: '',\n    size: 'small',\n    scrolling: false,\n    marginTop: 0,\n    navigationConfig: [],\n    childrenPadding: true\n  });\n  navConfigObs$ = this.navConfigSubj.asObservable();\n\n  flattenedNavigation: Array<INavigationItem> = [];\n\n  /**\n   * Broadcast the config object of the value and flatten the array\n   * @param update: INavigationConfig\n   */\n  setNavConfig(update: INavigationConfig) {\n    this.navConfigSubj.next(update);\n    this.flattenedNavigation = this.flatten(update);\n  }\n\n  /**\n   * General broadcast of an element update\n   * @param event\n   */\n  setNavItem(\n    update:\n      | INavigationItemLink\n      | INavigationItemAccordion\n      | INavigationItemHeading\n  ) {\n    this.setNavItemFields(\n      this.findByKey(this.flattenedNavigation, 'id', update.id),\n      update\n    );\n    this.itemChangeSubj.next(update.id); //This is used to get around a change detection problem in the various child components\n  }\n\n  /**\n   * Broadcast element events\n   * @param event: INavItemEvent where id is the id of the component broadcasting and event is the Event\n   */\n  navEvent(event: INavItemEvent) {\n    this.navEventSubj.next(event);\n  }\n\n  /**\n   * Flatten an object into a simple array\n   * @param obj object being flattened\n   * @returns flattened array\n   */\n  private flatten = (obj: any) => {\n    const stack = [obj];\n    let stackB = [];\n    while (stack?.length > 0) {\n      const currentObj = stack.pop();\n      if (!Array.isArray(currentObj)) {\n        stackB.push(currentObj);\n      }\n      Object.keys(currentObj).forEach((key) => {\n        if (typeof currentObj[key] === 'object' && currentObj[key] !== null) {\n          stack.push(currentObj[key]);\n        }\n      });\n    }\n    return stackB;\n  };\n\n  /**\n   *\n   * @param items flattened array\n   * @param key of the key value pair ('id')\n   * @param value id of the piece being searched for (update.id)\n   * @returns\n   */\n  private findByKey = (\n    items: Array<INavigationItem>,\n    key: string,\n    value: string\n  ) => {\n    let returnItem: INavigationItem = {\n      id: '',\n      label: '',\n      type: 'accordion',\n      children: []\n    };\n    returnItem = items.find((element: any) => element[key] === value) || {\n      id: '',\n      label: '',\n      type: 'accordion',\n      children: []\n    };\n    return returnItem;\n  };\n\n  /**\n   * Replace the contents of one object with those of another. This is done to keep our\n   * memory trick going\n   * @param obj1 object being updated\n   * @param obj2 values to put in obj1\n   */\n  private setNavItemFields = (obj1: INavigationItem, obj2: INavigationItem) => {\n    Object.keys(obj2).forEach((key) => {\n      obj1[key] = obj2[key];\n    });\n  };\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DSSizes } from '../../../../shared/constants/jl-components.constants';\nimport { INavigationItem, INavigationItemHeading } from '../navigation.types';\nimport { IIconButtonComponentConfig } from '../../icon-button/icon-button.component';\nimport { NavigationService } from '../navigation.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'ircc-cl-lib-nav-header',\n  templateUrl: './nav-item-heading.component.html'\n})\nexport class navItemHeadingComponent implements OnInit {\n  @Input() config: INavigationItemHeading = {\n    id: '',\n    label: '',\n    iconLeading: '',\n    size: 'small',\n    type: 'heading',\n    children: [],\n    bold: false\n  };\n\n  @Input() id: string = '';\n  @Input() label: string = '';\n  @Input() iconLeading: string = '';\n  @Input() children: Array<INavigationItem> | undefined;\n  @Input() size: keyof typeof DSSizes | undefined;\n  @Input() leftPadding: boolean | undefined;\n  @Input() bold: boolean | undefined;\n\n  buttonIcon: IIconButtonComponentConfig = {\n    id: `${this.config.id}-button`,\n    category: 'custom',\n    size: this.config?.size,\n    icon: {\n      class: this.config?.iconLeading,\n      color: 'var(--text-primary)'\n    }\n  };\n\n  navObjectChangeSub = new Subscription();\n\n  constructor(private navEvent: NavigationService) {}\n\n  ngOnInit() {\n    this.id !== '' ? (this.config.id = this.id) : undefined;\n    this.label !== '' ? (this.config.label = this.label) : undefined;\n    this.iconLeading !== ''\n      ? (this.config.iconLeading = this.iconLeading)\n      : undefined;\n    this.children !== undefined\n      ? (this.config.children = this.children)\n      : undefined;\n    this.size !== undefined ? (this.config.size = this.size) : undefined;\n    this.leftPadding !== undefined\n      ? (this.config.leftPadding = this.leftPadding)\n      : undefined;\n    this.bold !== undefined ? (this.config.bold = this.bold) : undefined;\n    if (this.config?.bold != true && this.config?.bold != false) {\n      this.config.bold = true;\n    }\n\n    this.buttonIcon = {\n      id: `${this.config.id}_button`,\n      category: 'custom',\n      size: this.config?.size,\n      icon: {\n        class: this.config?.iconLeading,\n        color: 'var(--text-primary)'\n      }\n    };\n  }\n\n  getClasses(): string {\n    let classes = '';\n\n    if (this.config.iconLeading.length > 0) {\n      classes += 'grid-header';\n    }\n\n    if (this.config?.leftPadding === true) {\n      classes += ' left-padding';\n    }\n\n    if (this.config?.bold === false) {\n      classes += ' remove-bold';\n    }\n\n\n    return classes;\n  }\n}\n","<div [id]=\"config.id\">\n  <div\n    class=\"nav-header-header\"\n    [class]=\"getClasses()\"\n  >\n    <ircc-cl-lib-icon\n      *ngIf=\"config.iconLeading.length > 0\"\n      [config]=\"{ FA_keywords: config.iconLeading }\"\n      [attr.size]=\"config.size\"\n    ></ircc-cl-lib-icon>\n    <h2>{{ config?.label || '' | translate }}</h2>\n  </div>\n  <div class=\"nav-header-content\">\n    <ng-content></ng-content>\n  </div>\n</div>\n","import {\n  Renderer2,\n  Input,\n  SimpleChanges,\n  ChangeDetectorRef,\n  ViewChild,\n  ElementRef\n} from '@angular/core';\nimport { IsActiveMatchOptions } from '@angular/router';\nimport { DSSizes } from '../../../../shared/constants/jl-components.constants';\nimport { Component, OnInit } from '@angular/core';\nimport {\n  INavigationIndicator,\n  INavigationItemHeading,\n  INavigationItemLink\n} from '../navigation.types';\nimport { IIndicatorConfig } from '../../indicator/indicator.component';\nimport { NavigationService } from '../navigation.service';\nimport { Subscription, filter } from 'rxjs';\n\n@Component({\n  selector: 'ircc-cl-lib-nav-item',\n  templateUrl: './nav-item-nav.component.html'\n})\n\n//TODO: Fix class name (NavItemNavComponent)\nexport class navItemNavComponent implements OnInit {\n  @ViewChild('externalLinkA', { static: false }) externalLinkA:\n    | ElementRef\n    | undefined;\n\n  @ViewChild('internalLink', { static: false }) internalLink:\n    | ElementRef\n    | undefined;\n\n  //TODO: Pattern is supposed to be that any elements that may not be used should be OPTIONAL\n  @Input() config: INavigationItemLink = {\n    id: '',\n    href: '',\n    anchor: '',\n    external: false,\n    border: false,\n    label: '',\n    iconLeading: '',\n    iconTrailing: '',\n    type: 'link',\n    children: [],\n    header: false\n  };\n\n  @Input() id: string = '';\n  @Input() size?: keyof typeof DSSizes;\n  @Input() indicator?: INavigationIndicator;\n\n  indicatorConfig: IIndicatorConfig = {\n    category: 'weak',\n    purpose: 'status',\n    type: 'dot',\n    tabIndex: -1\n  };\n\n  headerConfig: INavigationItemHeading = {\n    iconLeading: '',\n    id: 'header_link',\n    label: 'Header Title',\n    type: 'heading',\n    children: []\n  };\n\n  // Check if current url's fragment match\n  fragMatchOptions: IsActiveMatchOptions = {\n      queryParams: 'ignored',\n      matrixParams: 'exact',\n      paths: 'exact',\n      fragment: 'exact'\n  };\n\n  navObjectChangeSub = new Subscription();\n\n  constructor(\n    private renderer: Renderer2,\n    private navEvent: NavigationService,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    //Used entirely as a workaround for the change detection limitations\n    this.navObjectChangeSub = this.navEvent.itemChangeObs$\n      .pipe(filter((item) => item === this.config.id))\n      .subscribe(() => {\n        this.indicatorConfig.status = this.config.indicator?.status;\n        this.indicatorConfig.icon = this.config.indicator?.icon;\n      });\n\n    this.id !== '' ? (this.config.id = this.id) : undefined;\n    if (this.config.indicator) {\n      this.indicatorConfig = {\n        type: 'dot',\n        category: 'weak',\n        purpose: 'status',\n        status: this.config.indicator.status,\n        icon: this.config.indicator.icon,\n        tabIndex: -1\n      };\n      this.config.indicator.label\n        ? (this.indicatorConfig = {\n            ...this.indicatorConfig,\n            type: 'text',\n            label: this.config.indicator.label,\n            tabIndex: -1\n          })\n        : null;\n      this.size\n        ? (this.indicatorConfig = { ...this.indicatorConfig, size: this.size })\n        : null;\n    }\n    this.size !== undefined ? (this.config.size = this.size) : undefined;\n  }\n\n  linkClick(e: Event) {\n    this.navEvent.navEvent({ id: this.config.id, event: e }); //Broadcast the event\n    if (!this.config.external) {\n      setTimeout(() => {\n        if (this.config?.anchor) {\n          const anchorElement = this.renderer.selectRootElement(\n            `#${this.config.anchor}`,\n            true\n          );\n          anchorElement\n            ? anchorElement.scrollIntoView({ behavior: 'smooth' })\n            : null;\n        }\n      }, 0);\n    }\n  }\n\n  enterPress(event: any) {\n    if (this.config.external) {\n      this.externalLinkA?.nativeElement.click();\n    } else {\n      this.internalLink?.nativeElement.click();\n    }\n  }\n}\n","<div\n  [id]=\"config.id\"\n  class=\"lib-nav-item\"\n  [ngClass]=\"config?.border ? 'border-left' : null\"\n  (keydown.enter)=\"enterPress($event)\"\n>\n  <div>\n    <ng-container *ngIf=\"config?.external !== true; else externalLink\">\n      <a\n        [routerLink]=\"config?.href || '' | translate\"\n        [fragment]=\"config?.anchor\"\n        [routerLinkActive]=\"'active-link'\"\n        [routerLinkActiveOptions]=\"fragMatchOptions\"\n        (click)=\"linkClick($event)\"\n        #internalLink\n      >\n        <ircc-cl-lib-icon\n          [attr.size]=\"config.size\"\n          tabindex=\"-1\"\n          *ngIf=\"config?.iconLeading\"\n          class=\"icon-left\"\n          [config]=\"{ FA_keywords: config?.iconLeading || '' }\"\n        ></ircc-cl-lib-icon>\n        <p *ngIf=\"config?.header !== true\">\n          {{ config?.label || '' | translate }}\n        </p>\n        <h2\n          *ngIf=\"config?.header === true\"\n          class=\"h5\"\n        >\n          {{ config?.label || '' | translate }}\n        </h2>\n        <!-- <ircc-cl-lib-nav-header\n          [attr.size]=\"config.size\"\n          [size]=\"config.size\"\n          [label]=\"\"\n          *ngIf=\"config?.header === true\"\n        >\n        </ircc-cl-lib-nav-header> -->\n        <ircc-cl-lib-indicator\n          [attr.size]=\"config.size\"\n          tabindex=\"-1\"\n          *ngIf=\"config?.indicator\"\n          [config]=\"indicatorConfig\"\n        ></ircc-cl-lib-indicator>\n        <ircc-cl-lib-icon\n          [attr.size]=\"config.size\"\n          tabindex=\"-1\"\n          *ngIf=\"config?.iconTrailing\"\n          class=\"icon-trailing\"\n          [config]=\"{ FA_keywords: config?.iconTrailing || '' }\"\n        ></ircc-cl-lib-icon>\n      </a>\n    </ng-container>\n    <ng-template #externalLink>\n      <a\n        #externalLinkA\n        target=\"_blank\"\n        [attr.href]=\"\n          config?.href + (config?.anchor ? '#' + config.anchor : '') || ''\n            | translate\n        \"\n      >\n        <ircc-cl-lib-icon\n          [attr.size]=\"config.size\"\n          tabindex=\"-1\"\n          *ngIf=\"config?.iconLeading\"\n          class=\"icon-left\"\n          [config]=\"{ FA_keywords: config?.iconLeading || '' }\"\n        ></ircc-cl-lib-icon>\n        <p>{{ config?.label || '' | translate }} {{ config.size }}</p>\n        <ircc-cl-lib-indicator\n          [attr.size]=\"config.size\"\n          tabindex=\"-1\"\n          *ngIf=\"config?.indicator\"\n          [config]=\"indicatorConfig\"\n        ></ircc-cl-lib-indicator>\n        <ircc-cl-lib-icon\n          [attr.size]=\"config.size\"\n          tabindex=\"-1\"\n          *ngIf=\"config?.iconTrailing\"\n          class=\"icon-trailing\"\n          [config]=\"{ FA_keywords: config?.iconTrailing || '' }\"\n        ></ircc-cl-lib-icon>\n      </a>\n    </ng-template>\n  </div>\n  <div>\n    <ng-content></ng-content>\n  </div>\n</div>\n","import { EventEmitter, Input, Output } from '@angular/core';\nimport { DSSizes } from '../../../../shared/constants/jl-components.constants';\nimport { Component, OnInit } from '@angular/core';\nimport { INavigationItemAccordion } from '../navigation.types';\nimport { IIconButtonComponentConfig } from '../../icon-button/icon-button.component';\nimport { Subscription, filter } from 'rxjs';\nimport { NavigationService } from '../navigation.service';\n\n@Component({\n  selector: 'ircc-cl-lib-nav-accordion',\n  templateUrl: './nav-item-accordion.component.html'\n})\nexport class navItemAccordionComponent implements OnInit {\n  @Input() config: INavigationItemAccordion = {\n    id: '',\n    open: false,\n    label: '',\n    size: 'small',\n    type: 'accordion',\n    children: [],\n    leftPadding: false,\n    bold: true\n  };\n  @Input() id: string = '';\n  @Input() open: boolean | undefined;\n  @Input() label: string = '';\n  @Input() size: keyof typeof DSSizes | undefined;\n  @Input() iconLeading: string = '';\n  @Input() leftPadding: boolean | undefined;\n  @Input() bold: boolean | undefined;\n\n  headerID: string = '';\n\n  buttonIconOpen: IIconButtonComponentConfig = {\n    id: `${this.config.id}-button`,\n    category: 'custom',\n    size: this.config?.size,\n    icon: {\n      class: 'fa-light fa-arrow-right',\n      color: 'var(--text-primary)'\n    }\n  };\n\n  buttonIconClose: IIconButtonComponentConfig = {\n    id: `${this.config.id}-button`,\n    category: 'custom',\n    size: this.config?.size,\n    icon: {\n      class: 'fa-light fa-arrow-right',\n      color: 'var(--text-primary)'\n    }\n  };\n\n  navObjectChangeSub = new Subscription();\n\n  constructor(private navEvent: NavigationService) {}\n\n  ngOnInit() {\n    // this.navObjectChangeSub = this.navEvent.navObjectChangeObs$.pipe(\n    //   filter(item => (item.id === this.config.id && item.type === 'accordion'))).subscribe(response => {\n    //     this.config = response as NavigationItemAccordion;\n    //   });\n\n    this.id !== '' ? (this.config.id = this.id) : undefined;\n    this.open !== undefined ? (this.config.open = this.open) : undefined;\n    this.bold !== undefined ? (this.config.bold = this.bold) : undefined;\n\n    if (this.config?.bold != true && this.config?.bold != false) {\n      this.config.bold = true;\n    }\n\n    this.leftPadding !== undefined\n      ? (this.config.leftPadding = this.leftPadding)\n      : undefined;\n\n\n    this.label !== '' ? (this.config.label = this.label) : undefined;\n    this.size !== undefined ? (this.config.size = this.size) : undefined;\n    this.iconLeading !== ''\n      ? (this.config.iconLeading = this.iconLeading)\n      : undefined;\n\n    this.headerID = `${this.config.id}_header`;\n    this.buttonIconOpen = {\n      id: `${this.config.id}_button_open`,\n      category: 'custom',\n      size: this.config?.size,\n      icon: {\n        class: 'fa-light fa-chevron-up',\n        color: 'var(--text-primary)'\n      }\n    };\n\n    this.buttonIconClose = {\n      id: `${this.config.id}_button_close`,\n      category: 'custom',\n      size: this.config?.size,\n      icon: {\n        class: 'fa-light fa-chevron-down',\n        color: 'var(--text-primary)'\n      }\n    };\n  }\n\n  openAccordion(event: any) {\n    this.config.open = !this.config.open;\n    this.navEvent.navEvent({ id: this.config.id, event: event });\n  }\n\n  enterPress(event: any) {\n    this.config.open = !this.config.open;\n  }\n}\n","<div\n  [id]=\"config.id\"\n  class=\"lib-nav-item\"\n>\n  <div class=\"accordion-panel\">\n    <div\n      class=\"accordion-nav\"\n      (keydown.enter)=\"enterPress($event)\"\n    >\n      <ircc-cl-lib-nav-header\n        [id]=\"headerID\"\n        [attr.size]=\"config.size\"\n        [size]=\"config.size\"\n        [label]=\"config?.label || ''\"\n        [iconLeading]=\"config?.iconLeading || ''\"\n        [leftPadding]=\"config?.leftPadding\"\n        [bold]=\"config?.bold\"\n      >\n      </ircc-cl-lib-nav-header>\n\n      <ircc-cl-lib-icon-button\n        *ngIf=\"config.open === true\"\n        (clickEvent)=\"openAccordion($event)\"\n        [config]=\"buttonIconOpen\"\n        [attr.size]=\"config.size\"\n        class=\"open\"\n      ></ircc-cl-lib-icon-button>\n      <ircc-cl-lib-icon-button\n        *ngIf=\"config.open === false\"\n        (clickEvent)=\"openAccordion($event)\"\n        [attr.size]=\"config.size\"\n        [config]=\"buttonIconClose\"\n        class=\"close\"\n      ></ircc-cl-lib-icon-button>\n    </div>\n    <div\n      [class]=\"\n        config.open ? 'open accordion-content' : 'close accordion-content'\n      \"\n    >\n      <ng-content></ng-content>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { INavigationDivider } from '../navigation.types';\n\n@Component({\n  selector: 'ircc-cl-lib-nav-divider',\n  templateUrl: './nav-item-divider.component.html'\n})\nexport class navItemDividerComponent implements OnInit {\n  @Input() config: INavigationDivider = {\n    id: '',\n    children: [],\n    label: '',\n    type: 'link'\n  };\n\n  @Input() id: string = '';\n\n  constructor() {}\n\n  ngOnInit() {\n    this.id !== '' ? (this.config.id = this.id) : undefined;\n  }\n}\n","<div\n  [id]=\"config.id\"\n  class=\"nav-seperator\"\n></div>\n","import {\n  AfterViewInit,\n  ElementRef,\n  HostListener,\n  Input,\n  OnChanges,\n  Renderer2,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport { INavigationItem, INavigationConfig } from './navigation.types';\nimport { Subscription } from 'rxjs';\nimport { NavigationService } from './navigation.service';\n\n@Component({\n  selector: 'ircc-cl-lib-navigation',\n  templateUrl: './navigation.component.html'\n})\nexport class navigationComponent implements OnInit, AfterViewInit {\n  @ViewChild('navigationHeader', { static: false }) navigationHeader:\n    | ElementRef\n    | undefined;\n\n  @ViewChild('navigationContentTop', { static: false }) navigationContentTop:\n    | ElementRef\n    | undefined;\n\n  @ViewChild('navigationContentBottom', { static: false })\n  navigationContentBottom: ElementRef | undefined;\n\n  @ViewChild('navigationArea', { static: false })\n  navigationArea: ElementRef | undefined;\n\n  @ViewChild('navigationAreaScroll', { static: false })\n  navigationAreaScroll: ElementRef | undefined;\n\n  @ViewChild('navigation', { static: false })\n  navigation: ElementRef | undefined;\n\n  @Input() id: string = '';\n  @Input() label: string = '';\n  @Input() iconLeading: string = '';\n  @Input() iconTrailing: string = '';\n  @Input() size: keyof typeof DSSizes | undefined;\n  //TODO: NavigationItem and all other interfaces must be renamed starting with 'I'\n  @Input() navigationConfig: Array<INavigationItem> = [];\n\n  flattenNavigation: Array<INavigationItem> = [];\n  config: INavigationConfig = {\n    id: '',\n    label: '',\n    iconLeading: '',\n    iconTrailing: '',\n    size: 'small',\n    navigationConfig: [],\n    scrolling: false,\n    height: '75vh',\n    marginTop: 0,\n    childrenPadding: true\n  };\n  configSub?: Subscription;\n  scrollTimeout: any;\n  wrapperTop?: number; // Relative height from top of nav to top of page in px\n  wrapperWidth?: number; // Width of wrapper in px\n  wrapperFixed: boolean = false;\n\n  listenerScroll = () => {};\n  listenerResize = () => {};\n  constructor(\n    private navService: NavigationService,\n    private renderer: Renderer2,\n    private el: ElementRef\n  ) {}\n\n  ngOnInit() {\n    this.configSub = this.navService.navConfigObs$.subscribe((response) => {\n      this.config = response;\n      if (\n        this.config?.childrenPadding != true &&\n        this.config?.childrenPadding != false\n      ) {\n        this.config.childrenPadding = true;\n      }\n    });\n    // Record relative height from top of page for sidenav\n    this.wrapperTop = this.el.nativeElement?.getBoundingClientRect().top;\n  }\n\n  getPaddingChildrenPadding(index: number): string {\n    let classes = '';\n\n    if (this.config?.childrenPadding === true) {\n      classes += 'indent-' + index;\n    }\n\n    return classes;\n  }\n\n  isArray = (obj: any) => {\n    return Array.isArray(obj);\n  };\n\n  arrayOfObject = (obj: any) => {\n    return Object.keys(obj);\n  };\n\n  getIconsStatus = () => {\n    return (\n      this.config &&\n      (this.config?.iconLeading || '').length > 0 &&\n      (this.config?.iconTrailing || '').length > 0\n    );\n  };\n\n  //These are in THIS component, not in it's own. I.e. the buttons in the actual\n  //header are not in a child component.\n  clickIconLeading = (event: any) => {\n    this.navService.navEvent({ id: this.config.id, event: event });\n  };\n  clickIconTrailing = (event: any) => {\n    this.navService.navEvent({ id: this.config.id, event: event });\n  };\n\n  navigationClass = (): string => {\n    if (\n      ((this.config?.iconLeading?.length || ''.length > 0) &&\n        this.config?.iconTrailing?.length) ||\n      ''.length > 0\n    ) {\n      return 'header-full';\n    } else if (this.config?.iconLeading?.length || ''.length > 0) {\n      return 'header-iconleading';\n    } else if (this.config?.iconTrailing?.length || ''.length > 0) {\n      return 'header-icontrailing';\n    }\n\n    return '';\n  };\n\n  ngAfterViewInit() {\n    this.wrapperWidth = this.el.nativeElement.parentElement.offsetWidth;\n    if (this.config.scrolling === true) {\n      this.getHeight();\n      this.renderer.listen('window', 'resize', () => {\n        this.getHeight();\n        setTimeout(() => {\n          // Update element width upon window resize\n          this.wrapperWidth = this.el.nativeElement.parentElement.offsetWidth;\n        });\n      });\n    }\n    if (this.config.fixed) {\n      this.renderer.listen('window', 'scroll', () => {\n        // Check if navigation top has hit top of viewport\n        if (this.wrapperTop) {\n          this.wrapperFixed = this.wrapperTop < window.scrollY;\n        }\n      });\n    }\n  }\n\n  getHeight = () => {\n    this.listenerScroll();\n    this.listenerResize();\n\n    if (this.complicatedMaths() === true) {\n      this.disableStickyNav();\n      this.setScrollableNavigationArea();\n\n      this.listenerResize = this.renderer.listen('window', 'resize', () => {\n        this.setScrollableNavigationArea();\n      });\n    } else if (this.complicatedMaths() === false) {\n      this.disableSetScrollableNavigationArea();\n      this.setStickyNav();\n      this.listenerScroll = this.renderer.listen('window', 'scroll', () => {\n        this.scrolling();\n      });\n    }\n  };\n\n  scrolling = (): void => {\n    if (this.scrollTimeout) {\n      clearTimeout(this.scrollTimeout);\n    }\n    this.scrollTimeout = setTimeout(\n      (() => {\n        this.setStickyNav();\n      }).bind(this),\n      50\n    );\n  };\n\n  setStickyNav = () => {\n    if (\n      window.pageYOffset > this.navigationHeader?.nativeElement.offsetHeight\n    ) {\n      this.renderer.addClass(\n        this.navigationHeader?.nativeElement,\n        'position-fixed'\n      );\n      this.renderer.setStyle(\n        this.navigationHeader?.nativeElement,\n        'top',\n        `${this.config?.marginTop}px`\n      );\n\n      this.renderer.setStyle(\n        this.navigationAreaScroll?.nativeElement,\n        'margin-top',\n        this.navigationHeader?.nativeElement.offsetHeight +\n          this.config?.marginTop +\n          'px'\n      );\n    } else {\n      this.renderer.removeClass(\n        this.navigationHeader?.nativeElement,\n        'position-fixed'\n      );\n      this.renderer.removeStyle(this.navigationHeader?.nativeElement, 'top');\n      this.renderer.removeStyle(\n        this.navigationAreaScroll?.nativeElement,\n        'margin-top'\n      );\n    }\n  };\n\n  disableStickyNav = () => {\n    this.renderer.removeClass(\n      this.navigationHeader?.nativeElement,\n      'position-fixed'\n    );\n    this.renderer.removeStyle(this.navigationHeader?.nativeElement, 'top');\n    this.renderer.removeStyle(\n      this.navigationAreaScroll?.nativeElement,\n      'margin-top'\n    );\n    this.renderer.removeStyle(this.navigationArea?.nativeElement, 'height');\n  };\n\n  complicatedMaths = (): boolean => {\n    let windowheight = window.innerHeight;\n\n    let usableHeight =\n      windowheight -\n      (this.navigationHeader?.nativeElement.offsetHeight +\n        this.navigationContentTop?.nativeElement.offsetHeight +\n        this.navigationContentBottom?.nativeElement.offsetHeight);\n\n    return usableHeight > windowheight / 2 ? true : false;\n  };\n\n  setScrollableNavigationArea = () => {\n    this.renderer.setStyle(\n      this.navigation?.nativeElement,\n      'height',\n      this.config.height\n    );\n\n    this.renderer.setStyle(\n      this.navigation?.nativeElement,\n      'overflow-y',\n      'auto'\n    );\n    this.renderer.setStyle(\n      this.navigation?.nativeElement,\n      'overflow-x',\n      'clip'\n    );\n  };\n\n  disableSetScrollableNavigationArea = () => {\n    this.renderer.removeStyle(this.navigation?.nativeElement, 'height');\n    this.renderer.removeStyle(this.navigation?.nativeElement, 'overflow-y');\n    this.renderer.removeStyle(this.navigation?.nativeElement, 'overflow-x');\n  };\n\n  setIndex = (index: number): number => {\n    return (index += 1);\n  };\n}\n","<div\n  [id]=\"config.id\"\n  [attr.size]=\"config.size\"\n  class=\"lib-navigation\"\n  [ngClass]=\"{ fixed: config.fixed && wrapperFixed }\"\n  [style.max-width]=\"\n    wrapperFixed && wrapperWidth && wrapperWidth > 0\n      ? wrapperWidth + 'px'\n      : 'none'\n  \"\n  #navigation\n>\n  <div\n    class=\"navigation-header\"\n    [class]=\"navigationClass()\"\n    #navigationHeader\n  >\n    <ircc-cl-lib-icon\n      class=\"icon-leading\"\n      [config]=\"{ FA_keywords: config?.iconLeading || '' }\"\n      (click)=\"clickIconLeading(config.id + '_icon_leading')\"\n      [attr.size]=\"config.size\"\n    ></ircc-cl-lib-icon>\n    <ng-container *ngIf=\"config?.label\">\n      <h3>{{ config?.label || '' | translate }}</h3>\n    </ng-container>\n    <ircc-cl-lib-icon\n      [id]=\"config.id + '_icon_trailing'\"\n      class=\"icon-trailing\"\n      [attr.size]=\"config.size\"\n      [config]=\"{ FA_keywords: config?.iconTrailing || '' }\"\n      (click)=\"clickIconTrailing(config.id + '_icon_trailing')\"\n    ></ircc-cl-lib-icon>\n  </div>\n\n  <div #navigationAreaScroll>\n    <!-- ignore-->\n    <!-- prettier-ignore -->\n    <div class=\"navigation-content-top\" #navigationContentTop ><ng-content select=\"[navigationContentTop]\"></ng-content></div>\n\n    <!-- TODO: Document this like crazy - recursive templating is cool, but EXTREMELY unusual -->\n    <div\n      class=\"navigation-area\"\n      #navigationArea\n    >\n      <ul class=\"parent-navigation\">\n        <ng-container\n          *ngTemplateOutlet=\"\n            recursiveListTmpl;\n            context: { list: this.config.navigationConfig, index: 0 }\n          \"\n        ></ng-container>\n      </ul>\n    </div>\n\n    <ng-template\n      #recursiveListTmpl\n      let-list=\"list\"\n      let-index=\"index\"\n    >\n      <li *ngFor=\"let item of list\">\n        <ng-container [ngSwitch]=\"item.type\">\n          <!--Type Heading-->\n          <ng-container *ngSwitchCase=\"'heading'\"\n            ><ircc-cl-lib-nav-header\n              [attr.size]=\"config.size\"\n              [size]=\"config.size\"\n              [config]=\"item\"\n            >\n              <ul\n                *ngIf=\"item.children.length > 0\"\n                class=\"child-navigation\"\n                [class]=\"getPaddingChildrenPadding(index)\"\n              >\n                <ng-container\n                  *ngTemplateOutlet=\"\n                    recursiveListTmpl;\n                    context: { list: item.children, index: setIndex(index) }\n                  \"\n                ></ng-container></ul></ircc-cl-lib-nav-header\n          ></ng-container>\n\n          <!--Type Link-->\n          <ng-container *ngSwitchCase=\"'link'\">\n            <ircc-cl-lib-nav-item\n              [attr.size]=\"config.size\"\n              [size]=\"config.size\"\n              [config]=\"item\"\n            >\n              <ul\n                *ngIf=\"item.children.length > 0\"\n                class=\"child-navigation\"\n                [class]=\"getPaddingChildrenPadding(index)\"\n              >\n                <ng-container\n                  *ngTemplateOutlet=\"\n                    recursiveListTmpl;\n                    context: { list: item.children, index: setIndex(index) }\n                  \"\n                ></ng-container></ul></ircc-cl-lib-nav-item\n          ></ng-container>\n\n          <!--Type Accordion-->\n          <ng-container *ngSwitchCase=\"'accordion'\">\n            <ircc-cl-lib-nav-accordion\n              [attr.size]=\"config.size\"\n              [size]=\"config.size\"\n              [config]=\"item\"\n            >\n              <ul\n                *ngIf=\"item.children.length > 0\"\n                class=\"child-navigation\"\n                [class]=\"getPaddingChildrenPadding(index)\"\n              >\n                <ng-container\n                  *ngTemplateOutlet=\"\n                    recursiveListTmpl;\n                    context: { list: item.children, index: setIndex(index) }\n                  \"\n                ></ng-container></ul\n            ></ircc-cl-lib-nav-accordion>\n          </ng-container>\n\n          <ng-container *ngSwitchCase=\"'divider'\">\n            <ircc-cl-lib-nav-divider\n              [attr.size]=\"config.size\"\n              [config]=\"item\"\n            >\n              <ul\n                *ngIf=\"item.children.length > 0\"\n                class=\"child-navigation\"\n                [class]=\"getPaddingChildrenPadding(index)\"\n              >\n                <ng-container\n                  *ngTemplateOutlet=\"\n                    recursiveListTmpl;\n                    context: { list: item.children, index: setIndex(index) }\n                  \"\n                ></ng-container></ul\n            ></ircc-cl-lib-nav-divider>\n          </ng-container>\n        </ng-container>\n      </li>\n    </ng-template>\n\n    <!-- prettier-ignore -->\n    <div class=\"navigation-content-bottom\" #navigationContentBottom><ng-content select=\"[navigationContentBottom]\"></ng-content></div>\n  </div>\n</div>\n","import { EventEmitter, Input, Output } from '@angular/core';\nimport { DSSizes } from '../../../../shared/constants/jl-components.constants';\nimport { Component, OnInit } from '@angular/core';\nimport { NavigationStatus } from '../navigation.types';\n\n@Component({\n  selector: 'ircc-cl-lib-nav-item-status',\n  templateUrl: './nav-item-status.component.html'\n})\nexport class navItemStatusComponent implements OnInit {\n\n  @Input() status : keyof typeof NavigationStatus = 'notStarted';\n\n  ngOnInit() {\n\n  }\n}\n","<div>\n  <ng-container [ngSwitch]=\"status\">\n    <ng-container *ngSwitchCase=\"'notStarted'\">\n      <ircc-cl-lib-indicator></ircc-cl-lib-indicator>\n    </ng-container>\n  </ng-container>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IrccDsAngularComponentsSharedModule } from '../../shared/ircc-ds-angular-component-shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { navigationComponent } from './navigation.component';\nimport { navItemHeadingComponent } from './nav-item-heading/nav-item-heading.component';\nimport { navItemNavComponent } from './nav-item-nav/nav-item-nav.component';\nimport { navItemAccordionComponent } from './nav-item-accordion/nav-item-accordion.component';\nimport { navItemStatusComponent } from './nav-item-status/nav-item-status.component';\nimport { navItemDividerComponent } from './nav-item-divider/nav-item-divider.component';\n\nconst IrccDsNavigationComponents = [\n  navigationComponent,\n  navItemHeadingComponent,\n  navItemNavComponent,\n  navItemAccordionComponent,\n  navItemDividerComponent,\n  navItemStatusComponent\n];\n\n@NgModule({\n  declarations: [...IrccDsNavigationComponents],\n  imports: [CommonModule, IrccDsAngularComponentsSharedModule, TranslateModule],\n  exports: [...IrccDsNavigationComponents]\n})\nexport class IrccDsAngularNavigationModule {}\n","import { DSSizes } from '../../../shared/constants/jl-components.constants';\nimport {\n  IndicatorStatus,\n  IndicatorType\n} from '../indicator/indicator.component';\n\nexport interface INavigationConfig {\n  id: string;\n  label?: string;\n  iconLeading?: string;\n  iconTrailing?: string;\n  size: keyof typeof DSSizes;\n  height: string;\n  marginTop: number;\n  scrolling: boolean;\n  fixed?: boolean;\n  childrenPadding?: boolean;\n  navigationConfig?: Array<INavigationItem>;\n}\n\nexport enum NavigationItemType {\n  accordion = 'accordion',\n  heading = 'heading',\n  link = 'link',\n  divider = 'divider'\n}\n\nexport enum NavigationStatus {\n  notStarted = 'notStarted',\n  inProgress = 'inProgress',\n  complete = 'complete',\n  locked = 'locked'\n}\n\nexport interface INavigationIndicator {\n  status: keyof typeof IndicatorStatus;\n  icon: string;\n  label?: string;\n}\n\nexport interface INavigationItem {\n  id: string;\n  label: string;\n  type: keyof typeof NavigationItemType;\n  size?: keyof typeof DSSizes;\n  children: INavigationItem[];\n  indicator?: INavigationIndicator;\n  border?: boolean;\n}\n\nexport interface INavigationItemAccordion extends INavigationItem {\n  open: boolean;\n  iconLeading?: string;\n  leftPadding?: boolean;\n  bold?: boolean;\n}\n\nexport interface INavigationItemLink extends INavigationItem {\n  iconLeading?: string;\n  iconTrailing?: string;\n  href: string;\n  external?: boolean;\n  anchor?: string;\n  header?: boolean;\n  indicator?: INavigationIndicator;\n}\n\nexport interface INavigationItemHeading extends INavigationItem {\n  iconLeading: string;\n  leftPadding?: boolean;\n  bold?: boolean;\n}\n\nexport interface INavigationDivider extends INavigationItem {}\n","/*\n * Public API Surface of ircc-ds-angular-component-library\n */\n\n/** Non-Components - Shared **/\nexport * from './shared/functions/stand-alone.functions';\nexport * from './shared/interfaces/component-configs';\nexport * from './shared/constants/jl-components.constants';\nexport * from './shared/pipes/autocomplete.pipe';\n\n/** Banner Component **/\nexport * from './lib/banner-component/ircc-ds-angular-banner.module';\nexport * from './lib/banner-component/banner/banner.component';\nexport * from './lib/banner-component/banner/banner.service';\n\n/** Form Input Components **/\nexport * from './lib/form-components/ircc-ds-angular-form-components.module';\nexport * from './lib/form-components/checkbox/checkbox.component';\nexport * from './lib/form-components/error/error.component';\nexport * from './lib/form-components/input/input.component';\nexport * from './lib/form-components/radio-input/radio-input.component';\nexport * from './lib/form-components/date-picker/date-picker.component';\nexport * from './lib/form-components/textarea/textarea.component';\nexport * from './lib/form-components/select/select.component';\nexport * from './lib/form-components/multi-checkbox/multi-checkbox.component';\nexport * from './lib/form-components/multi-checkbox/multi-checkbox.service';\nexport * from './lib/form-components/autocomplete/autocomplete.component';\n\n/** Header/Footer Components **/\nexport * from './lib/header-footer/ircc-ds-angular-header-footer.module';\nexport * from './lib/header-footer/footer/footer.component';\nexport * from './lib/header-footer/header/header.component';\nexport * from './lib/header-footer/language-switch/language-switch.component';\nexport * from './lib/header-footer/language-switch/language-header-footer-switch.service';\nexport * from './lib/header-footer/hidden-nav/hidden-nav.component';\nexport * from './lib/header-footer/theme-switch/theme-switch.component';\n\n/** Legacy/Old Components **/\nexport * from './lib/legacy-old/ircc-ds-angular-legacy-old.module';\nexport * from './lib/legacy-old/autocomplete/autocomplete.component';\nexport * from './lib/legacy-old/chips/chip-item/chip-item.component';\nexport * from './lib/legacy-old/chips/chip-list/chip-list.component';\nexport * from './lib/legacy-old/chips/secondary-chips/secondary-chips.component';\nexport * from './lib/legacy-old/search-input/search-input.component';\n\n/** Shared Components **/\nexport * from './lib/shared/ircc-ds-angular-component-shared.module';\nexport * from './lib/shared/button/button.component';\nexport * from './lib/shared/icon/icon.component';\nexport * from './lib/shared/icon-button/icon-button.component';\nexport * from './lib/shared/indicator/indicator.component';\nexport * from './lib/shared/tabs/tabs.component';\nexport * from './lib/shared/label/label.component';\nexport * from './lib/shared/progress-tags/progress-tags.component';\nexport * from './lib/shared/progress-indicator/progress-indicator.component';\nexport * from './lib/shared/dropdown/drop-down.component';\nexport * from './lib/shared/label/label-button.service';\nexport * from './lib/shared/breadcrumb/breadcrumb.component';\nexport * from './lib/shared/breadcrumb/link/link.component';\nexport * from './lib/shared/spinner/spinner.component';\nexport * from './lib/shared/flyout/flyout.component';\nexport * from './lib/shared/flyout-option/flyout-option.component';\nexport * from './lib/shared/dynamic-image/dynamic-image.component';\n\n\n/** Navigation Components */\nexport * from './lib/shared/navigation/ircc-ds-angular-navigation.module';\nexport * from './lib/shared/navigation/navigation.component';\nexport * from './lib/shared/navigation/nav-item-heading/nav-item-heading.component';\nexport * from './lib/shared/navigation/nav-item-nav/nav-item-nav.component';\nexport * from './lib/shared/navigation/nav-item-accordion/nav-item-accordion.component';\nexport * from './lib/shared/navigation/nav-item-status/nav-item-status.component';\nexport * from './lib/shared/navigation/nav-item-divider/nav-item-divider.component';\nexport * from './lib/shared/navigation/navigation.types';\nexport * from './lib/shared/navigation/navigation.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2.IconComponent","i1.IconComponent","i1.BannerService","i4.ButtonComponent","i5.IconButtonComponent","i6","i2.ButtonComponent","i3","i5.FlyoutOptionComponent","i6.autocompletePipe","i3.IconComponent","i4.FlyoutComponent","i2.StandAloneFunctions","i3.LabelButtonService","i4","i3.ProgressTagsComponent","i2","i4.BreadcrumbLinkComponent","i5.IconComponent","i6.IconButtonComponent","i7.DomChangeDirective","IrccDsSharedComponents","ExperimentalScrollingModule","i1.StandAloneFunctions","i4.IconButtonComponent","i5.LabelComponent","i7.ErrorComponent","i4.LabelComponent","i6.ErrorComponent","i3.MultiCheckboxService","i5.ErrorComponent","i6.SelectComponent","i1.MultiCheckboxService","i5.CheckboxComponent","i7","i3.FlyoutComponent","i4.InputComponent","i1.LanguageHeaderFooterSwitchService","i2.LanguageHeaderFooterSwitchService","i4.LanguageSwitchComponent","i5.ThemeSwitchComponent","i2.ChipItemComponent","i3.ChipItemComponent","i1.NavigationService","i4.IconComponent","i5.IndicatorComponent","i3.IconButtonComponent","i4.navItemHeadingComponent","i5.navItemNavComponent","i6.navItemAccordionComponent","i7.navItemDividerComponent","i8","i2.IndicatorComponent"],"mappings":"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"}