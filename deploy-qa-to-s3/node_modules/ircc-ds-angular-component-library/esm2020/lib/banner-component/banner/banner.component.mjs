import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./banner.service";
import * as i2 from "@angular/common";
import * as i3 from "@angular/router";
import * as i4 from "../../shared/button/button.component";
import * as i5 from "../../shared/icon-button/icon-button.component";
import * as i6 from "@ngx-translate/core";
export var BannerType;
(function (BannerType) {
    BannerType[""] = "";
    BannerType["generic"] = "generic";
    BannerType["info"] = "info";
    BannerType["critical"] = "critical";
    BannerType["success"] = "success";
    BannerType["warning"] = "warning";
})(BannerType || (BannerType = {}));
export var BannerSize;
(function (BannerSize) {
    BannerSize["large"] = "large";
    BannerSize["small"] = "small";
})(BannerSize || (BannerSize = {}));
export var CTAType;
(function (CTAType) {
    CTAType["link"] = "link";
    CTAType["button"] = "button";
})(CTAType || (CTAType = {}));
export class BannerComponent {
    constructor(bannerService, renderer) {
        this.bannerService = bannerService;
        this.renderer = renderer;
        this.lineVisible = true;
        this.textId = '';
        this.config = {
            id: ''
        };
        this.btnEvent = new EventEmitter();
        this.iconConfig = {
            id: '',
            category: 'custom',
            icon: {
                class: 'fa-solid fa-xmark',
                color: 'var(--text-primary)'
            }
        };
    }
    eventHandler(emitValue) {
        if (this.config?.id) {
            this.bannerService.toggleBanner(this.config.id, false);
        }
    }
    toggleLine() {
        let containerHeight = document.getElementById(this.textId)?.offsetHeight;
        let el = document.querySelector(`#${this.config?.id} .banner-line`);
        let ctas = document.querySelector(`#${this.config?.id} .banner-ctas`);
        if ((containerHeight && el && containerHeight > 35) ||
            (el && containerHeight && containerHeight > 23 && ctas)) {
            el.style.display = 'block';
        }
        else if (el) {
            el.style.display = 'none';
        }
    }
    ngOnInit() {
        //set config from individual options, if present
        if (this.id)
            this.config.id = this.id;
        if (this.title)
            this.config.title = this.title;
        if (this.content)
            this.config.content = this.content;
        if (this.type)
            this.config.type = this.type;
        if (this.rounded)
            this.config.rounded = this.rounded;
        if (this.dismissible)
            this.config.dismissible = this.dismissible;
        if (this.cta)
            this.config.cta = this.cta;
        if (this.size)
            this.config.size = this.size;
        if (this.ariaDissmissible)
            this.config.ariaDissmissible = this.ariaDissmissible;
        this.iconConfig.id = this.config?.id + '_closeBtn';
        this.textId = this.config?.id + '_text';
        if (this.config?.cta) {
            this.config?.cta.forEach((item) => {
                if (item.ariaLabel && item.btnConfig)
                    item.btnConfig.ariaLabel = item.ariaLabel;
            });
        }
        if (!this.config.ariaDissmissible || this.config.ariaDissmissible === '') {
            if (this.config.dismissible) {
                this.config.ariaDissmissible = 'close';
            }
        }
        this.configSub = this.bannerService.bannerSubjObs$.subscribe((response) => {
            if (this.config.id === response.id) {
                this.config = response;
            }
        });
        this.configSubToggle = this.bannerService.toggleSubjObs$.subscribe((response) => {
            if (this.config.id === response.id) {
                this.toggleVisible(response.value);
            }
        });
    }
    toggleVisible(value) {
        if (this.banner?.nativeElement) {
            if (value === false) {
                this.renderer.addClass(this.banner.nativeElement, 'bannerDismissed');
                this.btnEvent?.emit(this.config.id);
                setTimeout(() => {
                    if (this.banner?.nativeElement) {
                        this.renderer.removeClass(this.banner.nativeElement, 'bannerDismissed');
                        this.renderer.addClass(this.banner.nativeElement, 'noDisplay');
                    }
                }, 700);
            }
            else {
                this.renderer.removeClass(this.banner.nativeElement, 'bannerDismissed');
                this.renderer.removeClass(this.banner.nativeElement, 'noDisplay');
            }
        }
    }
    ngAfterViewInit() {
        this.toggleLine();
    }
    ngAfterViewChecked() {
        this.toggleLine();
    }
}
BannerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: BannerComponent, deps: [{ token: i1.BannerService }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });
BannerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: BannerComponent, selector: "ircc-cl-lib-banner", inputs: { config: "config", id: "id", title: "title", content: "content", type: "type", rounded: "rounded", dismissible: "dismissible", cta: "cta", size: "size", ariaDissmissible: "ariaDissmissible" }, outputs: { btnEvent: "btnEvent" }, viewQueries: [{ propertyName: "banner", first: true, predicate: ["banner"], descendants: true }], ngImport: i0, template: "<div\n  (window:resize)=\"toggleLine()\"\n  class=\"banner-component\"\n  class=\"{{ config?.size }}\"\n  id=\"{{ config?.id }}\"\n  #banner\n  [ngClass]=\"{\n    rounded: config?.rounded,\n    information: config?.type === 'info',\n    success: config?.type === 'success',\n    warning: config?.type === 'warning',\n    critical: config?.type === 'critical'\n  }\"\n>\n  <div class=\"banner-container\">\n    <div\n      class=\"banner-left\"\n      *ngIf=\"config?.type !== 'generic' && config?.type\"\n    >\n      <ng-container [ngSwitch]=\"config?.type\">\n        <div *ngSwitchCase=\"'critical'\">\n          <i class=\"fa-circle-exclamation fa-light banner-icon\"></i>\n        </div>\n        <div *ngSwitchCase=\"'success'\">\n          <i class=\"fa-circle-check fa-light banner-icon\"></i>\n        </div>\n        <div *ngSwitchCase=\"'info'\">\n          <i class=\"fa-circle-info fa-light banner-icon\"></i>\n        </div>\n        <div *ngSwitchCase=\"'warning'\">\n          <i class=\"fa-triangle-exclamation fa-light banner-icon\"></i>\n        </div>\n      </ng-container>\n      <div\n        class=\"banner-line\"\n        [ngClass]=\"{ hidden: !lineVisible }\"\n      ></div>\n    </div>\n    <div class=\"banner-right\">\n      <div class=\"banner-body\">\n        <div\n          class=\"banner-text\"\n          id=\"{{ textId }}\"\n        >\n          <div\n            class=\"banner-title h6 emphasis\"\n            *ngIf=\"config?.title\"\n          >\n            {{ config?.title || '' | translate }}\n          </div>\n          <div\n            class=\"banner-content\"\n            [innerHTML]=\"config?.content || '' | translate\"\n            *ngIf=\"config?.content\"\n          ></div>\n        </div>\n      </div>\n      <div\n        class=\"banner-ctas\"\n        *ngIf=\"config?.cta\"\n      >\n        <ng-container *ngFor=\"let cta of config?.cta; let index = index\">\n          <ircc-cl-lib-button\n            *ngIf=\"cta?.type === 'button'\"\n            [id]=\"'cta_' + index\"\n            [category]=\"cta?.btnConfig?.category\"\n            [color]=\"cta?.btnConfig?.color\"\n            [size]=\"config.size\"\n            [ariaLabel]=\"cta?.btnConfig?.ariaLabel\"\n            [disabled]=\"cta?.btnConfig?.disabled\"\n            [icon]=\"cta?.btnConfig?.icon\"\n            [iconDirection]=\"cta?.btnConfig?.iconDirection\"\n            >{{ cta.text | translate }}</ircc-cl-lib-button\n          >\n          <a\n            class=\"cta-link\"\n            *ngIf=\"cta?.type === 'link'\"\n            [routerLink]=\"cta?.linkConfig | translate\"\n            [attr.aria-label]=\"cta?.ariaLabel\"\n            >{{ cta.text | translate }}</a\n          >\n        </ng-container>\n      </div>\n    </div>\n  </div>\n  <div class=\"banner-btn\">\n    <ircc-cl-lib-icon-button\n      [ariaLabel]=\"config?.ariaDissmissible || '' | translate\"\n      size=\"extraSmall\"\n      class=\"banner-close\"\n      *ngIf=\"config?.dismissible\"\n      [config]=\"iconConfig\"\n      (clickEvent)=\"eventHandler($event)\"\n    ></ircc-cl-lib-icon-button>\n  </div>\n</div>\n", dependencies: [{ kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: i2.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "directive", type: i3.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "component", type: i4.ButtonComponent, selector: "ircc-cl-lib-button", inputs: ["config", "id", "category", "size", "color", "ariaLabel", "disabled", "icon", "iconDirection", "tabIndex", "fill"], outputs: ["btnAction"] }, { kind: "component", type: i5.IconButtonComponent, selector: "ircc-cl-lib-icon-button", inputs: ["config", "id", "category", "size", "ariaLabel", "disabled", "icon"], outputs: ["clickEvent"] }, { kind: "pipe", type: i6.TranslatePipe, name: "translate" }], preserveWhitespaces: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: BannerComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ircc-cl-lib-banner', template: "<div\n  (window:resize)=\"toggleLine()\"\n  class=\"banner-component\"\n  class=\"{{ config?.size }}\"\n  id=\"{{ config?.id }}\"\n  #banner\n  [ngClass]=\"{\n    rounded: config?.rounded,\n    information: config?.type === 'info',\n    success: config?.type === 'success',\n    warning: config?.type === 'warning',\n    critical: config?.type === 'critical'\n  }\"\n>\n  <div class=\"banner-container\">\n    <div\n      class=\"banner-left\"\n      *ngIf=\"config?.type !== 'generic' && config?.type\"\n    >\n      <ng-container [ngSwitch]=\"config?.type\">\n        <div *ngSwitchCase=\"'critical'\">\n          <i class=\"fa-circle-exclamation fa-light banner-icon\"></i>\n        </div>\n        <div *ngSwitchCase=\"'success'\">\n          <i class=\"fa-circle-check fa-light banner-icon\"></i>\n        </div>\n        <div *ngSwitchCase=\"'info'\">\n          <i class=\"fa-circle-info fa-light banner-icon\"></i>\n        </div>\n        <div *ngSwitchCase=\"'warning'\">\n          <i class=\"fa-triangle-exclamation fa-light banner-icon\"></i>\n        </div>\n      </ng-container>\n      <div\n        class=\"banner-line\"\n        [ngClass]=\"{ hidden: !lineVisible }\"\n      ></div>\n    </div>\n    <div class=\"banner-right\">\n      <div class=\"banner-body\">\n        <div\n          class=\"banner-text\"\n          id=\"{{ textId }}\"\n        >\n          <div\n            class=\"banner-title h6 emphasis\"\n            *ngIf=\"config?.title\"\n          >\n            {{ config?.title || '' | translate }}\n          </div>\n          <div\n            class=\"banner-content\"\n            [innerHTML]=\"config?.content || '' | translate\"\n            *ngIf=\"config?.content\"\n          ></div>\n        </div>\n      </div>\n      <div\n        class=\"banner-ctas\"\n        *ngIf=\"config?.cta\"\n      >\n        <ng-container *ngFor=\"let cta of config?.cta; let index = index\">\n          <ircc-cl-lib-button\n            *ngIf=\"cta?.type === 'button'\"\n            [id]=\"'cta_' + index\"\n            [category]=\"cta?.btnConfig?.category\"\n            [color]=\"cta?.btnConfig?.color\"\n            [size]=\"config.size\"\n            [ariaLabel]=\"cta?.btnConfig?.ariaLabel\"\n            [disabled]=\"cta?.btnConfig?.disabled\"\n            [icon]=\"cta?.btnConfig?.icon\"\n            [iconDirection]=\"cta?.btnConfig?.iconDirection\"\n            >{{ cta.text | translate }}</ircc-cl-lib-button\n          >\n          <a\n            class=\"cta-link\"\n            *ngIf=\"cta?.type === 'link'\"\n            [routerLink]=\"cta?.linkConfig | translate\"\n            [attr.aria-label]=\"cta?.ariaLabel\"\n            >{{ cta.text | translate }}</a\n          >\n        </ng-container>\n      </div>\n    </div>\n  </div>\n  <div class=\"banner-btn\">\n    <ircc-cl-lib-icon-button\n      [ariaLabel]=\"config?.ariaDissmissible || '' | translate\"\n      size=\"extraSmall\"\n      class=\"banner-close\"\n      *ngIf=\"config?.dismissible\"\n      [config]=\"iconConfig\"\n      (clickEvent)=\"eventHandler($event)\"\n    ></ircc-cl-lib-icon-button>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.BannerService }, { type: i0.Renderer2 }]; }, propDecorators: { banner: [{
                type: ViewChild,
                args: ['banner', { static: false }]
            }], config: [{
                type: Input
            }], id: [{
                type: Input
            }], title: [{
                type: Input
            }], content: [{
                type: Input
            }], type: [{
                type: Input
            }], rounded: [{
                type: Input
            }], dismissible: [{
                type: Input
            }], cta: [{
                type: Input
            }], size: [{
                type: Input
            }], ariaDissmissible: [{
                type: Input
            }], btnEvent: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,