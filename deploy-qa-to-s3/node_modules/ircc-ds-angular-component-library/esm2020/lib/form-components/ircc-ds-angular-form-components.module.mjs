import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ScrollingModule } from '@angular/cdk/scrolling';
import { ScrollingModule as ExperimentalScrollingModule } from '@angular/cdk-experimental/scrolling';
import { ErrorComponent } from './error/error.component';
import { InputComponent } from './input/input.component';
import { RadioInputComponent } from './radio-input/radio-input.component';
import { IrccDsAngularComponentsSharedModule } from '../shared/ircc-ds-angular-component-shared.module';
import { CheckboxComponent } from './checkbox/checkbox.component';
import { TranslateModule } from '@ngx-translate/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { DatePickerComponent } from './date-picker/date-picker.component';
import { TextareaComponent } from './textarea/textarea.component';
import { SelectComponent } from './select/select.component';
import { MultiCheckboxComponent } from './multi-checkbox/multi-checkbox.component';
import { AutoCompleteComponent } from './autocomplete/autocomplete.component';
import { IrccDsAngularPipesdModule } from '../../shared/pipes/pipes.module';
import * as i0 from "@angular/core";
const IrccDsAngularFormComponents = [
    CheckboxComponent,
    ErrorComponent,
    InputComponent,
    RadioInputComponent,
    DatePickerComponent,
    TextareaComponent,
    SelectComponent,
    MultiCheckboxComponent,
    AutoCompleteComponent
];
export class IrccDsAngularFormComponentsModule {
}
IrccDsAngularFormComponentsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: IrccDsAngularFormComponentsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IrccDsAngularFormComponentsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.12", ngImport: i0, type: IrccDsAngularFormComponentsModule, declarations: [CheckboxComponent,
        ErrorComponent,
        InputComponent,
        RadioInputComponent,
        DatePickerComponent,
        TextareaComponent,
        SelectComponent,
        MultiCheckboxComponent,
        AutoCompleteComponent], imports: [CommonModule,
        IrccDsAngularComponentsSharedModule,
        TranslateModule,
        FormsModule,
        ReactiveFormsModule,
        ScrollingModule,
        ExperimentalScrollingModule,
        IrccDsAngularPipesdModule], exports: [CheckboxComponent,
        ErrorComponent,
        InputComponent,
        RadioInputComponent,
        DatePickerComponent,
        TextareaComponent,
        SelectComponent,
        MultiCheckboxComponent,
        AutoCompleteComponent] });
IrccDsAngularFormComponentsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: IrccDsAngularFormComponentsModule, imports: [CommonModule,
        IrccDsAngularComponentsSharedModule,
        TranslateModule,
        FormsModule,
        ReactiveFormsModule,
        ScrollingModule,
        ExperimentalScrollingModule,
        IrccDsAngularPipesdModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: IrccDsAngularFormComponentsModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [...IrccDsAngularFormComponents],
                    imports: [
                        CommonModule,
                        IrccDsAngularComponentsSharedModule,
                        TranslateModule,
                        FormsModule,
                        ReactiveFormsModule,
                        ScrollingModule,
                        ExperimentalScrollingModule,
                        IrccDsAngularPipesdModule
                    ],
                    exports: [...IrccDsAngularFormComponents]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXJjYy1kcy1hbmd1bGFyLWZvcm0tY29tcG9uZW50cy5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9jb21wb25lbnQtbGliL3NyYy9saWIvZm9ybS1jb21wb25lbnRzL2lyY2MtZHMtYW5ndWxhci1mb3JtLWNvbXBvbmVudHMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN6RCxPQUFPLEVBQUUsZUFBZSxJQUFJLDJCQUEyQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFFckcsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3pELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN6RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUMxRSxPQUFPLEVBQUUsbUNBQW1DLEVBQUUsTUFBTSxtREFBbUQsQ0FBQztBQUN4RyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNsRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdEQsT0FBTyxFQUFFLFdBQVcsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQztBQUNuRixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUU5RSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQzs7QUFFNUUsTUFBTSwyQkFBMkIsR0FBRztJQUNsQyxpQkFBaUI7SUFDakIsY0FBYztJQUNkLGNBQWM7SUFDZCxtQkFBbUI7SUFDbkIsbUJBQW1CO0lBQ25CLGlCQUFpQjtJQUNqQixlQUFlO0lBQ2Ysc0JBQXNCO0lBQ3RCLHFCQUFxQjtDQUN0QixDQUFDO0FBZ0JGLE1BQU0sT0FBTyxpQ0FBaUM7OytIQUFqQyxpQ0FBaUM7Z0lBQWpDLGlDQUFpQyxpQkF6QjVDLGlCQUFpQjtRQUNqQixjQUFjO1FBQ2QsY0FBYztRQUNkLG1CQUFtQjtRQUNuQixtQkFBbUI7UUFDbkIsaUJBQWlCO1FBQ2pCLGVBQWU7UUFDZixzQkFBc0I7UUFDdEIscUJBQXFCLGFBTW5CLFlBQVk7UUFDWixtQ0FBbUM7UUFDbkMsZUFBZTtRQUNmLFdBQVc7UUFDWCxtQkFBbUI7UUFDbkIsZUFBZTtRQUNmLDJCQUEyQjtRQUMzQix5QkFBeUIsYUFyQjNCLGlCQUFpQjtRQUNqQixjQUFjO1FBQ2QsY0FBYztRQUNkLG1CQUFtQjtRQUNuQixtQkFBbUI7UUFDbkIsaUJBQWlCO1FBQ2pCLGVBQWU7UUFDZixzQkFBc0I7UUFDdEIscUJBQXFCO2dJQWlCVixpQ0FBaUMsWUFYMUMsWUFBWTtRQUNaLG1DQUFtQztRQUNuQyxlQUFlO1FBQ2YsV0FBVztRQUNYLG1CQUFtQjtRQUNuQixlQUFlO1FBQ2YsMkJBQTJCO1FBQzNCLHlCQUF5Qjs0RkFJaEIsaUNBQWlDO2tCQWQ3QyxRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLEdBQUcsMkJBQTJCLENBQUM7b0JBQzlDLE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLG1DQUFtQzt3QkFDbkMsZUFBZTt3QkFDZixXQUFXO3dCQUNYLG1CQUFtQjt3QkFDbkIsZUFBZTt3QkFDZiwyQkFBMkI7d0JBQzNCLHlCQUF5QjtxQkFDMUI7b0JBQ0QsT0FBTyxFQUFFLENBQUMsR0FBRywyQkFBMkIsQ0FBQztpQkFDMUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IFNjcm9sbGluZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9zY3JvbGxpbmcnO1xuaW1wb3J0IHsgU2Nyb2xsaW5nTW9kdWxlIGFzIEV4cGVyaW1lbnRhbFNjcm9sbGluZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay1leHBlcmltZW50YWwvc2Nyb2xsaW5nJztcblxuaW1wb3J0IHsgRXJyb3JDb21wb25lbnQgfSBmcm9tICcuL2Vycm9yL2Vycm9yLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJbnB1dENvbXBvbmVudCB9IGZyb20gJy4vaW5wdXQvaW5wdXQuY29tcG9uZW50JztcbmltcG9ydCB7IFJhZGlvSW5wdXRDb21wb25lbnQgfSBmcm9tICcuL3JhZGlvLWlucHV0L3JhZGlvLWlucHV0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJcmNjRHNBbmd1bGFyQ29tcG9uZW50c1NoYXJlZE1vZHVsZSB9IGZyb20gJy4uL3NoYXJlZC9pcmNjLWRzLWFuZ3VsYXItY29tcG9uZW50LXNoYXJlZC5tb2R1bGUnO1xuaW1wb3J0IHsgQ2hlY2tib3hDb21wb25lbnQgfSBmcm9tICcuL2NoZWNrYm94L2NoZWNrYm94LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUcmFuc2xhdGVNb2R1bGUgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcbmltcG9ydCB7IEZvcm1zTW9kdWxlLCBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgRGF0ZVBpY2tlckNvbXBvbmVudCB9IGZyb20gJy4vZGF0ZS1waWNrZXIvZGF0ZS1waWNrZXIuY29tcG9uZW50JztcbmltcG9ydCB7IFRleHRhcmVhQ29tcG9uZW50IH0gZnJvbSAnLi90ZXh0YXJlYS90ZXh0YXJlYS5jb21wb25lbnQnO1xuaW1wb3J0IHsgU2VsZWN0Q29tcG9uZW50IH0gZnJvbSAnLi9zZWxlY3Qvc2VsZWN0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBNdWx0aUNoZWNrYm94Q29tcG9uZW50IH0gZnJvbSAnLi9tdWx0aS1jaGVja2JveC9tdWx0aS1jaGVja2JveC5jb21wb25lbnQnO1xuaW1wb3J0IHsgQXV0b0NvbXBsZXRlQ29tcG9uZW50IH0gZnJvbSAnLi9hdXRvY29tcGxldGUvYXV0b2NvbXBsZXRlLmNvbXBvbmVudCc7XG5cbmltcG9ydCB7IElyY2NEc0FuZ3VsYXJQaXBlc2RNb2R1bGUgfSBmcm9tICcuLi8uLi9zaGFyZWQvcGlwZXMvcGlwZXMubW9kdWxlJztcblxuY29uc3QgSXJjY0RzQW5ndWxhckZvcm1Db21wb25lbnRzID0gW1xuICBDaGVja2JveENvbXBvbmVudCxcbiAgRXJyb3JDb21wb25lbnQsXG4gIElucHV0Q29tcG9uZW50LFxuICBSYWRpb0lucHV0Q29tcG9uZW50LFxuICBEYXRlUGlja2VyQ29tcG9uZW50LFxuICBUZXh0YXJlYUNvbXBvbmVudCxcbiAgU2VsZWN0Q29tcG9uZW50LFxuICBNdWx0aUNoZWNrYm94Q29tcG9uZW50LFxuICBBdXRvQ29tcGxldGVDb21wb25lbnRcbl07XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogWy4uLklyY2NEc0FuZ3VsYXJGb3JtQ29tcG9uZW50c10sXG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgSXJjY0RzQW5ndWxhckNvbXBvbmVudHNTaGFyZWRNb2R1bGUsXG4gICAgVHJhbnNsYXRlTW9kdWxlLFxuICAgIEZvcm1zTW9kdWxlLFxuICAgIFJlYWN0aXZlRm9ybXNNb2R1bGUsXG4gICAgU2Nyb2xsaW5nTW9kdWxlLFxuICAgIEV4cGVyaW1lbnRhbFNjcm9sbGluZ01vZHVsZSxcbiAgICBJcmNjRHNBbmd1bGFyUGlwZXNkTW9kdWxlXG4gIF0sXG4gIGV4cG9ydHM6IFsuLi5JcmNjRHNBbmd1bGFyRm9ybUNvbXBvbmVudHNdXG59KVxuZXhwb3J0IGNsYXNzIElyY2NEc0FuZ3VsYXJGb3JtQ29tcG9uZW50c01vZHVsZSB7fVxuIl19