import { Component, Input } from '@angular/core';
import { Subscription } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "../navigation.service";
import * as i2 from "@angular/common";
import * as i3 from "../../icon/icon.component";
import * as i4 from "@ngx-translate/core";
export class navItemHeadingComponent {
    constructor(navEvent) {
        this.navEvent = navEvent;
        this.config = {
            id: '',
            label: '',
            iconLeading: '',
            size: 'small',
            type: 'heading',
            children: [],
            bold: false
        };
        this.id = '';
        this.label = '';
        this.iconLeading = '';
        this.buttonIcon = {
            id: `${this.config.id}-button`,
            category: 'custom',
            size: this.config?.size,
            icon: {
                class: this.config?.iconLeading,
                color: 'var(--text-primary)'
            }
        };
        this.navObjectChangeSub = new Subscription();
    }
    ngOnInit() {
        this.id !== '' ? (this.config.id = this.id) : undefined;
        this.label !== '' ? (this.config.label = this.label) : undefined;
        this.iconLeading !== ''
            ? (this.config.iconLeading = this.iconLeading)
            : undefined;
        this.children !== undefined
            ? (this.config.children = this.children)
            : undefined;
        this.size !== undefined ? (this.config.size = this.size) : undefined;
        this.leftPadding !== undefined
            ? (this.config.leftPadding = this.leftPadding)
            : undefined;
        this.bold !== undefined ? (this.config.bold = this.bold) : undefined;
        if (this.config?.bold != true && this.config?.bold != false) {
            this.config.bold = true;
        }
        this.buttonIcon = {
            id: `${this.config.id}_button`,
            category: 'custom',
            size: this.config?.size,
            icon: {
                class: this.config?.iconLeading,
                color: 'var(--text-primary)'
            }
        };
    }
    getClasses() {
        let classes = '';
        if (this.config.iconLeading.length > 0) {
            classes += 'grid-header';
        }
        if (this.config?.leftPadding === true) {
            classes += ' left-padding';
        }
        if (this.config?.bold === false) {
            classes += ' remove-bold';
        }
        return classes;
    }
}
navItemHeadingComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: navItemHeadingComponent, deps: [{ token: i1.NavigationService }], target: i0.ɵɵFactoryTarget.Component });
navItemHeadingComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: navItemHeadingComponent, selector: "ircc-cl-lib-nav-header", inputs: { config: "config", id: "id", label: "label", iconLeading: "iconLeading", children: "children", size: "size", leftPadding: "leftPadding", bold: "bold" }, ngImport: i0, template: "<div [id]=\"config.id\">\n  <div\n    class=\"nav-header-header\"\n    [class]=\"getClasses()\"\n  >\n    <ircc-cl-lib-icon\n      *ngIf=\"config.iconLeading.length > 0\"\n      [config]=\"{ FA_keywords: config.iconLeading }\"\n      [attr.size]=\"config.size\"\n    ></ircc-cl-lib-icon>\n    <h2>{{ config?.label || '' | translate }}</h2>\n  </div>\n  <div class=\"nav-header-content\">\n    <ng-content></ng-content>\n  </div>\n</div>\n", dependencies: [{ kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.IconComponent, selector: "ircc-cl-lib-icon", inputs: ["config", "ariaLabel", "FA_keywords", "size"] }, { kind: "pipe", type: i4.TranslatePipe, name: "translate" }], preserveWhitespaces: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: navItemHeadingComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ircc-cl-lib-nav-header', template: "<div [id]=\"config.id\">\n  <div\n    class=\"nav-header-header\"\n    [class]=\"getClasses()\"\n  >\n    <ircc-cl-lib-icon\n      *ngIf=\"config.iconLeading.length > 0\"\n      [config]=\"{ FA_keywords: config.iconLeading }\"\n      [attr.size]=\"config.size\"\n    ></ircc-cl-lib-icon>\n    <h2>{{ config?.label || '' | translate }}</h2>\n  </div>\n  <div class=\"nav-header-content\">\n    <ng-content></ng-content>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.NavigationService }]; }, propDecorators: { config: [{
                type: Input
            }], id: [{
                type: Input
            }], label: [{
                type: Input
            }], iconLeading: [{
                type: Input
            }], children: [{
                type: Input
            }], size: [{
                type: Input
            }], leftPadding: [{
                type: Input
            }], bold: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,