import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../icon/icon.component";
export var ButtonCategories;
(function (ButtonCategories) {
    ButtonCategories["primary"] = "primary";
    ButtonCategories["secondary"] = "secondary";
    ButtonCategories["plain"] = "plain";
})(ButtonCategories || (ButtonCategories = {}));
export var ButtonSize;
(function (ButtonSize) {
    ButtonSize["small"] = "small";
    ButtonSize["large"] = "large";
})(ButtonSize || (ButtonSize = {}));
export var ButtonColor;
(function (ButtonColor) {
    ButtonColor["critical"] = "critical";
    ButtonColor["CTA"] = "CTA";
})(ButtonColor || (ButtonColor = {}));
// export enum ButtonType {
//     button = 'button',
//     submit = 'submit',
//     reset = 'reset'
// }
export var ButtonIconDirection;
(function (ButtonIconDirection) {
    ButtonIconDirection["left"] = "left";
    ButtonIconDirection["right"] = "right";
})(ButtonIconDirection || (ButtonIconDirection = {}));
export class ButtonComponent {
    constructor() {
        this.config = {
            id: ''
        };
        this.id = '';
        this.btnAction = new EventEmitter();
    }
    ngOnInit() {
        this.id !== '' ? (this.config.id = this.id) : undefined;
        this.category === undefined
            ? undefined
            : (this.config.category = this.category);
        this.size === undefined ? undefined : (this.config.size = this.size);
        this.color === undefined ? undefined : (this.config.color = this.color);
        this.ariaLabel !== undefined
            ? (this.config.ariaLabel = this.ariaLabel)
            : undefined;
        this.disabled !== undefined
            ? (this.config.disabled = this.disabled)
            : undefined;
        this.tabIndex !== undefined
            ? (this.config.tabIndex = this.tabIndex)
            : undefined;
        this.fill !== undefined ? (this.config.fill = this.fill) : undefined;
        if (this.icon || this.config.icon) {
            this.config.icon = this.icon ? this.icon : this.config.icon;
            this.config.iconDirection = this.iconDirection
                ? this.iconDirection
                : this.config.iconDirection;
            this.config.iconDirection = this.config.iconDirection
                ? this.config.iconDirection
                : 'left';
        }
        else {
            this.config.icon = undefined;
            this.config.iconDirection = undefined;
        }
    }
    clickEvent(id) {
        this.btnAction.emit(id);
    }
}
ButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: ButtonComponent, selector: "ircc-cl-lib-button", inputs: { config: "config", id: "id", category: "category", size: "size", color: "color", ariaLabel: "ariaLabel", disabled: "disabled", icon: "icon", iconDirection: "iconDirection", tabIndex: "tabIndex", fill: "fill" }, outputs: { btnAction: "btnAction" }, ngImport: i0, template: "<button\n  [attr.aria-label]=\"config.ariaLabel\"\n  [attr.color]=\"config.color\"\n  [attr.category]=\"config.category\"\n  [attr.size]=\"config.size\"\n  [attr.tabIndex]=\"config.tabIndex\"\n  [ngClass]=\"config.iconDirection\"\n  (click)=\"clickEvent(config.id)\"\n  class=\"lib-button\"\n  [id]=\"config.id\"\n  [attr.fill-container]=\"config.fill ? true : null\"\n>\n  <div class=\"button-content-container\">\n    <span\n      class=\"icon\"\n      *ngIf=\"config.icon\"\n    >\n      <ircc-cl-lib-icon\n        [config]=\"{ FA_keywords: config.icon }\"\n        [size]=\"config.size\"\n      ></ircc-cl-lib-icon>\n    </span>\n    <span class=\"text\"><ng-content></ng-content></span>\n  </div>\n</button>\n", dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.IconComponent, selector: "ircc-cl-lib-icon", inputs: ["config", "ariaLabel", "FA_keywords", "size"] }], preserveWhitespaces: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ButtonComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ircc-cl-lib-button', template: "<button\n  [attr.aria-label]=\"config.ariaLabel\"\n  [attr.color]=\"config.color\"\n  [attr.category]=\"config.category\"\n  [attr.size]=\"config.size\"\n  [attr.tabIndex]=\"config.tabIndex\"\n  [ngClass]=\"config.iconDirection\"\n  (click)=\"clickEvent(config.id)\"\n  class=\"lib-button\"\n  [id]=\"config.id\"\n  [attr.fill-container]=\"config.fill ? true : null\"\n>\n  <div class=\"button-content-container\">\n    <span\n      class=\"icon\"\n      *ngIf=\"config.icon\"\n    >\n      <ircc-cl-lib-icon\n        [config]=\"{ FA_keywords: config.icon }\"\n        [size]=\"config.size\"\n      ></ircc-cl-lib-icon>\n    </span>\n    <span class=\"text\"><ng-content></ng-content></span>\n  </div>\n</button>\n" }]
        }], propDecorators: { config: [{
                type: Input
            }], id: [{
                type: Input
            }], category: [{
                type: Input
            }], size: [{
                type: Input
            }], color: [{
                type: Input
            }], ariaLabel: [{
                type: Input
            }], disabled: [{
                type: Input
            }], icon: [{
                type: Input
            }], iconDirection: [{
                type: Input
            }], tabIndex: [{
                type: Input
            }], fill: [{
                type: Input
            }], btnAction: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,