import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../button/button.component";
import * as i3 from "@ngx-translate/core";
export var IFlyoutOptionType;
(function (IFlyoutOptionType) {
    IFlyoutOptionType["text"] = "text";
    IFlyoutOptionType["checkbox"] = "checkbox";
    IFlyoutOptionType["dropdown"] = "dropdown";
    IFlyoutOptionType["line"] = "line";
    IFlyoutOptionType["heading"] = "heading";
})(IFlyoutOptionType || (IFlyoutOptionType = {}));
;
export class FlyoutOptionComponent {
    constructor() {
        this.config = {
            id: '',
            value: 'Blank label'
        };
    }
    ngOnInit() {
        //set config from individual options, if present
        if (this.id)
            this.config.id = this.id;
        if (this.size)
            this.config.size = this.size;
        if (this.value)
            this.config.value = this.value;
        if (this.selected)
            this.config.selected = this.selected;
        if (this.active)
            this.config.active = this.active;
        if (this.disabled)
            this.config.disabled = this.disabled;
        if (this.type)
            this.config.type = this.type;
        if (this.clickable)
            this.config.clickable = this.clickable;
        if (this.config.type === undefined)
            this.config.type = 'text';
        if ((this.config.type === 'text' || 'checkbox' || 'dropdown') && this.config.clickable !== false && this.config.disabled !== true) {
            this.config.clickable = true;
        }
        else {
            this.config.clickable = false;
        }
    }
    ;
}
FlyoutOptionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: FlyoutOptionComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
FlyoutOptionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: FlyoutOptionComponent, selector: "ircc-cl-lib-flyout-option", inputs: { config: "config", id: "id", size: "size", value: "value", selected: "selected", active: "active", disabled: "disabled", type: "type", clickable: "clickable" }, ngImport: i0, template: "<div\n  class=\"option-container\"\n  [ngClass]=\"config.size\"\n>\n  <ircc-cl-lib-button\n    [category]=\"'plain'\"\n    [id]=\"config.id ? config.id : ''\"\n    role=\"option\"\n    [tabIndex]=\"-1\"\n  >\n    <div class=\"option-contents\">\n      <p\n        class=\"option-text\"\n        [innerHTML]=\"config.value || '' | translate\"\n      ></p>\n      <div *ngIf=\"config.selected\">\n        <span class=\"fa-solid fa-check option-check\"></span>\n      </div>\n    </div>\n  </ircc-cl-lib-button>\n</div>\n", dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.ButtonComponent, selector: "ircc-cl-lib-button", inputs: ["config", "id", "category", "size", "color", "ariaLabel", "disabled", "icon", "iconDirection", "tabIndex", "fill"], outputs: ["btnAction"] }, { kind: "pipe", type: i3.TranslatePipe, name: "translate" }], preserveWhitespaces: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: FlyoutOptionComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ircc-cl-lib-flyout-option', template: "<div\n  class=\"option-container\"\n  [ngClass]=\"config.size\"\n>\n  <ircc-cl-lib-button\n    [category]=\"'plain'\"\n    [id]=\"config.id ? config.id : ''\"\n    role=\"option\"\n    [tabIndex]=\"-1\"\n  >\n    <div class=\"option-contents\">\n      <p\n        class=\"option-text\"\n        [innerHTML]=\"config.value || '' | translate\"\n      ></p>\n      <div *ngIf=\"config.selected\">\n        <span class=\"fa-solid fa-check option-check\"></span>\n      </div>\n    </div>\n  </ircc-cl-lib-button>\n</div>\n" }]
        }], ctorParameters: function () { return []; }, propDecorators: { config: [{
                type: Input
            }], id: [{
                type: Input
            }], size: [{
                type: Input
            }], value: [{
                type: Input
            }], selected: [{
                type: Input
            }], active: [{
                type: Input
            }], disabled: [{
                type: Input
            }], type: [{
                type: Input
            }], clickable: [{
                type: Input
            }] } });
;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmx5b3V0LW9wdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9jb21wb25lbnQtbGliL3NyYy9saWIvc2hhcmVkL2ZseW91dC1vcHRpb24vZmx5b3V0LW9wdGlvbi5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9jb21wb25lbnQtbGliL3NyYy9saWIvc2hhcmVkL2ZseW91dC1vcHRpb24vZmx5b3V0LW9wdGlvbi5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQzs7Ozs7QUFHekQsTUFBTSxDQUFOLElBQVksaUJBTVg7QUFORCxXQUFZLGlCQUFpQjtJQUMzQixrQ0FBYSxDQUFBO0lBQ2IsMENBQXFCLENBQUE7SUFDckIsMENBQXFCLENBQUE7SUFDckIsa0NBQWEsQ0FBQTtJQUNiLHdDQUFtQixDQUFBO0FBQ3JCLENBQUMsRUFOVyxpQkFBaUIsS0FBakIsaUJBQWlCLFFBTTVCO0FBV0EsQ0FBQztBQU1GLE1BQU0sT0FBTyxxQkFBcUI7SUFnQmhDO1FBZFMsV0FBTSxHQUF5QjtZQUN0QyxFQUFFLEVBQUUsRUFBRTtZQUNOLEtBQUssRUFBRSxhQUFhO1NBQ3JCLENBQUE7SUFXZSxDQUFDO0lBRWpCLFFBQVE7UUFDTCxnREFBZ0Q7UUFDakQsSUFBRyxJQUFJLENBQUMsRUFBRTtZQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUM7UUFDckMsSUFBRyxJQUFJLENBQUMsSUFBSTtZQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDM0MsSUFBRyxJQUFJLENBQUMsS0FBSztZQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDOUMsSUFBRyxJQUFJLENBQUMsUUFBUTtZQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDdkQsSUFBRyxJQUFJLENBQUMsTUFBTTtZQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDakQsSUFBRyxJQUFJLENBQUMsUUFBUTtZQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDdkQsSUFBRyxJQUFJLENBQUMsSUFBSTtZQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDM0MsSUFBRyxJQUFJLENBQUMsU0FBUztZQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7UUFFMUQsSUFBRyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksS0FBSyxTQUFTO1lBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDO1FBQzdELElBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksS0FBSyxNQUFNLElBQUksVUFBVSxJQUFJLFVBQVUsQ0FBQyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxLQUFLLEtBQUssSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsS0FBSyxJQUFJLEVBQUU7WUFDaEksSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1NBQzlCO2FBQU07WUFDTCxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7U0FDL0I7SUFDSCxDQUFDO0lBQUEsQ0FBQzs7bUhBbkNTLHFCQUFxQjt1R0FBckIscUJBQXFCLDJPQzFCbEMsd2dCQXFCQTs0RkRLYSxxQkFBcUI7a0JBSmpDLFNBQVM7K0JBQ0UsMkJBQTJCOzBFQUs1QixNQUFNO3NCQUFkLEtBQUs7Z0JBS0csRUFBRTtzQkFBVixLQUFLO2dCQUNHLElBQUk7c0JBQVosS0FBSztnQkFDRyxLQUFLO3NCQUFiLEtBQUs7Z0JBQ0csUUFBUTtzQkFBaEIsS0FBSztnQkFDRyxNQUFNO3NCQUFkLEtBQUs7Z0JBQ0csUUFBUTtzQkFBaEIsS0FBSztnQkFDRyxJQUFJO3NCQUFaLEtBQUs7Z0JBQ0csU0FBUztzQkFBakIsS0FBSzs7QUF1QlAsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRFNTaXplcyB9IGZyb20gJy4uLy4uLy4uL3NoYXJlZC9jb25zdGFudHMvamwtY29tcG9uZW50cy5jb25zdGFudHMnO1xuXG5leHBvcnQgZW51bSBJRmx5b3V0T3B0aW9uVHlwZSB7XG4gIHRleHQgPSAndGV4dCcsXG4gIGNoZWNrYm94ID0gJ2NoZWNrYm94JyxcbiAgZHJvcGRvd24gPSAnZHJvcGRvd24nLFxuICBsaW5lID0gJ2xpbmUnLFxuICBoZWFkaW5nID0gJ2hlYWRpbmcnXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUZseW91dE9wdGlvbkNvbmZpZyB7XG4gIGlkPzogc3RyaW5nLFxuICB2YWx1ZTogc3RyaW5nLFxuICBzZWxlY3RlZD86IGJvb2xlYW4sXG4gIGFjdGl2ZT86IGJvb2xlYW4sXG4gIGRpc2FibGVkPzogYm9vbGVhbixcbiAgdHlwZT86IGtleW9mIHR5cGVvZiBJRmx5b3V0T3B0aW9uVHlwZSxcbiAgY2xpY2thYmxlPzogYm9vbGVhbixcbiAgc2l6ZT86IGtleW9mIHR5cGVvZiBEU1NpemVzXG59O1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdpcmNjLWNsLWxpYi1mbHlvdXQtb3B0aW9uJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2ZseW91dC1vcHRpb24uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIEZseW91dE9wdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgQElucHV0KCkgY29uZmlnIDogSUZseW91dE9wdGlvbkNvbmZpZyA9IHtcbiAgICBpZDogJycsXG4gICAgdmFsdWU6ICdCbGFuayBsYWJlbCdcbiAgfVxuXG4gIEBJbnB1dCgpIGlkPyA6IHN0cmluZztcbiAgQElucHV0KCkgc2l6ZT8gOiBrZXlvZiB0eXBlb2YgRFNTaXplcztcbiAgQElucHV0KCkgdmFsdWU/OiBzdHJpbmc7XG4gIEBJbnB1dCgpIHNlbGVjdGVkPzogYm9vbGVhbjtcbiAgQElucHV0KCkgYWN0aXZlPzogYm9vbGVhbjtcbiAgQElucHV0KCkgZGlzYWJsZWQ/OiBib29sZWFuO1xuICBASW5wdXQoKSB0eXBlPzoga2V5b2YgdHlwZW9mIElGbHlvdXRPcHRpb25UeXBlO1xuICBASW5wdXQoKSBjbGlja2FibGU/OiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgIC8vc2V0IGNvbmZpZyBmcm9tIGluZGl2aWR1YWwgb3B0aW9ucywgaWYgcHJlc2VudFxuICAgIGlmKHRoaXMuaWQpIHRoaXMuY29uZmlnLmlkID0gdGhpcy5pZDtcbiAgICBpZih0aGlzLnNpemUpIHRoaXMuY29uZmlnLnNpemUgPSB0aGlzLnNpemU7XG4gICAgaWYodGhpcy52YWx1ZSkgdGhpcy5jb25maWcudmFsdWUgPSB0aGlzLnZhbHVlO1xuICAgIGlmKHRoaXMuc2VsZWN0ZWQpIHRoaXMuY29uZmlnLnNlbGVjdGVkID0gdGhpcy5zZWxlY3RlZDtcbiAgICBpZih0aGlzLmFjdGl2ZSkgdGhpcy5jb25maWcuYWN0aXZlID0gdGhpcy5hY3RpdmU7XG4gICAgaWYodGhpcy5kaXNhYmxlZCkgdGhpcy5jb25maWcuZGlzYWJsZWQgPSB0aGlzLmRpc2FibGVkO1xuICAgIGlmKHRoaXMudHlwZSkgdGhpcy5jb25maWcudHlwZSA9IHRoaXMudHlwZTtcbiAgICBpZih0aGlzLmNsaWNrYWJsZSkgdGhpcy5jb25maWcuY2xpY2thYmxlID0gdGhpcy5jbGlja2FibGU7XG5cbiAgICBpZih0aGlzLmNvbmZpZy50eXBlID09PSB1bmRlZmluZWQpIHRoaXMuY29uZmlnLnR5cGUgPSAndGV4dCc7XG4gICAgaWYoKHRoaXMuY29uZmlnLnR5cGUgPT09ICd0ZXh0JyB8fCAnY2hlY2tib3gnIHx8ICdkcm9wZG93bicpICYmIHRoaXMuY29uZmlnLmNsaWNrYWJsZSAhPT0gZmFsc2UgJiYgdGhpcy5jb25maWcuZGlzYWJsZWQgIT09IHRydWUpIHtcbiAgICAgIHRoaXMuY29uZmlnLmNsaWNrYWJsZSA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuY29uZmlnLmNsaWNrYWJsZSA9IGZhbHNlO1xuICAgIH1cbiAgfTtcblxufTtcbiIsIjxkaXZcbiAgY2xhc3M9XCJvcHRpb24tY29udGFpbmVyXCJcbiAgW25nQ2xhc3NdPVwiY29uZmlnLnNpemVcIlxuPlxuICA8aXJjYy1jbC1saWItYnV0dG9uXG4gICAgW2NhdGVnb3J5XT1cIidwbGFpbidcIlxuICAgIFtpZF09XCJjb25maWcuaWQgPyBjb25maWcuaWQgOiAnJ1wiXG4gICAgcm9sZT1cIm9wdGlvblwiXG4gICAgW3RhYkluZGV4XT1cIi0xXCJcbiAgPlxuICAgIDxkaXYgY2xhc3M9XCJvcHRpb24tY29udGVudHNcIj5cbiAgICAgIDxwXG4gICAgICAgIGNsYXNzPVwib3B0aW9uLXRleHRcIlxuICAgICAgICBbaW5uZXJIVE1MXT1cImNvbmZpZy52YWx1ZSB8fCAnJyB8IHRyYW5zbGF0ZVwiXG4gICAgICA+PC9wPlxuICAgICAgPGRpdiAqbmdJZj1cImNvbmZpZy5zZWxlY3RlZFwiPlxuICAgICAgICA8c3BhbiBjbGFzcz1cImZhLXNvbGlkIGZhLWNoZWNrIG9wdGlvbi1jaGVja1wiPjwvc3Bhbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L2lyY2MtY2wtbGliLWJ1dHRvbj5cbjwvZGl2PlxuIl19