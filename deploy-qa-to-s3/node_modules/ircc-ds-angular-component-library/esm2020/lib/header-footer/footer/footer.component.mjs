import { Component, Input } from '@angular/core';
import { GOV_CANADA_LOGOS } from '../header-footer-const.component';
import * as i0 from "@angular/core";
import * as i1 from "@ngx-translate/core";
import * as i2 from "../language-switch/language-header-footer-switch.service";
export const GOV_LOGO_ALT_TEXT_EN = 'Canada wordmark';
export const GOV_LOGO_ALT_TEXT_FR = 'FR Canada wordmark';
export class FooterComponent {
    constructor(translate, languageHeaderFooterSwitch) {
        this.translate = translate;
        this.languageHeaderFooterSwitch = languageHeaderFooterSwitch;
        this.id = '';
        this.altImage = '';
        this.logo = GOV_CANADA_LOGOS.footerLightLogo;
        this.isDarkMode = false;
        this.subscription = this.languageHeaderFooterSwitch.isDarkMode$.subscribe((response) => {
            this.updateFooterImage(response);
            this.isDarkMode = response;
        });
    }
    ngOnInit() {
        this.setLang(this.translate.currentLang);
        this.translate.onLangChange.subscribe((change) => {
            this.setLang(change.lang);
            this.updateFooterImage(this.isDarkMode);
        });
    }
    updateFooterImage(res) {
        this.logo = res
            ? GOV_CANADA_LOGOS.footerDarkLogo
            : GOV_CANADA_LOGOS.footerLightLogo;
    }
    setLang(lang) {
        if (lang === 'en' || lang === 'en-US') {
            this.altImage = GOV_LOGO_ALT_TEXT_EN;
        }
        else {
            this.altImage = GOV_LOGO_ALT_TEXT_FR;
        }
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
}
FooterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: FooterComponent, deps: [{ token: i1.TranslateService }, { token: i2.LanguageHeaderFooterSwitchService }], target: i0.ɵɵFactoryTarget.Component });
FooterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: FooterComponent, selector: "ircc-cl-lib-footer", inputs: { id: "id" }, ngImport: i0, template: "<footer\n  class=\"ircc-cl-lib-footer footing\"\n  role=\"contentinfo\"\n>\n  <div\n    class=\"grid-container\"\n    [id]=\"id\"\n  >\n    <div class=\"item1 body3\">\n      <ng-content></ng-content>\n    </div>\n    <picture class=\"item2\">\n      <img\n        [src]=\"'data:image/png;base64,' + logo\"\n        alt=\"{{ altImage }}\"\n      />\n    </picture>\n  </div>\n</footer>\n", preserveWhitespaces: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: FooterComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ircc-cl-lib-footer', template: "<footer\n  class=\"ircc-cl-lib-footer footing\"\n  role=\"contentinfo\"\n>\n  <div\n    class=\"grid-container\"\n    [id]=\"id\"\n  >\n    <div class=\"item1 body3\">\n      <ng-content></ng-content>\n    </div>\n    <picture class=\"item2\">\n      <img\n        [src]=\"'data:image/png;base64,' + logo\"\n        alt=\"{{ altImage }}\"\n      />\n    </picture>\n  </div>\n</footer>\n" }]
        }], ctorParameters: function () { return [{ type: i1.TranslateService }, { type: i2.LanguageHeaderFooterSwitchService }]; }, propDecorators: { id: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9vdGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2NvbXBvbmVudC1saWIvc3JjL2xpYi9oZWFkZXItZm9vdGVyL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vY29tcG9uZW50LWxpYi9zcmMvbGliL2hlYWRlci1mb290ZXIvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQzs7OztBQUtwRSxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxpQkFBaUIsQ0FBQztBQUN0RCxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxvQkFBb0IsQ0FBQztBQU16RCxNQUFNLE9BQU8sZUFBZTtJQU8xQixZQUNVLFNBQTJCLEVBQzNCLDBCQUE2RDtRQUQ3RCxjQUFTLEdBQVQsU0FBUyxDQUFrQjtRQUMzQiwrQkFBMEIsR0FBMUIsMEJBQTBCLENBQW1DO1FBUjlELE9BQUUsR0FBRyxFQUFFLENBQUM7UUFDakIsYUFBUSxHQUFHLEVBQUUsQ0FBQztRQUNkLFNBQUksR0FBVyxnQkFBZ0IsQ0FBQyxlQUFlLENBQUM7UUFDaEQsZUFBVSxHQUFZLEtBQUssQ0FBQztRQU8xQixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQywwQkFBMEIsQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUN2RSxDQUFDLFFBQVEsRUFBRSxFQUFFO1lBQ1gsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ2pDLElBQUksQ0FBQyxVQUFVLEdBQUcsUUFBUSxDQUFDO1FBQzdCLENBQUMsQ0FDRixDQUFDO0lBQ0osQ0FBQztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDekMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUU7WUFDL0MsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDMUIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUMxQyxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxpQkFBaUIsQ0FBQyxHQUFZO1FBQzVCLElBQUksQ0FBQyxJQUFJLEdBQUcsR0FBRztZQUNiLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxjQUFjO1lBQ2pDLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxlQUFlLENBQUM7SUFDdkMsQ0FBQztJQUVELE9BQU8sQ0FBQyxJQUFZO1FBQ2xCLElBQUksSUFBSSxLQUFLLElBQUksSUFBSSxJQUFJLEtBQUssT0FBTyxFQUFFO1lBQ3JDLElBQUksQ0FBQyxRQUFRLEdBQUcsb0JBQW9CLENBQUM7U0FDdEM7YUFBTTtZQUNMLElBQUksQ0FBQyxRQUFRLEdBQUcsb0JBQW9CLENBQUM7U0FDdEM7SUFDSCxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDbEMsQ0FBQzs7NkdBM0NVLGVBQWU7aUdBQWYsZUFBZSxnRkNkNUIscVlBbUJBOzRGRExhLGVBQWU7a0JBSjNCLFNBQVM7K0JBQ0Usb0JBQW9CO3VKQUlyQixFQUFFO3NCQUFWLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUcmFuc2xhdGVTZXJ2aWNlIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XG5pbXBvcnQgeyBHT1ZfQ0FOQURBX0xPR09TIH0gZnJvbSAnLi4vaGVhZGVyLWZvb3Rlci1jb25zdC5jb21wb25lbnQnO1xuXG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IExhbmd1YWdlSGVhZGVyRm9vdGVyU3dpdGNoU2VydmljZSB9IGZyb20gJy4uL2xhbmd1YWdlLXN3aXRjaC9sYW5ndWFnZS1oZWFkZXItZm9vdGVyLXN3aXRjaC5zZXJ2aWNlJztcblxuZXhwb3J0IGNvbnN0IEdPVl9MT0dPX0FMVF9URVhUX0VOID0gJ0NhbmFkYSB3b3JkbWFyayc7XG5leHBvcnQgY29uc3QgR09WX0xPR09fQUxUX1RFWFRfRlIgPSAnRlIgQ2FuYWRhIHdvcmRtYXJrJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnaXJjYy1jbC1saWItZm9vdGVyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2Zvb3Rlci5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgRm9vdGVyQ29tcG9uZW50IHtcbiAgQElucHV0KCkgaWQgPSAnJztcbiAgYWx0SW1hZ2UgPSAnJztcbiAgbG9nbzogc3RyaW5nID0gR09WX0NBTkFEQV9MT0dPUy5mb290ZXJMaWdodExvZ287XG4gIGlzRGFya01vZGU6IGJvb2xlYW4gPSBmYWxzZTtcbiAgcHJpdmF0ZSBzdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHRyYW5zbGF0ZTogVHJhbnNsYXRlU2VydmljZSxcbiAgICBwcml2YXRlIGxhbmd1YWdlSGVhZGVyRm9vdGVyU3dpdGNoOiBMYW5ndWFnZUhlYWRlckZvb3RlclN3aXRjaFNlcnZpY2VcbiAgKSB7XG4gICAgdGhpcy5zdWJzY3JpcHRpb24gPSB0aGlzLmxhbmd1YWdlSGVhZGVyRm9vdGVyU3dpdGNoLmlzRGFya01vZGUkLnN1YnNjcmliZShcbiAgICAgIChyZXNwb25zZSkgPT4ge1xuICAgICAgICB0aGlzLnVwZGF0ZUZvb3RlckltYWdlKHJlc3BvbnNlKTtcbiAgICAgICAgdGhpcy5pc0RhcmtNb2RlID0gcmVzcG9uc2U7XG4gICAgICB9XG4gICAgKTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuc2V0TGFuZyh0aGlzLnRyYW5zbGF0ZS5jdXJyZW50TGFuZyk7XG4gICAgdGhpcy50cmFuc2xhdGUub25MYW5nQ2hhbmdlLnN1YnNjcmliZSgoY2hhbmdlKSA9PiB7XG4gICAgICB0aGlzLnNldExhbmcoY2hhbmdlLmxhbmcpO1xuICAgICAgdGhpcy51cGRhdGVGb290ZXJJbWFnZSh0aGlzLmlzRGFya01vZGUpO1xuICAgIH0pO1xuICB9XG5cbiAgdXBkYXRlRm9vdGVySW1hZ2UocmVzOiBib29sZWFuKSB7XG4gICAgdGhpcy5sb2dvID0gcmVzXG4gICAgICA/IEdPVl9DQU5BREFfTE9HT1MuZm9vdGVyRGFya0xvZ29cbiAgICAgIDogR09WX0NBTkFEQV9MT0dPUy5mb290ZXJMaWdodExvZ287XG4gIH1cblxuICBzZXRMYW5nKGxhbmc6IHN0cmluZykge1xuICAgIGlmIChsYW5nID09PSAnZW4nIHx8IGxhbmcgPT09ICdlbi1VUycpIHtcbiAgICAgIHRoaXMuYWx0SW1hZ2UgPSBHT1ZfTE9HT19BTFRfVEVYVF9FTjtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5hbHRJbWFnZSA9IEdPVl9MT0dPX0FMVF9URVhUX0ZSO1xuICAgIH1cbiAgfVxuXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgIHRoaXMuc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gIH1cbn1cbiIsIjxmb290ZXJcbiAgY2xhc3M9XCJpcmNjLWNsLWxpYi1mb290ZXIgZm9vdGluZ1wiXG4gIHJvbGU9XCJjb250ZW50aW5mb1wiXG4+XG4gIDxkaXZcbiAgICBjbGFzcz1cImdyaWQtY29udGFpbmVyXCJcbiAgICBbaWRdPVwiaWRcIlxuICA+XG4gICAgPGRpdiBjbGFzcz1cIml0ZW0xIGJvZHkzXCI+XG4gICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gICAgPC9kaXY+XG4gICAgPHBpY3R1cmUgY2xhc3M9XCJpdGVtMlwiPlxuICAgICAgPGltZ1xuICAgICAgICBbc3JjXT1cIidkYXRhOmltYWdlL3BuZztiYXNlNjQsJyArIGxvZ29cIlxuICAgICAgICBhbHQ9XCJ7eyBhbHRJbWFnZSB9fVwiXG4gICAgICAvPlxuICAgIDwvcGljdHVyZT5cbiAgPC9kaXY+XG48L2Zvb3Rlcj5cbiJdfQ==