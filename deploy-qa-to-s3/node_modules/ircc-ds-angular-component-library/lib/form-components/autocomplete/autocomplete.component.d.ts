import { AfterContentChecked, ChangeDetectorRef, ElementRef, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { IErrorPairs } from '../../../shared/interfaces/component-configs';
import { IInputComponentConfig } from '../input/input.component';
import { DSSizes, IFlyoutConfig, IFlyoutOptionConfig } from '../../../public-api';
import { DomSanitizer } from '@angular/platform-browser';
import * as i0 from "@angular/core";
export interface IAutocompleteComponent {
    id: string;
    label?: string;
    hint?: string;
    desc?: string;
    placeholder?: string;
    size: keyof typeof DSSizes;
    formGroup: FormGroup;
    suggestions: string[];
    required?: boolean;
    errorMessages?: IErrorPairs[];
}
export declare enum matchType {
    infix = "infix",
    prefix = "prefix"
}
export declare class AutoCompleteComponent implements OnInit, OnChanges, AfterContentChecked {
    private domSanitizer;
    private changeDetectorRef;
    inputAutocomplete: ElementRef | undefined;
    formGroupEmpty: FormGroup;
    config: IAutocompleteComponent;
    matchType?: keyof typeof matchType;
    showSuggestions: boolean;
    formGroup: FormGroup<any>;
    inputComponent: IInputComponentConfig;
    flyout: IFlyoutConfig;
    constructor(domSanitizer: DomSanitizer, changeDetectorRef: ChangeDetectorRef);
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterContentChecked(): void;
    ngOnInit(): void;
    spreadFlyoutOption(value: string): IFlyoutOptionConfig;
    onFocus(event: any): void;
    isSelected(event: any): void;
    validateInternal(data: string): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AutoCompleteComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AutoCompleteComponent, "ircc-cl-lib-autocomplete", never, { "config": "config"; "formGroup": "formGroup"; }, {}, never, never, false>;
}
